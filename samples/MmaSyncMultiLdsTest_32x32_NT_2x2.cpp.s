
# __CLANG_OFFLOAD_BUNDLE____START__ hip-amdgcn-amd-amdhsa-gfx908:xnack-
	.text
	.amdgcn_target "amdgcn-amd-amdhsa--gfx908:xnack-"
	.protected	_Z15mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_ ; -- Begin function _Z15mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_
	.globl	_Z15mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_
	.p2align	8
	.type	_Z15mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_,@function
_Z15mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_: ; @_Z15mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_
; %bb.0:                                ; %entry
	s_load_dwordx4 s[36:39], s[6:7], 0x0
	s_load_dword s0, s[4:5], 0x4
	s_waitcnt lgkmcnt(0)
	s_and_b32 s2, s0, 0xffff
	s_mul_i32 s8, s8, s2
	v_add_u32_e32 v2, s8, v0
	v_and_b32_e32 v66, 0xffffffc0, v2
	v_add_u32_e32 v2, 64, v66
	v_cmp_ge_u32_e32 vcc, s36, v2
	s_and_saveexec_b64 s[4:5], vcc
	s_cbranch_execz BB0_22
; %bb.1:                                ; %land.lhs.true
	s_lshr_b32 s33, s0, 16
	s_mul_i32 s9, s9, s33
	v_add_lshl_u32 v68, s9, v1, 5
	v_add_u32_e32 v2, 32, v68
	v_cmp_ge_u32_e32 vcc, s37, v2
	v_cmp_gt_u32_e64 s[0:1], s38, 8
	s_and_b64 s[0:1], s[0:1], vcc
	s_and_b64 exec, exec, s[0:1]
	s_cbranch_execz BB0_22
; %bb.2:                                ; %if.then
	s_load_dwordx4 s[24:27], s[6:7], 0x30
	s_load_dwordx4 s[28:31], s[6:7], 0x40
	s_mov_b32 s8, 0
	s_waitcnt lgkmcnt(0)
	v_cmp_neq_f32_e64 s[0:1], s28, 0
	s_and_b64 vcc, exec, s[0:1]
	s_cbranch_vccnz BB0_4
; %bb.3:                                ; %if.then.if.end304_crit_edge
	v_lshrrev_b32_e32 v34, 3, v0
	s_mov_b64 s[0:1], 0
	s_branch BB0_5
BB0_4:
	s_mov_b64 s[0:1], -1
                                        ; implicit-def: $vgpr34
BB0_5:                                  ; %Flow1355
	s_mov_b32 s23, s8
	s_mov_b32 s9, s8
	s_mov_b32 s10, s8
	s_mov_b32 s11, s8
	s_mov_b32 s12, s8
	s_mov_b32 s13, s8
	s_mov_b32 s14, s8
	s_mov_b32 s15, s8
	s_mov_b32 s16, s8
	s_mov_b32 s17, s8
	s_mov_b32 s18, s8
	s_mov_b32 s19, s8
	s_mov_b32 s20, s8
	s_mov_b32 s21, s8
	s_mov_b32 s22, s8
	v_mov_b32_e32 v33, s23
	v_mov_b32_e32 v32, s22
	v_mov_b32_e32 v31, s21
	v_mov_b32_e32 v30, s20
	v_mov_b32_e32 v29, s19
	v_mov_b32_e32 v28, s18
	v_mov_b32_e32 v27, s17
	v_mov_b32_e32 v26, s16
	v_mov_b32_e32 v25, s15
	v_mov_b32_e32 v24, s14
	v_mov_b32_e32 v23, s13
	v_mov_b32_e32 v22, s12
	v_mov_b32_e32 v21, s11
	v_mov_b32_e32 v20, s10
	v_mov_b32_e32 v19, s9
	v_mov_b32_e32 v18, s8
	s_load_dwordx8 s[4:11], s[6:7], 0x10
	v_mov_b32_e32 v2, v18
	s_andn2_b64 vcc, exec, s[0:1]
	v_mov_b32_e32 v3, v19
	v_mov_b32_e32 v4, v20
	v_mov_b32_e32 v5, v21
	v_mov_b32_e32 v6, v22
	v_mov_b32_e32 v7, v23
	v_mov_b32_e32 v8, v24
	v_mov_b32_e32 v9, v25
	v_mov_b32_e32 v10, v26
	v_mov_b32_e32 v11, v27
	v_mov_b32_e32 v12, v28
	v_mov_b32_e32 v13, v29
	v_mov_b32_e32 v14, v30
	v_mov_b32_e32 v15, v31
	v_mov_b32_e32 v16, v32
	v_mov_b32_e32 v17, v33
	s_cbranch_vccnz BB0_19
; %bb.6:                                ; %for.cond37.preheader
	v_lshrrev_b32_e32 v2, 2, v0
	v_and_b32_e32 v2, 48, v2
	v_add_u32_e32 v18, 0, v2
	s_lshr_b32 s0, s2, 3
	v_lshrrev_b32_e32 v34, 3, v0
	v_add_u32_e32 v19, 8, v18
	s_and_b32 s14, s0, 0xf8
	v_cmp_eq_u32_e32 vcc, 0, v1
	s_and_saveexec_b64 s[2:3], vcc
	s_cbranch_execz BB0_8
; %bb.7:                                ; %if.then79
	v_and_b32_e32 v2, 4, v34
	v_mul_lo_u32 v2, v2, s24
	v_mov_b32_e32 v67, 0
	v_and_b32_e32 v3, 31, v0
	v_lshlrev_b64 v[6:7], 1, v[66:67]
	v_add_u32_e32 v2, v2, v3
	v_ashrrev_i32_e32 v3, 31, v2
	v_add_u32_e32 v4, s24, v2
	s_waitcnt lgkmcnt(0)
	v_mov_b32_e32 v8, s5
	v_add_co_u32_e64 v16, s[0:1], s4, v6
	v_lshlrev_b64 v[2:3], 1, v[2:3]
	v_addc_co_u32_e64 v17, s[0:1], v8, v7, s[0:1]
	v_add_co_u32_e64 v6, s[0:1], v16, v2
	v_addc_co_u32_e64 v7, s[0:1], v17, v3, s[0:1]
	v_add_co_u32_e64 v20, s[0:1], 64, v16
	v_addc_co_u32_e64 v21, s[0:1], 0, v17, s[0:1]
	v_ashrrev_i32_e32 v5, 31, v4
	v_add_co_u32_e64 v2, s[0:1], v20, v2
	v_lshlrev_b64 v[8:9], 1, v[4:5]
	v_addc_co_u32_e64 v3, s[0:1], v21, v3, s[0:1]
	v_add_co_u32_e64 v10, s[0:1], v16, v8
	v_add_u32_e32 v4, s24, v4
	v_addc_co_u32_e64 v11, s[0:1], v17, v9, s[0:1]
	v_ashrrev_i32_e32 v5, 31, v4
	v_add_co_u32_e64 v8, s[0:1], v20, v8
	v_lshlrev_b64 v[12:13], 1, v[4:5]
	v_addc_co_u32_e64 v9, s[0:1], v21, v9, s[0:1]
	v_add_co_u32_e64 v14, s[0:1], v16, v12
	v_add_u32_e32 v4, s24, v4
	v_ashrrev_i32_e32 v5, 31, v4
	v_addc_co_u32_e64 v15, s[0:1], v17, v13, s[0:1]
	v_add_co_u32_e64 v12, s[0:1], v20, v12
	v_lshlrev_b64 v[4:5], 1, v[4:5]
	v_addc_co_u32_e64 v13, s[0:1], v21, v13, s[0:1]
	v_add_co_u32_e64 v16, s[0:1], v16, v4
	v_addc_co_u32_e64 v17, s[0:1], v17, v5, s[0:1]
	v_add_co_u32_e64 v4, s[0:1], v20, v4
	v_addc_co_u32_e64 v5, s[0:1], v21, v5, s[0:1]
	global_load_ushort v6, v[6:7], off
	global_load_ushort v7, v[10:11], off
	global_load_ushort v10, v[14:15], off
	global_load_ushort v11, v[16:17], off
	global_load_ushort v3, v[2:3], off
	global_load_ushort v8, v[8:9], off
	global_load_ushort v9, v[12:13], off
	global_load_ushort v5, v[4:5], off
	s_lshl_b32 s0, s33, 2
	v_and_b32_e32 v2, 63, v0
	s_add_i32 s0, s0, s14
	v_mov_b32_e32 v4, 0xffff
	v_mul_u32_u24_e32 v2, s0, v2
	v_lshl_add_u32 v12, v2, 1, v18
	s_waitcnt vmcnt(7)
	v_and_b32_e32 v2, v4, v6
	s_waitcnt vmcnt(6)
	v_lshl_or_b32 v2, v7, 16, v2
	s_waitcnt vmcnt(5)
	v_and_b32_e32 v6, v4, v10
	s_waitcnt vmcnt(3)
	v_and_b32_e32 v3, v4, v3
	s_waitcnt vmcnt(1)
	v_and_b32_e32 v7, v4, v9
	v_lshl_or_b32 v4, v8, 16, v3
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v5, v5, 16, v7
	v_lshl_or_b32 v3, v11, 16, v6
	ds_write2_b64 v12, v[2:3], v[4:5] offset1:1
BB0_8:                                  ; %if.end
	s_or_b64 exec, exec, s[2:3]
	v_and_b32_e32 v2, 0xc0, v0
	v_cmp_eq_u32_e64 s[0:1], 0, v2
	v_cmp_ne_u32_e64 s[2:3], 0, v2
                                        ; implicit-def: $vgpr12
                                        ; implicit-def: $vgpr11
                                        ; implicit-def: $vgpr10
                                        ; implicit-def: $vgpr2_vgpr3
                                        ; implicit-def: $vgpr4_vgpr5
                                        ; implicit-def: $vgpr6_vgpr7
                                        ; implicit-def: $vgpr8_vgpr9
	s_and_saveexec_b64 s[12:13], s[2:3]
	s_xor_b64 s[2:3], exec, s[12:13]
	s_cbranch_execz BB0_10
; %bb.9:                                ; %if.end.if.end130_crit_edge
	v_and_b32_e32 v10, 4, v34
	v_mul_lo_u32 v2, v10, s25
	v_and_b32_e32 v11, 31, v0
	s_lshl_b32 s12, s33, 2
	s_add_i32 s12, s12, s14
	v_add_u32_e32 v2, v2, v11
	v_add_u32_e32 v4, s25, v2
	v_add_u32_e32 v6, s25, v4
	v_and_b32_e32 v3, 63, v0
	v_add_u32_e32 v8, s25, v6
	v_mul_u32_u24_e32 v12, s12, v3
	v_ashrrev_i32_e32 v3, 31, v2
	v_ashrrev_i32_e32 v5, 31, v4
	v_ashrrev_i32_e32 v7, 31, v6
	v_ashrrev_i32_e32 v9, 31, v8
BB0_10:                                 ; %Flow
	s_or_saveexec_b64 s[12:13], s[2:3]
	s_lshl_b32 s2, s14, 1
	s_add_i32 s2, s2, 0
	v_lshl_add_u32 v1, v1, 3, s2
	s_xor_b64 exec, exec, s[12:13]
	s_cbranch_execz BB0_12
; %bb.11:                               ; %if.then105
	v_and_b32_e32 v10, 4, v34
	v_mul_lo_u32 v5, v10, s25
	v_mov_b32_e32 v69, 0
	v_lshlrev_b64 v[2:3], 1, v[68:69]
	v_and_b32_e32 v11, 31, v0
	s_waitcnt lgkmcnt(0)
	v_add_co_u32_e64 v22, s[2:3], s6, v2
	v_mov_b32_e32 v4, s7
	v_add_u32_e32 v2, v5, v11
	v_addc_co_u32_e64 v23, s[2:3], v4, v3, s[2:3]
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshlrev_b64 v[4:5], 1, v[2:3]
	v_add_co_u32_e64 v12, s[2:3], v22, v4
	v_add_u32_e32 v4, s25, v2
	v_addc_co_u32_e64 v13, s[2:3], v23, v5, s[2:3]
	v_ashrrev_i32_e32 v5, 31, v4
	v_lshlrev_b64 v[6:7], 1, v[4:5]
	v_add_co_u32_e64 v14, s[2:3], v22, v6
	v_add_u32_e32 v6, s25, v4
	v_addc_co_u32_e64 v15, s[2:3], v23, v7, s[2:3]
	v_ashrrev_i32_e32 v7, 31, v6
	v_lshlrev_b64 v[8:9], 1, v[6:7]
	v_add_co_u32_e64 v16, s[2:3], v22, v8
	v_add_u32_e32 v8, s25, v6
	v_addc_co_u32_e64 v17, s[2:3], v23, v9, s[2:3]
	v_ashrrev_i32_e32 v9, 31, v8
	v_lshlrev_b64 v[20:21], 1, v[8:9]
	v_add_co_u32_e64 v20, s[2:3], v22, v20
	v_addc_co_u32_e64 v21, s[2:3], v23, v21, s[2:3]
	global_load_ushort v13, v[12:13], off
	global_load_ushort v14, v[14:15], off
	global_load_ushort v15, v[16:17], off
	global_load_ushort v16, v[20:21], off
	s_lshl_b32 s2, s33, 2
	v_mov_b32_e32 v17, 0xffff
	v_and_b32_e32 v12, 63, v0
	s_add_i32 s2, s2, s14
	v_mul_u32_u24_e32 v12, s2, v12
	s_waitcnt vmcnt(3)
	v_and_b32_e32 v13, v17, v13
	s_waitcnt vmcnt(2)
	v_lshl_or_b32 v13, v14, 16, v13
	s_waitcnt vmcnt(1)
	v_and_b32_e32 v14, v17, v15
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v14, v16, 16, v14
	v_lshl_add_u32 v15, v12, 1, v1
	ds_write_b64 v15, v[13:14]
BB0_12:                                 ; %if.end130
	s_or_b64 exec, exec, s[12:13]
	v_mul_lo_u32 v10, v10, s24
	v_lshlrev_b32_e32 v20, 1, v12
	v_accvgpr_write_b32 a0, 0
	v_accvgpr_write_b32 a1, 0
	v_add_u32_e32 v10, v10, v11
	v_add_u32_e32 v12, s24, v10
	v_add_u32_e32 v14, s24, v12
	v_accvgpr_write_b32 a2, 0
	v_accvgpr_write_b32 a3, 0
	v_accvgpr_write_b32 a4, 0
	v_accvgpr_write_b32 a5, 0
	v_accvgpr_write_b32 a6, 0
	v_accvgpr_write_b32 a7, 0
	v_accvgpr_write_b32 a8, 0
	v_accvgpr_write_b32 a9, 0
	v_accvgpr_write_b32 a10, 0
	v_accvgpr_write_b32 a11, 0
	v_accvgpr_write_b32 a12, 0
	v_accvgpr_write_b32 a13, 0
	v_accvgpr_write_b32 a14, 0
	v_accvgpr_write_b32 a15, 0
	v_accvgpr_write_b32 a31, 0
	v_add_u32_e32 v16, s24, v14
	s_lshl_b32 s14, s24, 3
	s_lshl_b32 s15, s25, 3
	v_accvgpr_write_b32 a30, 0
	v_accvgpr_write_b32 a29, 0
	v_accvgpr_write_b32 a28, 0
	v_accvgpr_write_b32 a27, 0
	v_accvgpr_write_b32 a26, 0
	v_accvgpr_write_b32 a25, 0
	v_accvgpr_write_b32 a24, 0
	v_accvgpr_write_b32 a23, 0
	v_accvgpr_write_b32 a22, 0
	v_accvgpr_write_b32 a21, 0
	v_accvgpr_write_b32 a20, 0
	v_accvgpr_write_b32 a19, 0
	v_accvgpr_write_b32 a18, 0
	v_accvgpr_write_b32 a17, 0
	v_accvgpr_write_b32 a16, 0
	v_add_u32_e32 v23, v18, v20
	v_add_u32_e32 v1, v1, v20
	v_add_u32_e32 v22, v19, v20
	v_ashrrev_i32_e32 v11, 31, v10
	v_ashrrev_i32_e32 v13, 31, v12
	v_ashrrev_i32_e32 v15, 31, v14
	v_ashrrev_i32_e32 v17, 31, v16
	v_add_u32_e32 v18, s14, v66
	v_add_u32_e32 v20, s15, v68
	s_mov_b32 s16, 8
	s_branch BB0_14
BB0_13:                                 ; %if.end244
                                        ;   in Loop: Header=BB0_14 Depth=1
	s_or_b64 exec, exec, s[12:13]
	s_add_i32 s16, s16, 8
	v_add_u32_e32 v18, s14, v18
	s_cmp_ge_u32 s16, s38
	v_add_u32_e32 v20, s15, v20
	s_cbranch_scc1 BB0_18
BB0_14:                                 ; %for.body134
                                        ; =>This Inner Loop Header: Depth=1
	s_waitcnt lgkmcnt(0)
	s_barrier 
	ds_read_b64 v[24:25], v23
	ds_read_b64 v[26:27], v1
	s_waitcnt lgkmcnt(0)
	v_mfma_f32_32x32x8f16 a[16:31], v[24:25], v[26:27], a[16:31]
	ds_read_b64 v[24:25], v22
	s_waitcnt lgkmcnt(0)
	s_barrier 
	v_mfma_f32_32x32x8f16 a[0:15], v[24:25], v[26:27], a[0:15]
	s_and_saveexec_b64 s[12:13], vcc
	s_cbranch_execz BB0_16
; %bb.15:                               ; %if.then191
                                        ;   in Loop: Header=BB0_14 Depth=1
	v_mov_b32_e32 v19, 0
	v_lshlrev_b64 v[24:25], 1, v[18:19]
	v_mov_b32_e32 v27, v19
	v_add_u32_e32 v26, 32, v18
	v_mov_b32_e32 v21, s5
	v_add_co_u32_e64 v39, s[2:3], s4, v24
	v_lshlrev_b64 v[26:27], 1, v[26:27]
	v_addc_co_u32_e64 v21, s[2:3], v21, v25, s[2:3]
	v_lshlrev_b64 v[24:25], 1, v[10:11]
	v_mov_b32_e32 v19, s5
	v_add_co_u32_e64 v41, s[2:3], s4, v26
	v_addc_co_u32_e64 v19, s[2:3], v19, v27, s[2:3]
	v_add_co_u32_e64 v26, s[2:3], v39, v24
	v_addc_co_u32_e64 v27, s[2:3], v21, v25, s[2:3]
	v_add_co_u32_e64 v24, s[2:3], v41, v24
	v_lshlrev_b64 v[28:29], 1, v[12:13]
	v_addc_co_u32_e64 v25, s[2:3], v19, v25, s[2:3]
	v_add_co_u32_e64 v30, s[2:3], v39, v28
	v_addc_co_u32_e64 v31, s[2:3], v21, v29, s[2:3]
	v_add_co_u32_e64 v28, s[2:3], v41, v28
	v_lshlrev_b64 v[32:33], 1, v[14:15]
	v_addc_co_u32_e64 v29, s[2:3], v19, v29, s[2:3]
	v_add_co_u32_e64 v35, s[2:3], v39, v32
	v_addc_co_u32_e64 v36, s[2:3], v21, v33, s[2:3]
	v_add_co_u32_e64 v32, s[2:3], v41, v32
	v_lshlrev_b64 v[37:38], 1, v[16:17]
	v_addc_co_u32_e64 v33, s[2:3], v19, v33, s[2:3]
	v_add_co_u32_e64 v39, s[2:3], v39, v37
	v_addc_co_u32_e64 v40, s[2:3], v21, v38, s[2:3]
	v_add_co_u32_e64 v37, s[2:3], v41, v37
	v_addc_co_u32_e64 v38, s[2:3], v19, v38, s[2:3]
	global_load_ushort v19, v[26:27], off
	global_load_ushort v21, v[30:31], off
	global_load_ushort v26, v[35:36], off
	global_load_ushort v27, v[39:40], off
	global_load_ushort v30, v[24:25], off
	global_load_ushort v28, v[28:29], off
	global_load_ushort v29, v[32:33], off
	global_load_ushort v31, v[37:38], off
	v_mov_b32_e32 v32, 0xffff
	s_waitcnt vmcnt(7)
	v_and_b32_e32 v19, v32, v19
	s_waitcnt vmcnt(5)
	v_and_b32_e32 v24, v32, v26
	s_waitcnt vmcnt(4)
	v_lshl_or_b32 v25, v27, 16, v24
	v_lshl_or_b32 v24, v21, 16, v19
	s_waitcnt vmcnt(3)
	v_and_b32_e32 v21, v32, v30
	s_waitcnt vmcnt(1)
	v_and_b32_e32 v19, v32, v29
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v27, v31, 16, v19
	v_lshl_or_b32 v26, v28, 16, v21
	ds_write2_b64 v23, v[24:25], v[26:27] offset1:1
BB0_16:                                 ; %if.end216
                                        ;   in Loop: Header=BB0_14 Depth=1
	s_or_b64 exec, exec, s[12:13]
	s_and_saveexec_b64 s[12:13], s[0:1]
	s_cbranch_execz BB0_13
; %bb.17:                               ; %if.then219
                                        ;   in Loop: Header=BB0_14 Depth=1
	v_mov_b32_e32 v21, 0
	v_lshlrev_b64 v[24:25], 1, v[20:21]
	v_mov_b32_e32 v19, s7
	v_add_co_u32_e64 v21, s[2:3], s6, v24
	v_addc_co_u32_e64 v19, s[2:3], v19, v25, s[2:3]
	v_lshlrev_b64 v[24:25], 1, v[2:3]
	v_lshlrev_b64 v[26:27], 1, v[4:5]
	v_add_co_u32_e64 v24, s[2:3], v21, v24
	v_addc_co_u32_e64 v25, s[2:3], v19, v25, s[2:3]
	v_add_co_u32_e64 v26, s[2:3], v21, v26
	v_lshlrev_b64 v[28:29], 1, v[6:7]
	v_addc_co_u32_e64 v27, s[2:3], v19, v27, s[2:3]
	v_add_co_u32_e64 v28, s[2:3], v21, v28
	v_lshlrev_b64 v[30:31], 1, v[8:9]
	v_addc_co_u32_e64 v29, s[2:3], v19, v29, s[2:3]
	v_add_co_u32_e64 v30, s[2:3], v21, v30
	v_addc_co_u32_e64 v31, s[2:3], v19, v31, s[2:3]
	global_load_ushort v19, v[24:25], off
	global_load_ushort v21, v[26:27], off
	global_load_ushort v24, v[28:29], off
	global_load_ushort v25, v[30:31], off
	v_mov_b32_e32 v26, 0xffff
	s_waitcnt vmcnt(3)
	v_and_b32_e32 v19, v26, v19
	s_waitcnt vmcnt(1)
	v_and_b32_e32 v24, v26, v24
	s_waitcnt vmcnt(0)
	v_lshl_or_b32 v25, v25, 16, v24
	v_lshl_or_b32 v24, v21, 16, v19
	ds_write_b64 v1, v[24:25]
	s_branch BB0_13
BB0_18:                                 ; %for.cond.cleanup133
	s_waitcnt lgkmcnt(0)
	s_barrier 
	ds_read_b64 v[2:3], v23
	ds_read_b64 v[4:5], v1
	s_waitcnt lgkmcnt(0)
	v_mfma_f32_32x32x8f16 a[16:31], v[2:3], v[4:5], a[16:31]
	ds_read_b64 v[1:2], v22
	s_waitcnt lgkmcnt(0)
	v_mfma_f32_32x32x8f16 a[0:15], v[1:2], v[4:5], a[0:15]
	s_nop 7
	s_nop 6
	v_accvgpr_read_b32 v33, a31
	v_accvgpr_read_b32 v32, a30
	v_accvgpr_read_b32 v31, a29
	v_accvgpr_read_b32 v30, a28
	v_accvgpr_read_b32 v29, a27
	v_accvgpr_read_b32 v28, a26
	v_accvgpr_read_b32 v27, a25
	v_accvgpr_read_b32 v26, a24
	v_accvgpr_read_b32 v25, a23
	v_accvgpr_read_b32 v24, a22
	v_accvgpr_read_b32 v17, a15
	v_accvgpr_read_b32 v23, a21
	v_accvgpr_read_b32 v22, a20
	v_accvgpr_read_b32 v21, a19
	v_accvgpr_read_b32 v20, a18
	v_accvgpr_read_b32 v19, a17
	v_accvgpr_read_b32 v18, a16
	v_accvgpr_read_b32 v16, a14
	v_accvgpr_read_b32 v15, a13
	v_accvgpr_read_b32 v14, a12
	v_accvgpr_read_b32 v13, a11
	v_accvgpr_read_b32 v12, a10
	v_accvgpr_read_b32 v11, a9
	v_accvgpr_read_b32 v10, a8
	v_accvgpr_read_b32 v9, a7
	v_accvgpr_read_b32 v8, a6
	v_accvgpr_read_b32 v7, a5
	v_accvgpr_read_b32 v6, a4
	v_accvgpr_read_b32 v5, a3
	v_accvgpr_read_b32 v4, a2
	v_accvgpr_read_b32 v3, a1
	v_accvgpr_read_b32 v2, a0
BB0_19:                                 ; %if.end304
	s_mov_b32 s0, 0
	s_mov_b32 s3, s0
	v_and_b32_e32 v67, 31, v0
	v_and_b32_e32 v0, 4, v34
	s_mov_b32 s1, s0
	s_mov_b32 s2, s0
	v_mov_b32_e32 v37, s3
	s_waitcnt lgkmcnt(0)
	v_cmp_eq_f32_e64 s[4:5], s29, 0
	v_mov_b32_e32 v36, s2
	v_mov_b32_e32 v35, s1
	v_mov_b32_e32 v34, s0
	v_mov_b32_e32 v41, v37
	v_mov_b32_e32 v45, v37
	v_mov_b32_e32 v49, v37
	v_mov_b32_e32 v53, v37
	v_mov_b32_e32 v57, v37
	v_mov_b32_e32 v61, v37
	v_mov_b32_e32 v65, v37
	v_or_b32_e32 v1, 32, v66
	s_and_b64 vcc, exec, s[4:5]
	v_mov_b32_e32 v40, v36
	v_mov_b32_e32 v39, v35
	v_mov_b32_e32 v38, v34
	v_mov_b32_e32 v44, v36
	v_mov_b32_e32 v43, v35
	v_mov_b32_e32 v42, v34
	v_mov_b32_e32 v48, v36
	v_mov_b32_e32 v47, v35
	v_mov_b32_e32 v46, v34
	v_mov_b32_e32 v52, v36
	v_mov_b32_e32 v51, v35
	v_mov_b32_e32 v50, v34
	v_mov_b32_e32 v56, v36
	v_mov_b32_e32 v55, v35
	v_mov_b32_e32 v54, v34
	v_mov_b32_e32 v60, v36
	v_mov_b32_e32 v59, v35
	v_mov_b32_e32 v58, v34
	v_mov_b32_e32 v64, v36
	v_mov_b32_e32 v63, v35
	v_mov_b32_e32 v62, v34
	s_cbranch_vccnz BB0_21
; %bb.20:                               ; %for.cond329.preheader
	v_mul_lo_u32 v34, v67, s26
	v_mul_lo_u32 v40, v68, s26
	v_mov_b32_e32 v35, 0
	v_add_u32_e32 v36, v34, v0
	v_add_u32_e32 v34, v40, v66
	v_lshlrev_b64 v[38:39], 2, v[34:35]
	v_ashrrev_i32_e32 v37, 31, v36
	v_mov_b32_e32 v34, s9
	v_add_co_u32_e32 v38, vcc, s8, v38
	v_lshlrev_b64 v[36:37], 2, v[36:37]
	v_addc_co_u32_e32 v34, vcc, v34, v39, vcc
	v_add_co_u32_e32 v38, vcc, v38, v36
	v_addc_co_u32_e32 v39, vcc, v34, v37, vcc
	v_add_u32_e32 v34, v40, v1
	v_lshlrev_b64 v[34:35], 2, v[34:35]
	v_mov_b32_e32 v40, s9
	v_add_co_u32_e32 v34, vcc, s8, v34
	v_addc_co_u32_e32 v35, vcc, v40, v35, vcc
	v_add_co_u32_e32 v34, vcc, v34, v36
	v_addc_co_u32_e32 v35, vcc, v35, v37, vcc
	global_load_dwordx4 v[62:65], v[38:39], off
	global_load_dwordx4 v[58:61], v[38:39], off offset:32
	global_load_dwordx4 v[54:57], v[38:39], off offset:64
	global_load_dwordx4 v[50:53], v[38:39], off offset:96
	global_load_dwordx4 v[46:49], v[34:35], off
	global_load_dwordx4 v[42:45], v[34:35], off offset:32
	global_load_dwordx4 v[38:41], v[34:35], off offset:64
	global_load_dwordx4 v[34:37], v[34:35], off offset:96
BB0_21:                                 ; %if.end353
	s_waitcnt vmcnt(6)
	v_mul_f32_e32 v60, s29, v60
	v_fmac_f32_e32 v60, s28, v24
	s_waitcnt vmcnt(2)
	v_mul_f32_e32 v24, s29, v44
	v_fmac_f32_e32 v24, s28, v8
	v_mul_lo_u32 v8, v68, s27
	v_mul_f32_e32 v62, s29, v62
	v_mul_f32_e32 v63, s29, v63
	v_mul_f32_e32 v64, s29, v64
	v_mul_f32_e32 v65, s29, v65
	v_fmac_f32_e32 v62, s28, v18
	v_mul_f32_e32 v18, s29, v46
	v_fmac_f32_e32 v63, s28, v19
	v_mul_f32_e32 v19, s29, v47
	v_fmac_f32_e32 v64, s28, v20
	v_mul_f32_e32 v20, s29, v48
	v_fmac_f32_e32 v65, s28, v21
	v_mul_f32_e32 v21, s29, v49
	v_fmac_f32_e32 v18, s28, v2
	v_fmac_f32_e32 v19, s28, v3
	v_add_u32_e32 v2, v8, v66
	v_mov_b32_e32 v3, 0
	v_fmac_f32_e32 v20, s28, v4
	v_fmac_f32_e32 v21, s28, v5
	v_lshlrev_b64 v[4:5], 2, v[2:3]
	v_mul_lo_u32 v2, v67, s27
	v_mul_f32_e32 v58, s29, v58
	v_mul_f32_e32 v59, s29, v59
	v_mul_f32_e32 v61, s29, v61
	v_fmac_f32_e32 v58, s28, v22
	v_mul_f32_e32 v22, s29, v42
	v_fmac_f32_e32 v59, s28, v23
	v_mul_f32_e32 v23, s29, v43
	v_fmac_f32_e32 v61, s28, v25
	v_mul_f32_e32 v25, s29, v45
	v_fmac_f32_e32 v22, s28, v6
	v_fmac_f32_e32 v23, s28, v7
	v_add_co_u32_e32 v7, vcc, s10, v4
	v_add_u32_e32 v4, v2, v0
	v_mov_b32_e32 v6, s11
	v_fmac_f32_e32 v25, s28, v9
	v_addc_co_u32_e32 v9, vcc, v6, v5, vcc
	v_ashrrev_i32_e32 v5, 31, v4
	v_lshlrev_b64 v[4:5], 2, v[4:5]
	v_add_u32_e32 v2, v8, v1
	v_add_co_u32_e32 v6, vcc, v7, v4
	v_lshlrev_b64 v[0:1], 2, v[2:3]
	v_addc_co_u32_e32 v7, vcc, v9, v5, vcc
	v_mov_b32_e32 v2, s11
	v_add_co_u32_e32 v0, vcc, s10, v0
	v_addc_co_u32_e32 v1, vcc, v2, v1, vcc
	v_mul_f32_e32 v54, s29, v54
	v_mul_f32_e32 v55, s29, v55
	v_mul_f32_e32 v56, s29, v56
	v_mul_f32_e32 v57, s29, v57
	v_mul_f32_e32 v50, s29, v50
	v_mul_f32_e32 v51, s29, v51
	v_mul_f32_e32 v52, s29, v52
	v_mul_f32_e32 v53, s29, v53
	v_add_co_u32_e32 v0, vcc, v0, v4
	v_fmac_f32_e32 v54, s28, v26
	s_waitcnt vmcnt(1)
	v_mul_f32_e32 v26, s29, v38
	v_fmac_f32_e32 v55, s28, v27
	v_mul_f32_e32 v27, s29, v39
	v_fmac_f32_e32 v56, s28, v28
	v_mul_f32_e32 v28, s29, v40
	v_fmac_f32_e32 v57, s28, v29
	v_mul_f32_e32 v29, s29, v41
	v_fmac_f32_e32 v50, s28, v30
	s_waitcnt vmcnt(0)
	v_mul_f32_e32 v30, s29, v34
	v_fmac_f32_e32 v51, s28, v31
	v_mul_f32_e32 v31, s29, v35
	v_fmac_f32_e32 v52, s28, v32
	v_fmac_f32_e32 v53, s28, v33
	v_mul_f32_e32 v32, s29, v36
	v_mul_f32_e32 v33, s29, v37
	v_addc_co_u32_e32 v1, vcc, v1, v5, vcc
	v_fmac_f32_e32 v26, s28, v10
	v_fmac_f32_e32 v27, s28, v11
	v_fmac_f32_e32 v28, s28, v12
	v_fmac_f32_e32 v29, s28, v13
	v_fmac_f32_e32 v30, s28, v14
	v_fmac_f32_e32 v31, s28, v15
	v_fmac_f32_e32 v32, s28, v16
	v_fmac_f32_e32 v33, s28, v17
	global_store_dwordx4 v[6:7], v[62:65], off
	global_store_dwordx4 v[6:7], v[58:61], off offset:32
	global_store_dwordx4 v[6:7], v[54:57], off offset:64
	global_store_dwordx4 v[6:7], v[50:53], off offset:96
	global_store_dwordx4 v[0:1], v[18:21], off
	global_store_dwordx4 v[0:1], v[22:25], off offset:32
	global_store_dwordx4 v[0:1], v[26:29], off offset:64
	global_store_dwordx4 v[0:1], v[30:33], off offset:96
BB0_22:                                 ; %if.end401
	s_endpgm
	.section	.rodata,#alloc
	.p2align	6
	.amdhsa_kernel _Z15mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 128
		.amdhsa_user_sgpr_private_segment_buffer 1
		.amdhsa_user_sgpr_dispatch_ptr 1
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_flat_scratch_init 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_system_sgpr_private_segment_wavefront_offset 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 1
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 1
		.amdhsa_next_free_vgpr 70
		.amdhsa_next_free_sgpr 40
		.amdhsa_reserve_flat_scratch 0
		.amdhsa_reserve_xnack_mask 0
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end0:
	.size	_Z15mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_, .Lfunc_end0-_Z15mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_
                                        ; -- End function
	.section	.AMDGPU.csdata
; Kernel info:
; codeLenInByte = 3408
; NumSgprs: 42
; NumVgprs: 70
; NumAgprs: 32
; TotalNumVgprs: 70
; ScratchSize: 0
; MemoryBound: 0
; FloatMode: 240
; IeeeMode: 1
; LDSByteSize: 0 bytes/workgroup (compile time only)
; SGPRBlocks: 5
; VGPRBlocks: 17
; NumSGPRsForWavesPerEU: 42
; NumVGPRsForWavesPerEU: 70
; Occupancy: 3
; WaveLimiterHint : 1
; COMPUTE_PGM_RSRC2:SCRATCH_EN: 0
; COMPUTE_PGM_RSRC2:USER_SGPR: 8
; COMPUTE_PGM_RSRC2:TRAP_HANDLER: 0
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 0
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 1
	.protected	_ZN17__HIP_CoordinatesI14__HIP_BlockIdxE1xE ; @_ZN17__HIP_CoordinatesI14__HIP_BlockIdxE1xE
	.type	_ZN17__HIP_CoordinatesI14__HIP_BlockIdxE1xE,@object
	.section	.rodata._ZN17__HIP_CoordinatesI14__HIP_BlockIdxE1xE,#alloc
	.weak	_ZN17__HIP_CoordinatesI14__HIP_BlockIdxE1xE
_ZN17__HIP_CoordinatesI14__HIP_BlockIdxE1xE:
	.zero	1
	.size	_ZN17__HIP_CoordinatesI14__HIP_BlockIdxE1xE, 1

	.protected	_ZN17__HIP_CoordinatesI14__HIP_BlockDimE1xE ; @_ZN17__HIP_CoordinatesI14__HIP_BlockDimE1xE
	.type	_ZN17__HIP_CoordinatesI14__HIP_BlockDimE1xE,@object
	.section	.rodata._ZN17__HIP_CoordinatesI14__HIP_BlockDimE1xE,#alloc
	.weak	_ZN17__HIP_CoordinatesI14__HIP_BlockDimE1xE
_ZN17__HIP_CoordinatesI14__HIP_BlockDimE1xE:
	.zero	1
	.size	_ZN17__HIP_CoordinatesI14__HIP_BlockDimE1xE, 1

	.protected	_ZN17__HIP_CoordinatesI15__HIP_ThreadIdxE1xE ; @_ZN17__HIP_CoordinatesI15__HIP_ThreadIdxE1xE
	.type	_ZN17__HIP_CoordinatesI15__HIP_ThreadIdxE1xE,@object
	.section	.rodata._ZN17__HIP_CoordinatesI15__HIP_ThreadIdxE1xE,#alloc
	.weak	_ZN17__HIP_CoordinatesI15__HIP_ThreadIdxE1xE
_ZN17__HIP_CoordinatesI15__HIP_ThreadIdxE1xE:
	.zero	1
	.size	_ZN17__HIP_CoordinatesI15__HIP_ThreadIdxE1xE, 1

	.protected	_ZN17__HIP_CoordinatesI14__HIP_BlockIdxE1yE ; @_ZN17__HIP_CoordinatesI14__HIP_BlockIdxE1yE
	.type	_ZN17__HIP_CoordinatesI14__HIP_BlockIdxE1yE,@object
	.section	.rodata._ZN17__HIP_CoordinatesI14__HIP_BlockIdxE1yE,#alloc
	.weak	_ZN17__HIP_CoordinatesI14__HIP_BlockIdxE1yE
_ZN17__HIP_CoordinatesI14__HIP_BlockIdxE1yE:
	.zero	1
	.size	_ZN17__HIP_CoordinatesI14__HIP_BlockIdxE1yE, 1

	.protected	_ZN17__HIP_CoordinatesI14__HIP_BlockDimE1yE ; @_ZN17__HIP_CoordinatesI14__HIP_BlockDimE1yE
	.type	_ZN17__HIP_CoordinatesI14__HIP_BlockDimE1yE,@object
	.section	.rodata._ZN17__HIP_CoordinatesI14__HIP_BlockDimE1yE,#alloc
	.weak	_ZN17__HIP_CoordinatesI14__HIP_BlockDimE1yE
_ZN17__HIP_CoordinatesI14__HIP_BlockDimE1yE:
	.zero	1
	.size	_ZN17__HIP_CoordinatesI14__HIP_BlockDimE1yE, 1

	.protected	_ZN17__HIP_CoordinatesI15__HIP_ThreadIdxE1yE ; @_ZN17__HIP_CoordinatesI15__HIP_ThreadIdxE1yE
	.type	_ZN17__HIP_CoordinatesI15__HIP_ThreadIdxE1yE,@object
	.section	.rodata._ZN17__HIP_CoordinatesI15__HIP_ThreadIdxE1yE,#alloc
	.weak	_ZN17__HIP_CoordinatesI15__HIP_ThreadIdxE1yE
_ZN17__HIP_CoordinatesI15__HIP_ThreadIdxE1yE:
	.zero	1
	.size	_ZN17__HIP_CoordinatesI15__HIP_ThreadIdxE1yE, 1

	.ident	"AMD clang version 13.0.0 (ssh://gerritgit/lightning/ec/llvm-project amd-mainline-open 21381 5b03822b900367b162c033f9aef4395a0fc6b535)"
	.section	".note.GNU-stack"
	.addrsig
	.amdgpu_metadata
---
amdhsa.kernels:
  - .args:
      - .name:           m
        .offset:         0
        .size:           4
        .value_kind:     by_value
      - .name:           n
        .offset:         4
        .size:           4
        .value_kind:     by_value
      - .name:           k
        .offset:         8
        .size:           4
        .value_kind:     by_value
      - .address_space:  global
        .name:           a.coerce
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           b.coerce
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           c.coerce
        .offset:         32
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .name:           d.coerce
        .offset:         40
        .size:           8
        .value_kind:     global_buffer
      - .name:           lda
        .offset:         48
        .size:           4
        .value_kind:     by_value
      - .name:           ldb
        .offset:         52
        .size:           4
        .value_kind:     by_value
      - .name:           ldc
        .offset:         56
        .size:           4
        .value_kind:     by_value
      - .name:           ldd
        .offset:         60
        .size:           4
        .value_kind:     by_value
      - .name:           alpha
        .offset:         64
        .size:           4
        .value_kind:     by_value
      - .name:           beta
        .offset:         68
        .size:           4
        .value_kind:     by_value
      - .offset:         72
        .size:           8
        .value_kind:     hidden_global_offset_x
      - .offset:         80
        .size:           8
        .value_kind:     hidden_global_offset_y
      - .offset:         88
        .size:           8
        .value_kind:     hidden_global_offset_z
      - .address_space:  global
        .offset:         96
        .size:           8
        .value_kind:     hidden_none
      - .address_space:  global
        .offset:         104
        .size:           8
        .value_kind:     hidden_none
      - .address_space:  global
        .offset:         112
        .size:           8
        .value_kind:     hidden_none
      - .address_space:  global
        .offset:         120
        .size:           8
        .value_kind:     hidden_multigrid_sync_arg
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 128
    .language:       OpenCL C
    .language_version:
      - 2
      - 0
    .max_flat_workgroup_size: 256
    .name:           _Z15mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_
    .private_segment_fixed_size: 0
    .sgpr_count:     42
    .sgpr_spill_count: 0
    .symbol:         _Z15mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_.kd
    .vgpr_count:     70
    .vgpr_spill_count: 0
    .wavefront_size: 64
amdhsa.target:   'amdgcn-amd-amdhsa--gfx908:xnack-'
amdhsa.version:
  - 1
  - 1
...

	.end_amdgpu_metadata

# __CLANG_OFFLOAD_BUNDLE____END__ hip-amdgcn-amd-amdhsa-gfx908:xnack-

# __CLANG_OFFLOAD_BUNDLE____START__ host-x86_64-unknown-linux-gnu
	.text
	.file	"MmaSyncMultiLdsTest_32x32_NT_2x2.cpp"
	.section	.text._ZN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEED2Ev,"axG",@progbits,_ZN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEED2Ev,comdat
	.weak	_ZN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEED2Ev # -- Begin function _ZN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEED2Ev
	.p2align	4, 0x90
	.type	_ZN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEED2Ev,@function
_ZN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEED2Ev: # @_ZN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	jmp	_ZN7testing4TestD2Ev            # TAILCALL
.Lfunc_end0:
	.size	_ZN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEED2Ev, .Lfunc_end0-_ZN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD0Ev,"axG",@progbits,_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD0Ev,comdat
	.weak	_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD0Ev # -- Begin function _ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD0Ev
	.p2align	4, 0x90
	.type	_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD0Ev,@function
_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD0Ev: # @_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD0Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	callq	_ZN7testing4TestD2Ev
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end1:
	.size	_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD0Ev, .Lfunc_end1-_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8GemmTest5SetUpEv,"axG",@progbits,_ZN8GemmTest5SetUpEv,comdat
	.weak	_ZN8GemmTest5SetUpEv            # -- Begin function _ZN8GemmTest5SetUpEv
	.p2align	4, 0x90
	.type	_ZN8GemmTest5SetUpEv,@function
_ZN8GemmTest5SetUpEv:                   # @_ZN8GemmTest5SetUpEv
.Lfunc_begin0:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception0
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$160, %rsp
	.cfi_def_cfa_offset 176
	.cfi_offset %rbx, -16
	callq	_ZN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEE8GetParamEv
	movups	(%rax), %xmm0
	movups	16(%rax), %xmm1
	movups	32(%rax), %xmm2
	movaps	%xmm0, 16(%rsp)
	movaps	%xmm1, 32(%rsp)
	movaps	%xmm2, 48(%rsp)
	movq	48(%rax), %rcx
	movq	%rcx, 64(%rsp)
	movq	56(%rax), %rdi
	movq	%rdi, 72(%rsp)
	movq	64(%rax), %rax
	movq	%rax, 80(%rsp)
	testq	%rax, %rax
	je	.LBB2_1
# %bb.2:                                # %if.then.i.i.i.i.i.i
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB2_4
# %bb.3:                                # %if.then.i.i.i.i.i.i.i.i
	lock		addl	$1, 8(%rax)
	movq	72(%rsp), %rdi
	movq	80(%rsp), %rax
	movq	%rdi, (%rsp)
	movq	%rax, 8(%rsp)
	testq	%rax, %rax
	jne	.LBB2_6
	jmp	.LBB2_9
.LBB2_1:
	xorl	%eax, %eax
	movq	%rdi, (%rsp)
	movq	%rax, 8(%rsp)
	testq	%rax, %rax
	jne	.LBB2_6
	jmp	.LBB2_9
.LBB2_4:                                # %if.else.i.i.i.i.i.i.i.i
	addl	$1, 8(%rax)
	movq	%rdi, (%rsp)
	movq	%rax, 8(%rsp)
	testq	%rax, %rax
	je	.LBB2_9
.LBB2_6:                                # %if.then.i.i.i
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB2_8
# %bb.7:                                # %if.then.i.i.i.i.i
	lock		addl	$1, 8(%rax)
	movq	(%rsp), %rdi
	jmp	.LBB2_9
.LBB2_8:                                # %if.else.i.i.i.i.i
	addl	$1, 8(%rax)
.LBB2_9:                                # %_ZNSt10shared_ptrI7KernelIEC2ERKS1_.exit
	movaps	16(%rsp), %xmm0
	shufps	$78, %xmm0, %xmm0               # xmm0 = xmm0[2,3,0,1]
	movups	56(%rsp), %xmm1
	movaps	%xmm1, 96(%rsp)
	movaps	32(%rsp), %xmm1
	movaps	%xmm1, 112(%rsp)
	movq	48(%rsp), %rax
	movq	%rax, 128(%rsp)
	movups	%xmm0, 136(%rsp)
	movq	(%rdi), %rax
.Ltmp0:
	leaq	96(%rsp), %rsi
	callq	*16(%rax)
.Ltmp1:
# %bb.10:                               # %invoke.cont
	movq	8(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB2_20
# %bb.11:                               # %if.then.i.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB2_13
# %bb.12:                               # %if.then.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB2_15
	jmp	.LBB2_20
.LBB2_13:                               # %if.else.i.i.i.i
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB2_20
.LBB2_15:                               # %if.then.i.i.i31
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB2_17
# %bb.16:                               # %if.then.i9.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB2_19
	jmp	.LBB2_20
.LBB2_17:                               # %if.else.i11.i.i.i
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB2_20
.LBB2_19:                               # %if.then5.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
.LBB2_20:                               # %_ZNSt12__shared_ptrI7KernelILN9__gnu_cxx12_Lock_policyE2EED2Ev.exit
	movq	80(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB2_30
# %bb.21:                               # %if.then.i.i.i.i32
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB2_23
# %bb.22:                               # %if.then.i.i.i.i.i.i33
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB2_25
.LBB2_30:                               # %_ZNSt11_Tuple_implILm0EJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev.exit
	addq	$160, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB2_23:                               # %if.else.i.i.i.i.i.i
	.cfi_def_cfa_offset 176
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB2_30
.LBB2_25:                               # %if.then.i.i.i.i.i34
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB2_27
# %bb.26:                               # %if.then.i9.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB2_30
	jmp	.LBB2_29
.LBB2_27:                               # %if.else.i11.i.i.i.i.i
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB2_30
.LBB2_29:                               # %if.then5.i.i.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
	addq	$160, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB2_31:                               # %lpad
	.cfi_def_cfa_offset 176
.Ltmp2:
	movq	%rax, %rbx
	movq	%rsp, %rdi
	callq	_ZNSt12__shared_ptrI7KernelILN9__gnu_cxx12_Lock_policyE2EED2Ev
	leaq	16(%rsp), %rdi
	callq	_ZNSt11_Tuple_implILm0EJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end2:
	.size	_ZN8GemmTest5SetUpEv, .Lfunc_end2-_ZN8GemmTest5SetUpEv
	.cfi_endproc
	.section	.gcc_except_table._ZN8GemmTest5SetUpEv,"aG",@progbits,_ZN8GemmTest5SetUpEv,comdat
	.p2align	2
GCC_except_table2:
.Lexception0:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end0-.Lcst_begin0
.Lcst_begin0:
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    # >> Call Site 1 <<
	.uleb128 .Ltmp0-.Lfunc_begin0           #   Call between .Lfunc_begin0 and .Ltmp0
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp0-.Lfunc_begin0           # >> Call Site 2 <<
	.uleb128 .Ltmp1-.Ltmp0                  #   Call between .Ltmp0 and .Ltmp1
	.uleb128 .Ltmp2-.Lfunc_begin0           #     jumps to .Ltmp2
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1-.Lfunc_begin0           # >> Call Site 3 <<
	.uleb128 .Lfunc_end2-.Ltmp1             #   Call between .Ltmp1 and .Lfunc_end2
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end0:
	.p2align	2
                                        # -- End function
	.section	.text._ZN8GemmTest8TearDownEv,"axG",@progbits,_ZN8GemmTest8TearDownEv,comdat
	.weak	_ZN8GemmTest8TearDownEv         # -- Begin function _ZN8GemmTest8TearDownEv
	.p2align	4, 0x90
	.type	_ZN8GemmTest8TearDownEv,@function
_ZN8GemmTest8TearDownEv:                # @_ZN8GemmTest8TearDownEv
.Lfunc_begin1:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception1
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$96, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -16
	callq	_ZN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEE8GetParamEv
	movups	(%rax), %xmm0
	movups	16(%rax), %xmm1
	movups	32(%rax), %xmm2
	movaps	%xmm0, 16(%rsp)
	movaps	%xmm1, 32(%rsp)
	movaps	%xmm2, 48(%rsp)
	movq	48(%rax), %rcx
	movq	%rcx, 64(%rsp)
	movq	56(%rax), %rdi
	movq	%rdi, 72(%rsp)
	movq	64(%rax), %rax
	movq	%rax, 80(%rsp)
	testq	%rax, %rax
	je	.LBB3_1
# %bb.2:                                # %if.then.i.i.i.i.i.i
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB3_4
# %bb.3:                                # %if.then.i.i.i.i.i.i.i.i
	lock		addl	$1, 8(%rax)
	movq	72(%rsp), %rdi
	movq	80(%rsp), %rax
	movq	%rdi, (%rsp)
	movq	%rax, 8(%rsp)
	testq	%rax, %rax
	jne	.LBB3_6
	jmp	.LBB3_9
.LBB3_1:
	xorl	%eax, %eax
	movq	%rdi, (%rsp)
	movq	%rax, 8(%rsp)
	testq	%rax, %rax
	jne	.LBB3_6
	jmp	.LBB3_9
.LBB3_4:                                # %if.else.i.i.i.i.i.i.i.i
	addl	$1, 8(%rax)
	movq	%rdi, (%rsp)
	movq	%rax, 8(%rsp)
	testq	%rax, %rax
	je	.LBB3_9
.LBB3_6:                                # %if.then.i.i.i
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB3_8
# %bb.7:                                # %if.then.i.i.i.i.i
	lock		addl	$1, 8(%rax)
	movq	(%rsp), %rdi
	jmp	.LBB3_9
.LBB3_8:                                # %if.else.i.i.i.i.i
	addl	$1, 8(%rax)
.LBB3_9:                                # %_ZNSt10shared_ptrI7KernelIEC2ERKS1_.exit
	movq	(%rdi), %rax
.Ltmp3:
	callq	*48(%rax)
.Ltmp4:
# %bb.10:                               # %invoke.cont
	movq	8(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB3_20
# %bb.11:                               # %if.then.i.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB3_13
# %bb.12:                               # %if.then.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB3_15
	jmp	.LBB3_20
.LBB3_13:                               # %if.else.i.i.i.i
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB3_20
.LBB3_15:                               # %if.then.i.i.i5
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB3_17
# %bb.16:                               # %if.then.i9.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB3_19
	jmp	.LBB3_20
.LBB3_17:                               # %if.else.i11.i.i.i
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB3_20
.LBB3_19:                               # %if.then5.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
.LBB3_20:                               # %_ZNSt12__shared_ptrI7KernelILN9__gnu_cxx12_Lock_policyE2EED2Ev.exit
	movq	80(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB3_29
# %bb.21:                               # %if.then.i.i.i.i6
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB3_23
# %bb.22:                               # %if.then.i.i.i.i.i.i7
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB3_25
	jmp	.LBB3_29
.LBB3_23:                               # %if.else.i.i.i.i.i.i
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB3_29
.LBB3_25:                               # %if.then.i.i.i.i.i8
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB3_27
# %bb.26:                               # %if.then.i9.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB3_31
.LBB3_29:                               # %_ZNSt11_Tuple_implILm0EJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev.exit
	addq	$96, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB3_27:                               # %if.else.i11.i.i.i.i.i
	.cfi_def_cfa_offset 112
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB3_29
.LBB3_31:                               # %if.then5.i.i.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	addq	$96, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmpq	*24(%rax)                       # TAILCALL
.LBB3_30:                               # %lpad
	.cfi_def_cfa_offset 112
.Ltmp5:
	movq	%rax, %rbx
	movq	%rsp, %rdi
	callq	_ZNSt12__shared_ptrI7KernelILN9__gnu_cxx12_Lock_policyE2EED2Ev
	leaq	16(%rsp), %rdi
	callq	_ZNSt11_Tuple_implILm0EJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end3:
	.size	_ZN8GemmTest8TearDownEv, .Lfunc_end3-_ZN8GemmTest8TearDownEv
	.cfi_endproc
	.section	.gcc_except_table._ZN8GemmTest8TearDownEv,"aG",@progbits,_ZN8GemmTest8TearDownEv,comdat
	.p2align	2
GCC_except_table3:
.Lexception1:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end1-.Lcst_begin1
.Lcst_begin1:
	.uleb128 .Lfunc_begin1-.Lfunc_begin1    # >> Call Site 1 <<
	.uleb128 .Ltmp3-.Lfunc_begin1           #   Call between .Lfunc_begin1 and .Ltmp3
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3-.Lfunc_begin1           # >> Call Site 2 <<
	.uleb128 .Ltmp4-.Ltmp3                  #   Call between .Ltmp3 and .Ltmp4
	.uleb128 .Ltmp5-.Lfunc_begin1           #     jumps to .Ltmp5
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp4-.Lfunc_begin1           # >> Call Site 3 <<
	.uleb128 .Lfunc_end3-.Ltmp4             #   Call between .Ltmp4 and .Lfunc_end3
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end1:
	.p2align	2
                                        # -- End function
	.text
	.globl	_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test8TestBodyEv # -- Begin function _ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test8TestBodyEv
	.p2align	4, 0x90
	.type	_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test8TestBodyEv,@function
_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test8TestBodyEv: # @_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test8TestBodyEv
	.cfi_startproc
# %bb.0:                                # %entry
	movq	(%rdi), %rax
	jmpq	*48(%rax)                       # TAILCALL
.Lfunc_end4:
	.size	_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test8TestBodyEv, .Lfunc_end4-_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test8TestBodyEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing4Test5SetupEv,"axG",@progbits,_ZN7testing4Test5SetupEv,comdat
	.weak	_ZN7testing4Test5SetupEv        # -- Begin function _ZN7testing4Test5SetupEv
	.p2align	4, 0x90
	.type	_ZN7testing4Test5SetupEv,@function
_ZN7testing4Test5SetupEv:               # @_ZN7testing4Test5SetupEv
	.cfi_startproc
# %bb.0:                                # %entry
	xorl	%eax, %eax
	retq
.Lfunc_end5:
	.size	_ZN7testing4Test5SetupEv, .Lfunc_end5-_ZN7testing4Test5SetupEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8GemmTest9RunKernelEv,"axG",@progbits,_ZN8GemmTest9RunKernelEv,comdat
	.weak	_ZN8GemmTest9RunKernelEv        # -- Begin function _ZN8GemmTest9RunKernelEv
	.p2align	4, 0x90
	.type	_ZN8GemmTest9RunKernelEv,@function
_ZN8GemmTest9RunKernelEv:               # @_ZN8GemmTest9RunKernelEv
.Lfunc_begin2:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception2
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$96, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -16
	callq	_ZN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEE8GetParamEv
	movups	(%rax), %xmm0
	movups	16(%rax), %xmm1
	movups	32(%rax), %xmm2
	movaps	%xmm0, 16(%rsp)
	movaps	%xmm1, 32(%rsp)
	movaps	%xmm2, 48(%rsp)
	movq	48(%rax), %rcx
	movq	%rcx, 64(%rsp)
	movq	56(%rax), %rdi
	movq	%rdi, 72(%rsp)
	movq	64(%rax), %rax
	movq	%rax, 80(%rsp)
	testq	%rax, %rax
	je	.LBB6_1
# %bb.2:                                # %if.then.i.i.i.i.i.i
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB6_4
# %bb.3:                                # %if.then.i.i.i.i.i.i.i.i
	lock		addl	$1, 8(%rax)
	movq	72(%rsp), %rdi
	movq	80(%rsp), %rax
	movq	%rdi, (%rsp)
	movq	%rax, 8(%rsp)
	testq	%rax, %rax
	jne	.LBB6_6
	jmp	.LBB6_9
.LBB6_1:
	xorl	%eax, %eax
	movq	%rdi, (%rsp)
	movq	%rax, 8(%rsp)
	testq	%rax, %rax
	jne	.LBB6_6
	jmp	.LBB6_9
.LBB6_4:                                # %if.else.i.i.i.i.i.i.i.i
	addl	$1, 8(%rax)
	movq	%rdi, (%rsp)
	movq	%rax, 8(%rsp)
	testq	%rax, %rax
	je	.LBB6_9
.LBB6_6:                                # %if.then.i.i.i
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB6_8
# %bb.7:                                # %if.then.i.i.i.i.i
	lock		addl	$1, 8(%rax)
	movq	(%rsp), %rdi
	jmp	.LBB6_9
.LBB6_8:                                # %if.else.i.i.i.i.i
	addl	$1, 8(%rax)
.LBB6_9:                                # %_ZNSt10shared_ptrI7KernelIEC2ERKS1_.exit
	movq	(%rdi), %rax
.Ltmp6:
	callq	*24(%rax)
.Ltmp7:
# %bb.10:                               # %invoke.cont
	movq	(%rsp), %rdi
	movq	(%rdi), %rax
.Ltmp8:
	callq	*32(%rax)
.Ltmp9:
# %bb.11:                               # %invoke.cont7
	movq	(%rsp), %rdi
	movq	(%rdi), %rax
.Ltmp10:
	callq	*40(%rax)
.Ltmp11:
# %bb.12:                               # %invoke.cont11
	movq	8(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB6_22
# %bb.13:                               # %if.then.i.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB6_15
# %bb.14:                               # %if.then.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB6_17
	jmp	.LBB6_22
.LBB6_15:                               # %if.else.i.i.i.i
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB6_22
.LBB6_17:                               # %if.then.i.i.i15
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB6_19
# %bb.18:                               # %if.then.i9.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB6_21
	jmp	.LBB6_22
.LBB6_19:                               # %if.else.i11.i.i.i
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB6_22
.LBB6_21:                               # %if.then5.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
.LBB6_22:                               # %_ZNSt12__shared_ptrI7KernelILN9__gnu_cxx12_Lock_policyE2EED2Ev.exit
	movq	80(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB6_31
# %bb.23:                               # %if.then.i.i.i.i16
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB6_25
# %bb.24:                               # %if.then.i.i.i.i.i.i17
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB6_27
	jmp	.LBB6_31
.LBB6_25:                               # %if.else.i.i.i.i.i.i
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB6_31
.LBB6_27:                               # %if.then.i.i.i.i.i18
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB6_29
# %bb.28:                               # %if.then.i9.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB6_33
.LBB6_31:                               # %_ZNSt11_Tuple_implILm0EJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev.exit
	addq	$96, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB6_29:                               # %if.else.i11.i.i.i.i.i
	.cfi_def_cfa_offset 112
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB6_31
.LBB6_33:                               # %if.then5.i.i.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	addq	$96, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmpq	*24(%rax)                       # TAILCALL
.LBB6_32:                               # %lpad
	.cfi_def_cfa_offset 112
.Ltmp12:
	movq	%rax, %rbx
	movq	%rsp, %rdi
	callq	_ZNSt12__shared_ptrI7KernelILN9__gnu_cxx12_Lock_policyE2EED2Ev
	leaq	16(%rsp), %rdi
	callq	_ZNSt11_Tuple_implILm0EJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end6:
	.size	_ZN8GemmTest9RunKernelEv, .Lfunc_end6-_ZN8GemmTest9RunKernelEv
	.cfi_endproc
	.section	.gcc_except_table._ZN8GemmTest9RunKernelEv,"aG",@progbits,_ZN8GemmTest9RunKernelEv,comdat
	.p2align	2
GCC_except_table6:
.Lexception2:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end2-.Lcst_begin2
.Lcst_begin2:
	.uleb128 .Lfunc_begin2-.Lfunc_begin2    # >> Call Site 1 <<
	.uleb128 .Ltmp6-.Lfunc_begin2           #   Call between .Lfunc_begin2 and .Ltmp6
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp6-.Lfunc_begin2           # >> Call Site 2 <<
	.uleb128 .Ltmp11-.Ltmp6                 #   Call between .Ltmp6 and .Ltmp11
	.uleb128 .Ltmp12-.Lfunc_begin2          #     jumps to .Ltmp12
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp11-.Lfunc_begin2          # >> Call Site 3 <<
	.uleb128 .Lfunc_end6-.Ltmp11            #   Call between .Ltmp11 and .Lfunc_end6
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end2:
	.p2align	2
                                        # -- End function
	.section	.text._ZThn16_N44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD1Ev,"axG",@progbits,_ZThn16_N44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD1Ev,comdat
	.weak	_ZThn16_N44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD1Ev # -- Begin function _ZThn16_N44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD1Ev
	.p2align	4, 0x90
	.type	_ZThn16_N44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD1Ev,@function
_ZThn16_N44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD1Ev: # @_ZThn16_N44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD1Ev
	.cfi_startproc
# %bb.0:                                # %entry
	addq	$-16, %rdi
	jmp	_ZN7testing4TestD2Ev            # TAILCALL
.Lfunc_end7:
	.size	_ZThn16_N44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD1Ev, .Lfunc_end7-_ZThn16_N44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD1Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZThn16_N44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD0Ev,"axG",@progbits,_ZThn16_N44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD0Ev,comdat
	.weak	_ZThn16_N44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD0Ev # -- Begin function _ZThn16_N44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD0Ev
	.p2align	4, 0x90
	.type	_ZThn16_N44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD0Ev,@function
_ZThn16_N44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD0Ev: # @_ZThn16_N44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD0Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rdi
	callq	_ZN7testing4TestD2Ev
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end8:
	.size	_ZThn16_N44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD0Ev, .Lfunc_end8-_ZThn16_N44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test13AddToRegistryEv,"axG",@progbits,_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test13AddToRegistryEv,comdat
	.weak	_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test13AddToRegistryEv # -- Begin function _ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test13AddToRegistryEv
	.p2align	4, 0x90
	.type	_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test13AddToRegistryEv,@function
_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test13AddToRegistryEv: # @_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test13AddToRegistryEv
.Lfunc_begin3:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception3
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$152, %rsp
	.cfi_def_cfa_offset 208
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	callq	_ZN7testing8UnitTest11GetInstanceEv
	movq	%rax, %rdi
	callq	_ZN7testing8UnitTest27parameterized_test_registryEv
	movq	%rax, %r14
	leaq	56(%rsp), %rax
	movq	%rax, 40(%rsp)
	movq	$57, 8(%rsp)
	leaq	40(%rsp), %rdi
	leaq	8(%rsp), %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
	movq	%rax, 40(%rsp)
	movq	8(%rsp), %rcx
	movq	%rcx, 56(%rsp)
	movups	.L.str.2(%rip), %xmm0
	movups	%xmm0, (%rax)
	movups	.L.str.2+16(%rip), %xmm0
	movups	%xmm0, 16(%rax)
	movups	.L.str.2+32(%rip), %xmm0
	movups	%xmm0, 32(%rax)
	movups	.L.str.2+41(%rip), %xmm0
	movups	%xmm0, 41(%rax)
	movq	%rcx, 48(%rsp)
	movb	$0, (%rax,%rcx)
	leaq	128(%rsp), %r13
	movq	%r13, 112(%rsp)
	movq	40(%rsp), %r15
	movq	48(%rsp), %rbx
	movq	%rbx, 8(%rsp)
	cmpq	$15, %rbx
	jbe	.LBB9_1
# %bb.2:                                # %if.then4.i.i.i.i.i
.Ltmp13:
	leaq	112(%rsp), %rdi
	leaq	8(%rsp), %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp14:
# %bb.3:                                # %call5.i.i.i16.i.i.noexc
	movq	%rax, 112(%rsp)
	movq	8(%rsp), %rcx
	movq	%rcx, 128(%rsp)
	testq	%rbx, %rbx
	jne	.LBB9_5
	jmp	.LBB9_8
.LBB9_1:                                # %if.end.if.end6_crit_edge.i.i.i.i.i
	movq	%r13, %rax
	testq	%rbx, %rbx
	je	.LBB9_8
.LBB9_5:                                # %if.end6.i.i.i.i.i
	cmpq	$1, %rbx
	jne	.LBB9_7
# %bb.6:                                # %if.then.i.i.i.i.i.i.i
	movb	(%r15), %cl
	movb	%cl, (%rax)
	jmp	.LBB9_8
.LBB9_7:                                # %if.end.i.i.i.i.i.i.i.i
	movq	%rax, %rdi
	movq	%r15, %rsi
	movq	%rbx, %rdx
	callq	memcpy@PLT
.LBB9_8:                                # %invoke.cont4
	movq	8(%rsp), %rax
	movq	%rax, 120(%rsp)
	movq	112(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movl	$78, 144(%rsp)
.Ltmp16:
	leaq	112(%rsp), %rdx
	movl	$.L.str, %esi
	movq	%r14, %rdi
	callq	_ZN7testing8internal30ParameterizedTestSuiteRegistry25GetTestSuitePatternHolderI29MmaSyncMultiLdsTest32x32NT2x2EEPNS0_26ParameterizedTestSuiteInfoIT_EEPKcNS0_12CodeLocationE
.Ltmp17:
# %bb.9:                                # %invoke.cont6
	movq	%rax, %r14
.Ltmp18:
	movl	$8, %edi
	callq	_Znwm
.Ltmp19:
# %bb.10:                               # %invoke.cont8
	movq	%rax, %r15
	movq	$_ZTVN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE+16, (%rax)
	leaq	24(%rsp), %rax
	movq	%rax, 8(%rsp)
	movq	$57, (%rsp)
.Ltmp21:
	leaq	8(%rsp), %rdi
	movq	%rsp, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp22:
# %bb.11:                               # %call5.i.i.i9.i.noexc49
	movq	%rax, 8(%rsp)
	movq	(%rsp), %rcx
	movq	%rcx, 24(%rsp)
	movups	.L.str.2+41(%rip), %xmm0
	movups	%xmm0, 41(%rax)
	movups	.L.str.2+32(%rip), %xmm0
	movups	%xmm0, 32(%rax)
	movups	.L.str.2+16(%rip), %xmm0
	movups	%xmm0, 16(%rax)
	movups	.L.str.2(%rip), %xmm0
	movups	%xmm0, (%rax)
	movq	%rcx, 16(%rsp)
	movb	$0, (%rax,%rcx)
	leaq	88(%rsp), %rbp
	movq	%rbp, 72(%rsp)
	movq	8(%rsp), %r12
	movq	16(%rsp), %rbx
	movq	%rbx, (%rsp)
	cmpq	$15, %rbx
	jbe	.LBB9_12
# %bb.13:                               # %if.then4.i.i.i.i.i60
.Ltmp24:
	leaq	72(%rsp), %rdi
	movq	%rsp, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp25:
# %bb.14:                               # %call5.i.i.i16.i.i.noexc68
	movq	%rax, 72(%rsp)
	movq	(%rsp), %rcx
	movq	%rcx, 88(%rsp)
	testq	%rbx, %rbx
	jne	.LBB9_16
	jmp	.LBB9_19
.LBB9_12:                               # %if.end.if.end6_crit_edge.i.i.i.i.i56
	movq	%rbp, %rax
	testq	%rbx, %rbx
	je	.LBB9_19
.LBB9_16:                               # %if.end6.i.i.i.i.i61
	cmpq	$1, %rbx
	jne	.LBB9_18
# %bb.17:                               # %if.then.i.i.i.i.i.i.i62
	movb	(%r12), %cl
	movb	%cl, (%rax)
	jmp	.LBB9_19
.LBB9_18:                               # %if.end.i.i.i.i.i.i.i.i63
	movq	%rax, %rdi
	movq	%r12, %rsi
	movq	%rbx, %rdx
	callq	memcpy@PLT
.LBB9_19:                               # %invoke.cont18
	movq	(%rsp), %rax
	movq	%rax, 80(%rsp)
	movq	72(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movl	$78, 104(%rsp)
.Ltmp27:
	leaq	72(%rsp), %r8
	movl	$.L.str, %esi
	movl	$.L.str.3, %edx
	movq	%r14, %rdi
	movq	%r15, %rcx
	callq	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E14AddTestPatternEPKcS5_PNS0_19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES7_IJlllEEddEEEENS0_12CodeLocationE
.Ltmp28:
# %bb.20:                               # %invoke.cont20
	movq	72(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB9_22
# %bb.21:                               # %if.then.i.i.i
	callq	_ZdlPv
.LBB9_22:                               # %_ZN7testing8internal12CodeLocationD2Ev.exit
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB9_24
# %bb.23:                               # %if.then.i.i
	callq	_ZdlPv
.LBB9_24:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	112(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB9_26
# %bb.25:                               # %if.then.i.i.i75
	callq	_ZdlPv
.LBB9_26:                               # %_ZN7testing8internal12CodeLocationD2Ev.exit76
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB9_28
# %bb.27:                               # %if.then.i.i80
	callq	_ZdlPv
.LBB9_28:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit81
	xorl	%eax, %eax
	addq	$152, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB9_32:                               # %lpad17
	.cfi_def_cfa_offset 208
.Ltmp26:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB9_37
	jmp	.LBB9_36
.LBB9_29:                               # %lpad3
.Ltmp15:
	movq	%rax, %rbx
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB9_41
	jmp	.LBB9_40
.LBB9_33:                               # %lpad19
.Ltmp29:
	movq	%rax, %rbx
	movq	72(%rsp), %rdi
	cmpq	%rbp, %rdi
	jne	.LBB9_34
# %bb.35:                               # %ehcleanup
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB9_36
.LBB9_37:                               # %ehcleanup24
	movq	112(%rsp), %rdi
	cmpq	%r13, %rdi
	jne	.LBB9_38
.LBB9_39:                               # %ehcleanup25
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB9_40
.LBB9_41:                               # %ehcleanup26
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB9_34:                               # %if.then.i.i.i85
	callq	_ZdlPv
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB9_37
.LBB9_36:                               # %if.then.i.i90
	callq	_ZdlPv
	movq	112(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB9_39
	jmp	.LBB9_38
.LBB9_31:                               # %lpad15
.Ltmp23:
	movq	%rax, %rbx
	movq	112(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB9_39
	jmp	.LBB9_38
.LBB9_30:                               # %lpad5
.Ltmp20:
	movq	%rax, %rbx
	movq	112(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB9_39
.LBB9_38:                               # %if.then.i.i.i95
	callq	_ZdlPv
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB9_41
.LBB9_40:                               # %if.then.i.i100
	callq	_ZdlPv
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end9:
	.size	_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test13AddToRegistryEv, .Lfunc_end9-_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test13AddToRegistryEv
	.cfi_endproc
	.section	.gcc_except_table._ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test13AddToRegistryEv,"aG",@progbits,_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test13AddToRegistryEv,comdat
	.p2align	2
GCC_except_table9:
.Lexception3:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end3-.Lcst_begin3
.Lcst_begin3:
	.uleb128 .Lfunc_begin3-.Lfunc_begin3    # >> Call Site 1 <<
	.uleb128 .Ltmp13-.Lfunc_begin3          #   Call between .Lfunc_begin3 and .Ltmp13
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp13-.Lfunc_begin3          # >> Call Site 2 <<
	.uleb128 .Ltmp14-.Ltmp13                #   Call between .Ltmp13 and .Ltmp14
	.uleb128 .Ltmp15-.Lfunc_begin3          #     jumps to .Ltmp15
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp14-.Lfunc_begin3          # >> Call Site 3 <<
	.uleb128 .Ltmp16-.Ltmp14                #   Call between .Ltmp14 and .Ltmp16
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp16-.Lfunc_begin3          # >> Call Site 4 <<
	.uleb128 .Ltmp19-.Ltmp16                #   Call between .Ltmp16 and .Ltmp19
	.uleb128 .Ltmp20-.Lfunc_begin3          #     jumps to .Ltmp20
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp21-.Lfunc_begin3          # >> Call Site 5 <<
	.uleb128 .Ltmp22-.Ltmp21                #   Call between .Ltmp21 and .Ltmp22
	.uleb128 .Ltmp23-.Lfunc_begin3          #     jumps to .Ltmp23
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp24-.Lfunc_begin3          # >> Call Site 6 <<
	.uleb128 .Ltmp25-.Ltmp24                #   Call between .Ltmp24 and .Ltmp25
	.uleb128 .Ltmp26-.Lfunc_begin3          #     jumps to .Ltmp26
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp25-.Lfunc_begin3          # >> Call Site 7 <<
	.uleb128 .Ltmp27-.Ltmp25                #   Call between .Ltmp25 and .Ltmp27
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp27-.Lfunc_begin3          # >> Call Site 8 <<
	.uleb128 .Ltmp28-.Ltmp27                #   Call between .Ltmp27 and .Ltmp28
	.uleb128 .Ltmp29-.Lfunc_begin3          #     jumps to .Ltmp29
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp28-.Lfunc_begin3          # >> Call Site 9 <<
	.uleb128 .Lfunc_end9-.Ltmp28            #   Call between .Ltmp28 and .Lfunc_end9
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end3:
	.p2align	2
                                        # -- End function
	.section	.text._ZN7testing8internal30ParameterizedTestSuiteRegistry25GetTestSuitePatternHolderI29MmaSyncMultiLdsTest32x32NT2x2EEPNS0_26ParameterizedTestSuiteInfoIT_EEPKcNS0_12CodeLocationE,"axG",@progbits,_ZN7testing8internal30ParameterizedTestSuiteRegistry25GetTestSuitePatternHolderI29MmaSyncMultiLdsTest32x32NT2x2EEPNS0_26ParameterizedTestSuiteInfoIT_EEPKcNS0_12CodeLocationE,comdat
	.weak	_ZN7testing8internal30ParameterizedTestSuiteRegistry25GetTestSuitePatternHolderI29MmaSyncMultiLdsTest32x32NT2x2EEPNS0_26ParameterizedTestSuiteInfoIT_EEPKcNS0_12CodeLocationE # -- Begin function _ZN7testing8internal30ParameterizedTestSuiteRegistry25GetTestSuitePatternHolderI29MmaSyncMultiLdsTest32x32NT2x2EEPNS0_26ParameterizedTestSuiteInfoIT_EEPKcNS0_12CodeLocationE
	.p2align	4, 0x90
	.type	_ZN7testing8internal30ParameterizedTestSuiteRegistry25GetTestSuitePatternHolderI29MmaSyncMultiLdsTest32x32NT2x2EEPNS0_26ParameterizedTestSuiteInfoIT_EEPKcNS0_12CodeLocationE,@function
_ZN7testing8internal30ParameterizedTestSuiteRegistry25GetTestSuitePatternHolderI29MmaSyncMultiLdsTest32x32NT2x2EEPNS0_26ParameterizedTestSuiteInfoIT_EEPKcNS0_12CodeLocationE: # @_ZN7testing8internal30ParameterizedTestSuiteRegistry25GetTestSuitePatternHolderI29MmaSyncMultiLdsTest32x32NT2x2EEPNS0_26ParameterizedTestSuiteInfoIT_EEPKcNS0_12CodeLocationE
.Lfunc_begin4:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception4
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$120, %rsp
	.cfi_def_cfa_offset 176
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r12
	movq	%rsi, %r14
	movq	%rdi, %r15
	movq	(%rdi), %rbp
	movq	8(%rdi), %rbx
	cmpq	%rbx, %rbp
	je	.LBB10_8
	.p2align	4, 0x90
.LBB10_1:                               # %for.body
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rbp), %rdi
	movq	(%rdi), %rax
	callq	*16(%rax)
	movq	%rax, %rdi
	movq	%r14, %rsi
	callq	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
	testl	%eax, %eax
	je	.LBB10_2
# %bb.6:                                # %for.inc
                                        #   in Loop: Header=BB10_1 Depth=1
	addq	$8, %rbp
	cmpq	%rbp, %rbx
	jne	.LBB10_1
	jmp	.LBB10_8
.LBB10_2:                               # %if.then
	movq	(%rbp), %rdi
	movq	(%rdi), %rax
	callq	*24(%rax)
	cmpq	$_ZN7testing8internal12TypeIdHelperI29MmaSyncMultiLdsTest32x32NT2x2E6dummy_E, %rax
	jne	.LBB10_3
# %bb.7:                                # %cleanup16
	movq	(%rbp), %rdi
	callq	_ZN7testing8internal27CheckedDowncastToActualTypeINS0_26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EENS0_30ParameterizedTestSuiteInfoBaseEEEPT_PT0_
	movq	%rax, %rbp
	testq	%rax, %rax
	jne	.LBB10_22
.LBB10_8:                               # %if.then20
	movl	$128, %edi
	callq	_Znwm
	movq	%rax, 8(%rsp)                   # 8-byte Spill
	leaq	56(%rsp), %rbx
	movq	%rbx, 40(%rsp)
	movq	(%r12), %r13
	movq	8(%r12), %rbp
	movq	%rbp, 32(%rsp)
	cmpq	$15, %rbp
	jbe	.LBB10_9
# %bb.10:                               # %if.then4.i.i.i.i
.Ltmp33:
	leaq	40(%rsp), %rdi
	leaq	32(%rsp), %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp34:
# %bb.11:                               # %call5.i.i.i16.i.noexc
	movq	%rax, 40(%rsp)
	movq	32(%rsp), %rcx
	movq	%rcx, 56(%rsp)
	testq	%rbp, %rbp
	jne	.LBB10_13
	jmp	.LBB10_16
.LBB10_9:                               # %if.end.if.end6_crit_edge.i.i.i.i
	movq	%rbx, %rax
	testq	%rbp, %rbp
	je	.LBB10_16
.LBB10_13:                              # %if.end6.i.i.i.i
	cmpq	$1, %rbp
	jne	.LBB10_15
# %bb.14:                               # %if.then.i.i.i.i.i.i
	movb	(%r13), %cl
	movb	%cl, (%rax)
	jmp	.LBB10_16
.LBB10_15:                              # %if.end.i.i.i.i.i.i.i
	movq	%rax, %rdi
	movq	%r13, %rsi
	movq	%rbp, %rdx
	callq	memcpy@PLT
.LBB10_16:                              # %invoke.cont24
	movq	32(%rsp), %rax
	movq	%rax, 48(%rsp)
	movq	40(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movl	32(%r12), %eax
	movl	%eax, 72(%rsp)
.Ltmp36:
	leaq	40(%rsp), %rdx
	movq	8(%rsp), %rbp                   # 8-byte Reload
	movq	%rbp, %rdi
	movq	%r14, %rsi
	callq	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EC2EPKcNS0_12CodeLocationE
.Ltmp37:
# %bb.17:                               # %invoke.cont26
	movq	40(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB10_19
# %bb.18:                               # %if.then.i.i.i57
	callq	_ZdlPv
.LBB10_19:                              # %_ZN7testing8internal12CodeLocationD2Ev.exit58
	leaq	8(%r15), %r12
	movq	8(%r15), %rbx
	cmpq	16(%r15), %rbx
	je	.LBB10_23
# %bb.20:                               # %if.then.i.i
	movq	%rbp, (%rbx)
	movq	(%r12), %rax
	addq	$8, %rax
	jmp	.LBB10_21
.LBB10_23:                              # %if.else.i.i
	movq	(%r15), %rdx
	movq	%rbx, %rbp
	subq	%rdx, %rbp
	movq	%rbp, %r14
	sarq	$3, %r14
	testq	%rbp, %rbp
	movl	$1, %eax
	cmovneq	%r14, %rax
	leaq	(%rax,%r14), %r13
	movq	%r13, %rcx
	shrq	$61, %rcx
	movabsq	$2305843009213693951, %rcx      # imm = 0x1FFFFFFFFFFFFFFF
	cmovneq	%rcx, %r13
	addq	%r14, %rax
	cmovbq	%rcx, %r13
	testq	%r13, %r13
	je	.LBB10_24
# %bb.25:                               # %_ZNSt16allocator_traitsISaIPN7testing8internal30ParameterizedTestSuiteInfoBaseEEE8allocateERS4_m.exit.i.i.i.i
	leaq	(,%r13,8), %rdi
	callq	_Znwm
	movq	%rax, %rcx
	movq	(%r15), %rax
	movq	%rbx, %rbp
	movq	%rax, 16(%rsp)                  # 8-byte Spill
	subq	%rax, %rbp
	jmp	.LBB10_26
.LBB10_24:
	movq	%rdx, 16(%rsp)                  # 8-byte Spill
	xorl	%ecx, %ecx
.LBB10_26:                              # %invoke.cont.i.i.i
	movq	8(%rsp), %rax                   # 8-byte Reload
	movq	%rax, (%rcx,%r14,8)
	testq	%rbp, %rbp
	movq	%rcx, 24(%rsp)                  # 8-byte Spill
	je	.LBB10_28
# %bb.27:                               # %if.then.i.i.i.i.i.i.i.i.i.i.i
	movq	24(%rsp), %rdi                  # 8-byte Reload
	movq	16(%rsp), %rsi                  # 8-byte Reload
	movq	%rbp, %rdx
	callq	memmove@PLT
	movq	24(%rsp), %rcx                  # 8-byte Reload
.LBB10_28:                              # %invoke.cont10.i.i.i
	addq	%rcx, %rbp
	addq	$8, %rbp
	movq	(%r12), %r14
	subq	%rbx, %r14
	je	.LBB10_30
# %bb.29:                               # %if.then.i.i.i.i.i.i.i.i72.i.i.i
	movq	%rbp, %rdi
	movq	%rbx, %rsi
	movq	%r14, %rdx
	callq	memmove@PLT
.LBB10_30:                              # %invoke.cont15.i.i.i
	movq	16(%rsp), %rdi                  # 8-byte Reload
	testq	%rdi, %rdi
	je	.LBB10_32
# %bb.31:                               # %if.then.i76.i.i.i
	callq	_ZdlPv
.LBB10_32:                              # %_ZNSt6vectorIPN7testing8internal30ParameterizedTestSuiteInfoBaseESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_.exit.i.i
	leaq	16(%r15), %r12
	addq	%r14, %rbp
	movq	24(%rsp), %rax                  # 8-byte Reload
	movq	%rax, (%r15)
	movq	%rbp, 8(%r15)
	leaq	(%rax,%r13,8), %rax
	movq	8(%rsp), %rbp                   # 8-byte Reload
.LBB10_21:                              # %if.end28.sink.split
	movq	%rax, (%r12)
.LBB10_22:                              # %if.end28
	movq	%rbp, %rax
	addq	$120, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB10_3:                               # %if.then12
	.cfi_def_cfa_offset 176
	leaq	80(%rsp), %rbp
	movq	%rbp, %rdi
	movq	%r12, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_
	movl	32(%r12), %eax
	movl	%eax, 112(%rsp)
.Ltmp30:
	movq	%r14, %rdi
	movq	%rbp, %rsi
	callq	_ZN7testing8internal26ReportInvalidTestSuiteTypeEPKcNS0_12CodeLocationE
.Ltmp31:
# %bb.4:                                # %invoke.cont
	leaq	80(%rsp), %rdi
	callq	_ZN7testing8internal12CodeLocationD2Ev
	callq	_ZN7testing8internal5posix5AbortEv
.LBB10_5:                               # %lpad
.Ltmp32:
	movq	%rax, %rbp
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB10_37
	jmp	.LBB10_38
.LBB10_33:                              # %lpad23
.Ltmp35:
	movq	%rax, %rbp
	jmp	.LBB10_36
.LBB10_34:                              # %lpad25
.Ltmp38:
	movq	%rax, %rbp
	movq	40(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB10_36
# %bb.35:                               # %if.then.i.i.i62
	callq	_ZdlPv
.LBB10_36:                              # %cleanup.action
	movq	8(%rsp), %rdi                   # 8-byte Reload
.LBB10_37:                              # %ehcleanup30
	callq	_ZdlPv
.LBB10_38:                              # %ehcleanup30
	movq	%rbp, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end10:
	.size	_ZN7testing8internal30ParameterizedTestSuiteRegistry25GetTestSuitePatternHolderI29MmaSyncMultiLdsTest32x32NT2x2EEPNS0_26ParameterizedTestSuiteInfoIT_EEPKcNS0_12CodeLocationE, .Lfunc_end10-_ZN7testing8internal30ParameterizedTestSuiteRegistry25GetTestSuitePatternHolderI29MmaSyncMultiLdsTest32x32NT2x2EEPNS0_26ParameterizedTestSuiteInfoIT_EEPKcNS0_12CodeLocationE
	.cfi_endproc
	.section	.gcc_except_table._ZN7testing8internal30ParameterizedTestSuiteRegistry25GetTestSuitePatternHolderI29MmaSyncMultiLdsTest32x32NT2x2EEPNS0_26ParameterizedTestSuiteInfoIT_EEPKcNS0_12CodeLocationE,"aG",@progbits,_ZN7testing8internal30ParameterizedTestSuiteRegistry25GetTestSuitePatternHolderI29MmaSyncMultiLdsTest32x32NT2x2EEPNS0_26ParameterizedTestSuiteInfoIT_EEPKcNS0_12CodeLocationE,comdat
	.p2align	2
GCC_except_table10:
.Lexception4:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end4-.Lcst_begin4
.Lcst_begin4:
	.uleb128 .Lfunc_begin4-.Lfunc_begin4    # >> Call Site 1 <<
	.uleb128 .Ltmp33-.Lfunc_begin4          #   Call between .Lfunc_begin4 and .Ltmp33
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp33-.Lfunc_begin4          # >> Call Site 2 <<
	.uleb128 .Ltmp34-.Ltmp33                #   Call between .Ltmp33 and .Ltmp34
	.uleb128 .Ltmp35-.Lfunc_begin4          #     jumps to .Ltmp35
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp34-.Lfunc_begin4          # >> Call Site 3 <<
	.uleb128 .Ltmp36-.Ltmp34                #   Call between .Ltmp34 and .Ltmp36
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp36-.Lfunc_begin4          # >> Call Site 4 <<
	.uleb128 .Ltmp37-.Ltmp36                #   Call between .Ltmp36 and .Ltmp37
	.uleb128 .Ltmp38-.Lfunc_begin4          #     jumps to .Ltmp38
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp37-.Lfunc_begin4          # >> Call Site 5 <<
	.uleb128 .Ltmp30-.Ltmp37                #   Call between .Ltmp37 and .Ltmp30
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp30-.Lfunc_begin4          # >> Call Site 6 <<
	.uleb128 .Ltmp31-.Ltmp30                #   Call between .Ltmp30 and .Ltmp31
	.uleb128 .Ltmp32-.Lfunc_begin4          #     jumps to .Ltmp32
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp31-.Lfunc_begin4          # >> Call Site 7 <<
	.uleb128 .Lfunc_end10-.Ltmp31           #   Call between .Ltmp31 and .Lfunc_end10
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end4:
	.p2align	2
                                        # -- End function
	.section	.text._ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E14AddTestPatternEPKcS5_PNS0_19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES7_IJlllEEddEEEENS0_12CodeLocationE,"axG",@progbits,_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E14AddTestPatternEPKcS5_PNS0_19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES7_IJlllEEddEEEENS0_12CodeLocationE,comdat
	.weak	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E14AddTestPatternEPKcS5_PNS0_19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES7_IJlllEEddEEEENS0_12CodeLocationE # -- Begin function _ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E14AddTestPatternEPKcS5_PNS0_19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES7_IJlllEEddEEEENS0_12CodeLocationE
	.p2align	4, 0x90
	.type	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E14AddTestPatternEPKcS5_PNS0_19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES7_IJlllEEddEEEENS0_12CodeLocationE,@function
_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E14AddTestPatternEPKcS5_PNS0_19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES7_IJlllEEddEEEENS0_12CodeLocationE: # @_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E14AddTestPatternEPKcS5_PNS0_19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES7_IJlllEEddEEEENS0_12CodeLocationE
.Lfunc_begin5:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception5
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$88, %rsp
	.cfi_def_cfa_offset 144
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, %rbp
	movq	%rcx, 80(%rsp)                  # 8-byte Spill
	movq	%rdx, 72(%rsp)                  # 8-byte Spill
	movq	%rsi, %r13
	movq	%rdi, %rbx
	movl	$112, %edi
	callq	_Znwm
	movq	%rax, %r14
	leaq	48(%rsp), %rax
	movq	%rax, 32(%rsp)
	movq	(%rbp), %r15
	movq	8(%rbp), %r12
	movq	%r12, 24(%rsp)
	cmpq	$15, %r12
	jbe	.LBB11_3
# %bb.1:                                # %if.then4.i.i.i.i
.Ltmp39:
	leaq	32(%rsp), %rdi
	leaq	24(%rsp), %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp40:
# %bb.2:                                # %call5.i.i.i16.i.noexc
	movq	%rax, 32(%rsp)
	movq	24(%rsp), %rcx
	movq	%rcx, 48(%rsp)
.LBB11_3:                               # %if.end6.i.i.i.i
	testq	%r12, %r12
	je	.LBB11_7
# %bb.4:                                # %if.end6.i.i.i.i
	cmpq	$1, %r12
	jne	.LBB11_6
# %bb.5:                                # %if.then.i.i.i.i.i.i
	movb	(%r15), %cl
	movb	%cl, (%rax)
	jmp	.LBB11_7
.LBB11_6:                               # %if.end.i.i.i.i.i.i.i
	movq	%rax, %rdi
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB11_7:                               # %invoke.cont
	movq	24(%rsp), %rax
	movq	%rax, 40(%rsp)
	movq	32(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movl	32(%rbp), %eax
	movl	%eax, 64(%rsp)
	movb	$1, %bpl
.Ltmp42:
	leaq	32(%rsp), %r8
	movq	%r14, %rdi
	movq	%r13, %rsi
	movq	72(%rsp), %rdx                  # 8-byte Reload
	movq	80(%rsp), %rcx                  # 8-byte Reload
	callq	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoC2EPKcS6_PNS0_19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES8_IJlllEEddEEEENS0_12CodeLocationE
.Ltmp43:
# %bb.8:                                # %invoke.cont3
	movq	%r14, 8(%rsp)
	leaq	16(%rsp), %r15
	xorl	%ebp, %ebp
.Ltmp44:
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2IPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEEET_
.Ltmp45:
# %bb.9:                                # %invoke.cont4
	movq	88(%rbx), %rsi
	cmpq	96(%rbx), %rsi
	je	.LBB11_11
# %bb.10:                               # %if.then.i.i
	movq	8(%rsp), %rax
	movq	%rax, (%rsi)
	movq	$0, 8(%rsi)
	movq	16(%rsp), %rax
	movq	$0, 16(%rsp)
	movq	%rax, 8(%rsi)
	movq	$0, 8(%rsp)
	addq	$16, %rsi
	movq	%rsi, 88(%rbx)
	leaq	48(%rsp), %rbp
	jmp	.LBB11_12
.LBB11_11:                              # %if.else.i.i
	addq	$80, %rbx
.Ltmp47:
	leaq	8(%rsp), %rdx
	movq	%rbx, %rdi
	leaq	48(%rsp), %rbp
	callq	_ZNSt6vectorISt10shared_ptrIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_
.Ltmp48:
.LBB11_12:                              # %invoke.cont6
	movq	16(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB11_22
# %bb.13:                               # %if.then.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB11_15
# %bb.14:                               # %if.then.i.i.i20
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB11_17
	jmp	.LBB11_22
.LBB11_15:                              # %if.else.i.i.i
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB11_22
.LBB11_17:                              # %if.then.i.i21
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB11_19
# %bb.18:                               # %if.then.i9.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB11_21
	jmp	.LBB11_22
.LBB11_19:                              # %if.else.i11.i.i
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB11_22
.LBB11_21:                              # %if.then5.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
.LBB11_22:                              # %_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev.exit
	movq	32(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB11_24
# %bb.23:                               # %if.then.i.i.i
	callq	_ZdlPv
.LBB11_24:                              # %_ZN7testing8internal12CodeLocationD2Ev.exit
	addq	$88, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB11_26:                              # %ehcleanup.thread
	.cfi_def_cfa_offset 144
.Ltmp49:
	movq	%rax, %rbx
	movq	%r15, %rdi
	callq	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev
	movq	32(%rsp), %rdi
	cmpq	%rbp, %rdi
	jne	.LBB11_31
	jmp	.LBB11_32
.LBB11_25:                              # %ehcleanup7.thread
.Ltmp41:
	movq	%rax, %rbx
	jmp	.LBB11_30
.LBB11_27:                              # %ehcleanup
.Ltmp46:
	movq	%rax, %rbx
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB11_29
# %bb.28:                               # %if.then.i.i.i16
	callq	_ZdlPv
.LBB11_29:                              # %ehcleanup7
	testb	%bpl, %bpl
	je	.LBB11_32
.LBB11_30:                              # %cleanup.action
	movq	%r14, %rdi
.LBB11_31:                              # %cleanup.done
	callq	_ZdlPv
.LBB11_32:                              # %cleanup.done
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end11:
	.size	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E14AddTestPatternEPKcS5_PNS0_19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES7_IJlllEEddEEEENS0_12CodeLocationE, .Lfunc_end11-_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E14AddTestPatternEPKcS5_PNS0_19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES7_IJlllEEddEEEENS0_12CodeLocationE
	.cfi_endproc
	.section	.gcc_except_table._ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E14AddTestPatternEPKcS5_PNS0_19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES7_IJlllEEddEEEENS0_12CodeLocationE,"aG",@progbits,_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E14AddTestPatternEPKcS5_PNS0_19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES7_IJlllEEddEEEENS0_12CodeLocationE,comdat
	.p2align	2
GCC_except_table11:
.Lexception5:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end5-.Lcst_begin5
.Lcst_begin5:
	.uleb128 .Lfunc_begin5-.Lfunc_begin5    # >> Call Site 1 <<
	.uleb128 .Ltmp39-.Lfunc_begin5          #   Call between .Lfunc_begin5 and .Ltmp39
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp39-.Lfunc_begin5          # >> Call Site 2 <<
	.uleb128 .Ltmp40-.Ltmp39                #   Call between .Ltmp39 and .Ltmp40
	.uleb128 .Ltmp41-.Lfunc_begin5          #     jumps to .Ltmp41
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp40-.Lfunc_begin5          # >> Call Site 3 <<
	.uleb128 .Ltmp42-.Ltmp40                #   Call between .Ltmp40 and .Ltmp42
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp42-.Lfunc_begin5          # >> Call Site 4 <<
	.uleb128 .Ltmp45-.Ltmp42                #   Call between .Ltmp42 and .Ltmp45
	.uleb128 .Ltmp46-.Lfunc_begin5          #     jumps to .Ltmp46
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp47-.Lfunc_begin5          # >> Call Site 5 <<
	.uleb128 .Ltmp48-.Ltmp47                #   Call between .Ltmp47 and .Ltmp48
	.uleb128 .Ltmp49-.Lfunc_begin5          #     jumps to .Ltmp49
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp48-.Lfunc_begin5          # >> Call Site 6 <<
	.uleb128 .Lfunc_end11-.Ltmp48           #   Call between .Ltmp48 and .Lfunc_end11
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end5:
	.p2align	2
                                        # -- End function
	.section	.text._ZN7testing8internal12CodeLocationD2Ev,"axG",@progbits,_ZN7testing8internal12CodeLocationD2Ev,comdat
	.weak	_ZN7testing8internal12CodeLocationD2Ev # -- Begin function _ZN7testing8internal12CodeLocationD2Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal12CodeLocationD2Ev,@function
_ZN7testing8internal12CodeLocationD2Ev: # @_ZN7testing8internal12CodeLocationD2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	movq	%rdi, %rax
	movq	(%rdi), %rdi
	addq	$16, %rax
	cmpq	%rax, %rdi
	je	.LBB12_1
# %bb.2:                                # %if.then.i.i
	jmp	_ZdlPv                          # TAILCALL
.LBB12_1:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	retq
.Lfunc_end12:
	.size	_ZN7testing8internal12CodeLocationD2Ev, .Lfunc_end12-_ZN7testing8internal12CodeLocationD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal5posix5AbortEv,"axG",@progbits,_ZN7testing8internal5posix5AbortEv,comdat
	.weak	_ZN7testing8internal5posix5AbortEv # -- Begin function _ZN7testing8internal5posix5AbortEv
	.p2align	4, 0x90
	.type	_ZN7testing8internal5posix5AbortEv,@function
_ZN7testing8internal5posix5AbortEv:     # @_ZN7testing8internal5posix5AbortEv
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rax
	.cfi_def_cfa_offset 16
	callq	abort
.Lfunc_end13:
	.size	_ZN7testing8internal5posix5AbortEv, .Lfunc_end13-_ZN7testing8internal5posix5AbortEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal27CheckedDowncastToActualTypeINS0_26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EENS0_30ParameterizedTestSuiteInfoBaseEEEPT_PT0_,"axG",@progbits,_ZN7testing8internal27CheckedDowncastToActualTypeINS0_26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EENS0_30ParameterizedTestSuiteInfoBaseEEEPT_PT0_,comdat
	.weak	_ZN7testing8internal27CheckedDowncastToActualTypeINS0_26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EENS0_30ParameterizedTestSuiteInfoBaseEEEPT_PT0_ # -- Begin function _ZN7testing8internal27CheckedDowncastToActualTypeINS0_26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EENS0_30ParameterizedTestSuiteInfoBaseEEEPT_PT0_
	.p2align	4, 0x90
	.type	_ZN7testing8internal27CheckedDowncastToActualTypeINS0_26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EENS0_30ParameterizedTestSuiteInfoBaseEEEPT_PT0_,@function
_ZN7testing8internal27CheckedDowncastToActualTypeINS0_26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EENS0_30ParameterizedTestSuiteInfoBaseEEEPT_PT0_: # @_ZN7testing8internal27CheckedDowncastToActualTypeINS0_26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EENS0_30ParameterizedTestSuiteInfoBaseEEEPT_PT0_
.Lfunc_begin6:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception6
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -16
	testq	%rdi, %rdi
	je	.LBB14_10
# %bb.1:                                # %typeid.end
	movq	%rdi, %rbx
	movq	(%rdi), %rax
	movq	-8(%rax), %rax
	movq	8(%rax), %rdi
	cmpq	$_ZTSN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE, %rdi
	je	.LBB14_2
# %bb.3:                                # %lor.rhs.i
	cmpb	$42, (%rdi)
	jne	.LBB14_5
# %bb.4:
	xorl	%eax, %eax
	movzbl	%al, %edi
	callq	_ZN7testing8internal6IsTrueEb
	testb	%al, %al
	je	.LBB14_7
	jmp	.LBB14_9
.LBB14_2:
	movb	$1, %al
	movzbl	%al, %edi
	callq	_ZN7testing8internal6IsTrueEb
	testb	%al, %al
	je	.LBB14_7
	jmp	.LBB14_9
.LBB14_5:                               # %land.rhs.i
	movl	$_ZTSN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE, %esi
	callq	strcmp
	testl	%eax, %eax
	sete	%al
	movzbl	%al, %edi
	callq	_ZN7testing8internal6IsTrueEb
	testb	%al, %al
	jne	.LBB14_9
.LBB14_7:                               # %if.else
	leaq	8(%rsp), %rdi
	movl	$.L.str.5, %edx
	movl	$3, %esi
	movl	$1114, %ecx                     # imm = 0x45A
	callq	_ZN7testing8internal8GTestLogC1ENS0_16GTestLogSeverityEPKci
.Ltmp50:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.6, %esi
	movl	$51, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp51:
# %bb.8:                                # %invoke.cont3
	leaq	8(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
.LBB14_9:                               # %dynamic_cast.end
	movl	$_ZTIN7testing8internal30ParameterizedTestSuiteInfoBaseE, %esi
	movl	$_ZTIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE, %edx
	movq	%rbx, %rdi
	xorl	%ecx, %ecx
	callq	__dynamic_cast
	addq	$16, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB14_10:                              # %typeid.bad_typeid
	.cfi_def_cfa_offset 32
	callq	__cxa_bad_typeid
.LBB14_11:                              # %lpad
.Ltmp52:
	movq	%rax, %rbx
	leaq	8(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end14:
	.size	_ZN7testing8internal27CheckedDowncastToActualTypeINS0_26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EENS0_30ParameterizedTestSuiteInfoBaseEEEPT_PT0_, .Lfunc_end14-_ZN7testing8internal27CheckedDowncastToActualTypeINS0_26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EENS0_30ParameterizedTestSuiteInfoBaseEEEPT_PT0_
	.cfi_endproc
	.section	.gcc_except_table._ZN7testing8internal27CheckedDowncastToActualTypeINS0_26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EENS0_30ParameterizedTestSuiteInfoBaseEEEPT_PT0_,"aG",@progbits,_ZN7testing8internal27CheckedDowncastToActualTypeINS0_26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EENS0_30ParameterizedTestSuiteInfoBaseEEEPT_PT0_,comdat
	.p2align	2
GCC_except_table14:
.Lexception6:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end6-.Lcst_begin6
.Lcst_begin6:
	.uleb128 .Lfunc_begin6-.Lfunc_begin6    # >> Call Site 1 <<
	.uleb128 .Ltmp50-.Lfunc_begin6          #   Call between .Lfunc_begin6 and .Ltmp50
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp50-.Lfunc_begin6          # >> Call Site 2 <<
	.uleb128 .Ltmp51-.Ltmp50                #   Call between .Ltmp50 and .Ltmp51
	.uleb128 .Ltmp52-.Lfunc_begin6          #     jumps to .Ltmp52
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp51-.Lfunc_begin6          # >> Call Site 3 <<
	.uleb128 .Lfunc_end14-.Ltmp51           #   Call between .Ltmp51 and .Lfunc_end14
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end6:
	.p2align	2
                                        # -- End function
	.section	.text._ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EC2EPKcNS0_12CodeLocationE,"axG",@progbits,_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EC2EPKcNS0_12CodeLocationE,comdat
	.weak	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EC2EPKcNS0_12CodeLocationE # -- Begin function _ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EC2EPKcNS0_12CodeLocationE
	.p2align	4, 0x90
	.type	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EC2EPKcNS0_12CodeLocationE,@function
_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EC2EPKcNS0_12CodeLocationE: # @_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EC2EPKcNS0_12CodeLocationE
.Lfunc_begin7:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception7
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	$_ZTVN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE+16, (%rdi)
	leaq	24(%rdi), %rbp
	movq	%rbp, 8(%rdi)
	testq	%rsi, %rsi
	je	.LBB15_18
# %bb.1:                                # %if.end.i.i.i.i
	movq	%rdx, %r14
	movq	%rsi, %r12
	movq	%rdi, %rbx
	leaq	8(%rdi), %r15
	movq	%rsi, %rdi
	callq	strlen
	movq	%rax, %r13
	movq	%rax, (%rsp)
	movq	%rbp, %rax
	cmpq	$16, %r13
	jb	.LBB15_3
# %bb.2:                                # %if.then4.i.i.i.i
	movq	%rsp, %rsi
	movq	%r15, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
	movq	%rax, 8(%rbx)
	movq	(%rsp), %rcx
	movq	%rcx, 24(%rbx)
.LBB15_3:                               # %if.end6.i.i.i.i
	testq	%r13, %r13
	je	.LBB15_7
# %bb.4:                                # %if.end6.i.i.i.i
	cmpq	$1, %r13
	jne	.LBB15_6
# %bb.5:                                # %if.then.i.i.i.i.i.i
	movb	(%r12), %cl
	movb	%cl, (%rax)
	jmp	.LBB15_7
.LBB15_6:                               # %if.end.i.i.i.i.i.i.i
	movq	%rax, %rdi
	movq	%r12, %rsi
	movq	%r13, %rdx
	callq	memcpy@PLT
.LBB15_7:                               # %invoke.cont
	movq	(%rsp), %rax
	movq	%rax, 16(%rbx)
	movq	8(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	leaq	56(%rbx), %rax
	movq	%rax, 40(%rbx)
	movq	(%r14), %r12
	movq	8(%r14), %r13
	movq	%r13, (%rsp)
	cmpq	$15, %r13
	jbe	.LBB15_10
# %bb.8:                                # %if.then4.i.i.i.i12
	leaq	40(%rbx), %rdi
.Ltmp53:
	movq	%rsp, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp54:
# %bb.9:                                # %call5.i.i.i16.i.noexc
	movq	%rax, 40(%rbx)
	movq	(%rsp), %rcx
	movq	%rcx, 56(%rbx)
.LBB15_10:                              # %if.end6.i.i.i.i13
	testq	%r13, %r13
	je	.LBB15_14
# %bb.11:                               # %if.end6.i.i.i.i13
	cmpq	$1, %r13
	jne	.LBB15_13
# %bb.12:                               # %if.then.i.i.i.i.i.i14
	movb	(%r12), %cl
	movb	%cl, (%rax)
	jmp	.LBB15_14
.LBB15_13:                              # %if.end.i.i.i.i.i.i.i15
	movq	%rax, %rdi
	movq	%r12, %rsi
	movq	%r13, %rdx
	callq	memcpy@PLT
.LBB15_14:                              # %invoke.cont3
	movq	(%rsp), %rax
	movq	%rax, 48(%rbx)
	movq	40(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	movl	32(%r14), %eax
	movl	%eax, 72(%rbx)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 80(%rbx)
	movups	%xmm0, 96(%rbx)
	movups	%xmm0, 112(%rbx)
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB15_18:                              # %if.then.i.i.i.i
	.cfi_def_cfa_offset 64
	movl	$.L.str.4, %edi
	callq	_ZSt19__throw_logic_errorPKc
.LBB15_15:                              # %lpad2
.Ltmp55:
	movq	%rax, %rbx
	movq	(%r15), %rdi
	cmpq	%rbp, %rdi
	je	.LBB15_17
# %bb.16:                               # %if.then.i.i
	callq	_ZdlPv
.LBB15_17:                              # %ehcleanup
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end15:
	.size	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EC2EPKcNS0_12CodeLocationE, .Lfunc_end15-_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EC2EPKcNS0_12CodeLocationE
	.cfi_endproc
	.section	.gcc_except_table._ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EC2EPKcNS0_12CodeLocationE,"aG",@progbits,_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EC2EPKcNS0_12CodeLocationE,comdat
	.p2align	2
GCC_except_table15:
.Lexception7:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end7-.Lcst_begin7
.Lcst_begin7:
	.uleb128 .Lfunc_begin7-.Lfunc_begin7    # >> Call Site 1 <<
	.uleb128 .Ltmp53-.Lfunc_begin7          #   Call between .Lfunc_begin7 and .Ltmp53
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp53-.Lfunc_begin7          # >> Call Site 2 <<
	.uleb128 .Ltmp54-.Ltmp53                #   Call between .Ltmp53 and .Ltmp54
	.uleb128 .Ltmp55-.Lfunc_begin7          #     jumps to .Ltmp55
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp54-.Lfunc_begin7          # >> Call Site 3 <<
	.uleb128 .Lfunc_end15-.Ltmp54           #   Call between .Ltmp54 and .Lfunc_end15
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end7:
	.p2align	2
                                        # -- End function
	.section	.text.__clang_call_terminate,"axG",@progbits,__clang_call_terminate,comdat
	.hidden	__clang_call_terminate          # -- Begin function __clang_call_terminate
	.weak	__clang_call_terminate
	.p2align	4, 0x90
	.type	__clang_call_terminate,@function
__clang_call_terminate:                 # @__clang_call_terminate
# %bb.0:
	pushq	%rax
	callq	__cxa_begin_catch
	callq	_ZSt9terminatev
.Lfunc_end16:
	.size	__clang_call_terminate, .Lfunc_end16-__clang_call_terminate
                                        # -- End function
	.section	.text._ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2ED2Ev,"axG",@progbits,_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2ED2Ev,comdat
	.weak	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2ED2Ev # -- Begin function _ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2ED2Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2ED2Ev,@function
_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2ED2Ev: # @_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2ED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	movq	$_ZTVN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE+16, (%rdi)
	movq	104(%rdi), %rbx
	movq	112(%rdi), %r15
	cmpq	%r15, %rbx
	jne	.LBB17_1
# %bb.5:                                # %invoke.cont.i
	testq	%rbx, %rbx
	je	.LBB17_7
.LBB17_6:                               # %if.then.i.i.i
	movq	%rbx, %rdi
	callq	_ZdlPv
.LBB17_7:                               # %_ZNSt6vectorIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E17InstantiationInfoESaIS5_EED2Ev.exit
	movq	80(%r14), %rbx
	movq	88(%r14), %r12
	cmpq	%r12, %rbx
	je	.LBB17_21
# %bb.8:                                # %for.body.i.i.preheader
	movl	$__pthread_key_create, %r13d
	jmp	.LBB17_9
	.p2align	4, 0x90
.LBB17_3:                               # %_ZSt8_DestroyIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E17InstantiationInfoEEvPT_.exit.i.i.i.i
                                        #   in Loop: Header=BB17_1 Depth=1
	addq	$48, %rbx
	cmpq	%r15, %rbx
	je	.LBB17_4
.LBB17_1:                               # %for.body.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rbx), %rdi
	addq	$16, %rbx
	cmpq	%rbx, %rdi
	je	.LBB17_3
# %bb.2:                                # %if.then.i.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB17_1 Depth=1
	callq	_ZdlPv
	jmp	.LBB17_3
	.p2align	4, 0x90
.LBB17_19:                              # %_ZSt8_DestroyISt10shared_ptrIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB17_9 Depth=1
	addq	$16, %rbx
	cmpq	%rbx, %r12
	je	.LBB17_20
.LBB17_9:                               # %for.body.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	8(%rbx), %r15
	testq	%r15, %r15
	je	.LBB17_19
# %bb.10:                               # %if.then.i.i.i.i
                                        #   in Loop: Header=BB17_9 Depth=1
	testq	%r13, %r13
	je	.LBB17_12
# %bb.11:                               # %if.then.i.i.i.i.i.i
                                        #   in Loop: Header=BB17_9 Depth=1
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%r15)
	cmpl	$1, %eax
	jne	.LBB17_19
	jmp	.LBB17_14
	.p2align	4, 0x90
.LBB17_12:                              # %if.else.i.i.i.i.i.i
                                        #   in Loop: Header=BB17_9 Depth=1
	movl	8(%r15), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%r15)
	cmpl	$1, %eax
	jne	.LBB17_19
.LBB17_14:                              # %if.then.i.i.i.i.i
                                        #   in Loop: Header=BB17_9 Depth=1
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*16(%rax)
	testq	%r13, %r13
	je	.LBB17_16
# %bb.15:                               # %if.then.i9.i.i.i.i.i
                                        #   in Loop: Header=BB17_9 Depth=1
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%r15)
	cmpl	$1, %eax
	jne	.LBB17_19
	jmp	.LBB17_18
.LBB17_16:                              # %if.else.i11.i.i.i.i.i
                                        #   in Loop: Header=BB17_9 Depth=1
	movl	12(%r15), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%r15)
	cmpl	$1, %eax
	jne	.LBB17_19
.LBB17_18:                              # %if.then5.i.i.i.i.i
                                        #   in Loop: Header=BB17_9 Depth=1
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*24(%rax)
	jmp	.LBB17_19
.LBB17_4:                               # %invoke.cont.loopexit.i
	movq	104(%r14), %rbx
	testq	%rbx, %rbx
	jne	.LBB17_6
	jmp	.LBB17_7
.LBB17_20:                              # %invoke.cont.loopexit.i6
	movq	80(%r14), %rbx
.LBB17_21:                              # %invoke.cont.i8
	testq	%rbx, %rbx
	je	.LBB17_23
# %bb.22:                               # %if.then.i.i.i9
	movq	%rbx, %rdi
	callq	_ZdlPv
.LBB17_23:                              # %_ZNSt6vectorISt10shared_ptrIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEESaIS7_EED2Ev.exit
	movq	40(%r14), %rdi
	leaq	56(%r14), %rax
	cmpq	%rax, %rdi
	je	.LBB17_25
# %bb.24:                               # %if.then.i.i.i10
	callq	_ZdlPv
.LBB17_25:                              # %_ZN7testing8internal12CodeLocationD2Ev.exit
	movq	8(%r14), %rdi
	addq	$24, %r14
	cmpq	%r14, %rdi
	je	.LBB17_26
# %bb.27:                               # %if.then.i.i
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.LBB17_26:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end17:
	.size	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2ED2Ev, .Lfunc_end17-_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2ED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2ED0Ev,"axG",@progbits,_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2ED0Ev,comdat
	.weak	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2ED0Ev # -- Begin function _ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2ED0Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2ED0Ev,@function
_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2ED0Ev: # @_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2ED0Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	callq	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2ED2Ev
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end18:
	.size	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2ED0Ev, .Lfunc_end18-_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2ED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E16GetTestSuiteNameB5cxx11Ev,"axG",@progbits,_ZNK7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E16GetTestSuiteNameB5cxx11Ev,comdat
	.weak	_ZNK7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E16GetTestSuiteNameB5cxx11Ev # -- Begin function _ZNK7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E16GetTestSuiteNameB5cxx11Ev
	.p2align	4, 0x90
	.type	_ZNK7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E16GetTestSuiteNameB5cxx11Ev,@function
_ZNK7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E16GetTestSuiteNameB5cxx11Ev: # @_ZNK7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E16GetTestSuiteNameB5cxx11Ev
	.cfi_startproc
# %bb.0:                                # %entry
	leaq	8(%rdi), %rax
	retq
.Lfunc_end19:
	.size	_ZNK7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E16GetTestSuiteNameB5cxx11Ev, .Lfunc_end19-_ZNK7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E16GetTestSuiteNameB5cxx11Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E18GetTestSuiteTypeIdEv,"axG",@progbits,_ZNK7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E18GetTestSuiteTypeIdEv,comdat
	.weak	_ZNK7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E18GetTestSuiteTypeIdEv # -- Begin function _ZNK7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E18GetTestSuiteTypeIdEv
	.p2align	4, 0x90
	.type	_ZNK7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E18GetTestSuiteTypeIdEv,@function
_ZNK7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E18GetTestSuiteTypeIdEv: # @_ZNK7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E18GetTestSuiteTypeIdEv
	.cfi_startproc
# %bb.0:                                # %entry
	movl	$_ZN7testing8internal12TypeIdHelperI29MmaSyncMultiLdsTest32x32NT2x2E6dummy_E, %eax
	retq
.Lfunc_end20:
	.size	_ZNK7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E18GetTestSuiteTypeIdEv, .Lfunc_end20-_ZNK7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E18GetTestSuiteTypeIdEv
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4                               # -- Begin function _ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E13RegisterTestsEv
.LCPI21_0:
	.zero	16
	.section	.text._ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E13RegisterTestsEv,"axG",@progbits,_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E13RegisterTestsEv,comdat
	.weak	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E13RegisterTestsEv
	.p2align	4, 0x90
	.type	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E13RegisterTestsEv,@function
_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E13RegisterTestsEv: # @_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E13RegisterTestsEv
.Lfunc_begin8:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception8
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$920, %rsp                      # imm = 0x398
	.cfi_def_cfa_offset 976
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	80(%rdi), %rdx
	movq	%rdi, 40(%rsp)                  # 8-byte Spill
	cmpq	88(%rdi), %rdx
	je	.LBB21_246
# %bb.1:                                # %for.body.preheader
	leaq	432(%rsp), %r13
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE@GOTPCREL(%rip), %rax
	movq	16(%rax), %rcx
	movq	%rcx, 72(%rsp)                  # 8-byte Spill
	movq	24(%rax), %rcx
	movq	%rcx, 80(%rsp)                  # 8-byte Spill
	movq	32(%rax), %rcx
	movq	%rcx, 768(%rsp)                 # 8-byte Spill
	movq	40(%rax), %rcx
	movq	%rcx, 760(%rsp)                 # 8-byte Spill
	movq	(%rax), %rcx
	movq	%rcx, 232(%rsp)                 # 8-byte Spill
	movq	8(%rax), %rcx
	movq	%rcx, 752(%rsp)                 # 8-byte Spill
	movq	48(%rax), %rcx
	movq	%rcx, 744(%rsp)                 # 8-byte Spill
	movq	64(%rax), %rcx
	movq	%rcx, 224(%rsp)                 # 8-byte Spill
	movq	72(%rax), %rax
	movq	%rax, 216(%rsp)                 # 8-byte Spill
	xorl	%r14d, %r14d
	jmp	.LBB21_3
.LBB21_244:                             # %if.then5.i.i
                                        #   in Loop: Header=BB21_3 Depth=1
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
	.p2align	4, 0x90
.LBB21_2:                               # %_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev.exit
                                        #   in Loop: Header=BB21_3 Depth=1
	movq	736(%rsp), %rdx                 # 8-byte Reload
	addq	$16, %rdx
	movq	40(%rsp), %rax                  # 8-byte Reload
	cmpq	88(%rax), %rdx
	je	.LBB21_245
.LBB21_3:                               # %for.body
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB21_12 Depth 2
                                        #       Child Loop BB21_37 Depth 3
                                        #         Child Loop BB21_63 Depth 4
                                        #         Child Loop BB21_94 Depth 4
                                        #         Child Loop BB21_131 Depth 4
	movq	(%rdx), %rax
	movq	%rax, 48(%rsp)                  # 8-byte Spill
	movq	%rdx, 736(%rsp)                 # 8-byte Spill
	movq	8(%rdx), %rbx
	testq	%rbx, %rbx
	je	.LBB21_7
# %bb.4:                                # %if.then.i.i.i
                                        #   in Loop: Header=BB21_3 Depth=1
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB21_6
# %bb.5:                                # %if.then.i.i.i.i.i
                                        #   in Loop: Header=BB21_3 Depth=1
	lock		addl	$1, 8(%rbx)
	jmp	.LBB21_7
	.p2align	4, 0x90
.LBB21_6:                               # %if.else.i.i.i.i.i
                                        #   in Loop: Header=BB21_3 Depth=1
	addl	$1, 8(%rbx)
.LBB21_7:                               # %_ZNSt10shared_ptrIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEEC2ERKS6_.exit
                                        #   in Loop: Header=BB21_3 Depth=1
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	104(%rax), %rbp
	cmpq	112(%rax), %rbp
	movq	%rbx, 64(%rsp)                  # 8-byte Spill
	jne	.LBB21_12
.LBB21_8:                               # %for.cond.cleanup15
                                        #   in Loop: Header=BB21_3 Depth=1
	testq	%rbx, %rbx
	je	.LBB21_2
# %bb.9:                                # %if.then.i609
                                        #   in Loop: Header=BB21_3 Depth=1
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB21_240
# %bb.10:                               # %if.then.i.i.i610
                                        #   in Loop: Header=BB21_3 Depth=1
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB21_2
	jmp	.LBB21_241
.LBB21_239:                             # %if.then5.i.i.i.i
                                        #   in Loop: Header=BB21_12 Depth=2
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
	.p2align	4, 0x90
.LBB21_11:                              # %_ZN7testing8internal14ParamGeneratorISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEED2Ev.exit
                                        #   in Loop: Header=BB21_12 Depth=2
	movq	208(%rsp), %rbp                 # 8-byte Reload
	addq	$64, %rbp
	movq	40(%rsp), %rax                  # 8-byte Reload
	cmpq	112(%rax), %rbp
	movq	64(%rsp), %rbx                  # 8-byte Reload
	je	.LBB21_8
.LBB21_12:                              # %for.body16
                                        #   Parent Loop BB21_3 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB21_37 Depth 3
                                        #         Child Loop BB21_63 Depth 4
                                        #         Child Loop BB21_94 Depth 4
                                        #         Child Loop BB21_131 Depth 4
.Ltmp56:
	leaq	288(%rsp), %rdi
	callq	*32(%rbp)
.Ltmp57:
# %bb.13:                               # %invoke.cont
                                        #   in Loop: Header=BB21_12 Depth=2
	movq	40(%rbp), %rax
	movq	%rax, 776(%rsp)                 # 8-byte Spill
	movq	48(%rbp), %rax
	movq	%rax, 88(%rsp)                  # 8-byte Spill
	movl	56(%rbp), %eax
	movl	%eax, 36(%rsp)                  # 4-byte Spill
	leaq	192(%rsp), %rax
	movq	%rax, 176(%rsp)
	movq	$0, 184(%rsp)
	movb	$0, 192(%rsp)
	movq	%rbp, 208(%rsp)                 # 8-byte Spill
	movq	8(%rbp), %rbx
	testq	%rbx, %rbx
	je	.LBB21_34
# %bb.14:                               # %if.then
                                        #   in Loop: Header=BB21_12 Depth=2
	leaq	320(%rsp), %rax
	movq	%rax, 304(%rsp)
	movq	208(%rsp), %rcx                 # 8-byte Reload
	movq	(%rcx), %rbp
	movq	%rbx, 128(%rsp)
	cmpq	$16, %rbx
	jb	.LBB21_17
# %bb.15:                               # %if.then4.i.i.i.i.i
                                        #   in Loop: Header=BB21_12 Depth=2
.Ltmp59:
	leaq	304(%rsp), %rdi
	leaq	128(%rsp), %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp60:
# %bb.16:                               # %call5.i.i.i16.i.i.noexc
                                        #   in Loop: Header=BB21_12 Depth=2
	movq	%rax, 304(%rsp)
	movq	128(%rsp), %rcx
	movq	%rcx, 320(%rsp)
.LBB21_17:                              # %if.end6.i.i.i.i.i
                                        #   in Loop: Header=BB21_12 Depth=2
	cmpq	$1, %rbx
	jne	.LBB21_19
# %bb.18:                               # %if.then.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB21_12 Depth=2
	movb	(%rbp), %cl
	movb	%cl, (%rax)
	jmp	.LBB21_20
	.p2align	4, 0x90
.LBB21_19:                              # %if.end.i.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB21_12 Depth=2
	movq	%rax, %rdi
	movq	%rbp, %rsi
	movq	%rbx, %rdx
	callq	memcpy@PLT
.LBB21_20:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
                                        #   in Loop: Header=BB21_12 Depth=2
	leaq	320(%rsp), %rbx
	movq	128(%rsp), %rax
	movq	%rax, 312(%rsp)
	movq	304(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	cmpq	%rax, 312(%rsp)
	je	.LBB21_260
# %bb.21:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
                                        #   in Loop: Header=BB21_12 Depth=2
.Ltmp62:
	movl	$.L.str.7, %esi
	movl	$1, %edx
	leaq	304(%rsp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
.Ltmp63:
# %bb.22:                               # %invoke.cont29
                                        #   in Loop: Header=BB21_12 Depth=2
	movq	304(%rsp), %rdx
	cmpq	%rbx, %rdx
	je	.LBB21_26
# %bb.23:                               # %invoke.cont25.i
                                        #   in Loop: Header=BB21_12 Depth=2
	movq	176(%rsp), %rax
	movq	192(%rsp), %rcx
	movq	%rdx, 176(%rsp)
	movups	312(%rsp), %xmm0
	movups	%xmm0, 184(%rsp)
	leaq	192(%rsp), %rdx
	cmpq	%rdx, %rax
	je	.LBB21_29
# %bb.24:                               # %invoke.cont25.i
                                        #   in Loop: Header=BB21_12 Depth=2
	testq	%rax, %rax
	je	.LBB21_29
# %bb.25:                               # %if.then35.i
                                        #   in Loop: Header=BB21_12 Depth=2
	movq	%rax, 304(%rsp)
	movq	%rcx, 320(%rsp)
	jmp	.LBB21_32
	.p2align	4, 0x90
.LBB21_26:                              # %if.then15.i
                                        #   in Loop: Header=BB21_12 Depth=2
	movq	312(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB21_31
# %bb.27:                               # %if.then17.i
                                        #   in Loop: Header=BB21_12 Depth=2
	movq	176(%rsp), %rdi
	cmpq	$1, %rdx
	jne	.LBB21_30
# %bb.28:                               # %if.then.i.i
                                        #   in Loop: Header=BB21_12 Depth=2
	movb	320(%rsp), %al
	movb	%al, (%rdi)
	jmp	.LBB21_31
.LBB21_29:                              # %if.else36.i
                                        #   in Loop: Header=BB21_12 Depth=2
	movq	%rbx, 304(%rsp)
	movq	%rbx, %rax
	jmp	.LBB21_32
.LBB21_30:                              # %if.end.i.i.i
                                        #   in Loop: Header=BB21_12 Depth=2
	movq	%rbx, %rsi
	callq	memcpy@PLT
.LBB21_31:                              # %if.end22.i
                                        #   in Loop: Header=BB21_12 Depth=2
	movq	312(%rsp), %rax
	movq	%rax, 184(%rsp)
	movq	176(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movq	304(%rsp), %rax
.LBB21_32:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
                                        #   in Loop: Header=BB21_12 Depth=2
	movq	$0, 312(%rsp)
	movb	$0, (%rax)
	movq	304(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB21_34
# %bb.33:                               # %if.then.i.i269
                                        #   in Loop: Header=BB21_12 Depth=2
	callq	_ZdlPv
.LBB21_34:                              # %if.end
                                        #   in Loop: Header=BB21_12 Depth=2
	movq	48(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %rsi
	movq	8(%rax), %rdx
.Ltmp68:
	leaq	176(%rsp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
.Ltmp69:
# %bb.35:                               # %invoke.cont33
                                        #   in Loop: Header=BB21_12 Depth=2
	movl	$0, 136(%rsp)
	movq	$0, 144(%rsp)
	leaq	136(%rsp), %rax
	movq	%rax, 152(%rsp)
	movq	%rax, 160(%rsp)
	movq	$0, 168(%rsp)
	movq	288(%rsp), %rdi
	movq	(%rdi), %rax
.Ltmp71:
	callq	*16(%rax)
	movq	%rax, 24(%rsp)                  # 8-byte Spill
.Ltmp72:
# %bb.36:                               # %for.cond37.preheader
                                        #   in Loop: Header=BB21_12 Depth=2
	xorl	%eax, %eax
	movq	%rax, 240(%rsp)                 # 8-byte Spill
	.p2align	4, 0x90
.LBB21_37:                              # %for.cond37
                                        #   Parent Loop BB21_3 Depth=1
                                        #     Parent Loop BB21_12 Depth=2
                                        # =>    This Loop Header: Depth=3
                                        #         Child Loop BB21_63 Depth 4
                                        #         Child Loop BB21_94 Depth 4
                                        #         Child Loop BB21_131 Depth 4
	movq	288(%rsp), %rdi
	movq	(%rdi), %rax
.Ltmp74:
	callq	*24(%rax)
.Ltmp75:
# %bb.38:                               # %invoke.cont40
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	%rax, %rbx
	movq	24(%rsp), %rdi                  # 8-byte Reload
	cmpq	%rax, %rdi
	je	.LBB21_48
# %bb.39:                               # %lor.rhs.i.i
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	(%rdi), %rax
.Ltmp77:
	movq	%rbx, %rsi
	callq	*48(%rax)
.Ltmp78:
# %bb.40:                               # %call8.i.i.noexc
                                        #   in Loop: Header=BB21_37 Depth=3
	movl	%eax, %ebp
	xorb	$1, %bpl
	testq	%rbx, %rbx
	je	.LBB21_42
.LBB21_41:                              # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEEEclEPSB_.exit.i.i
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*8(%rax)
.LBB21_42:                              # %_ZN7testing8internal13ParamIteratorISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEED2Ev.exit
                                        #   in Loop: Header=BB21_37 Depth=3
	testb	%bpl, %bpl
	je	.LBB21_227
# %bb.43:                               # %for.body45
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp83:
	leaq	56(%rsp), %rdi
	callq	_ZN7testing7MessageC1Ev
.Ltmp84:
# %bb.44:                               # %invoke.cont47
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	24(%rsp), %rdi                  # 8-byte Reload
	movq	(%rdi), %rax
.Ltmp86:
	callq	*40(%rax)
.Ltmp87:
# %bb.45:                               # %invoke.cont50
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	48(%rax), %rcx
	movq	%rcx, 352(%rsp)
	movups	(%rax), %xmm0
	movups	16(%rax), %xmm1
	movups	32(%rax), %xmm2
	movaps	%xmm2, 336(%rsp)
	movaps	%xmm1, 320(%rsp)
	movaps	%xmm0, 304(%rsp)
	movq	56(%rax), %rcx
	movq	%rcx, 360(%rsp)
	movq	64(%rax), %rax
	movq	%rax, 368(%rsp)
	testq	%rax, %rax
	je	.LBB21_50
# %bb.46:                               # %if.then.i.i.i.i.i.i.i311
                                        #   in Loop: Header=BB21_37 Depth=3
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB21_49
# %bb.47:                               # %if.then.i.i.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB21_37 Depth=3
	lock		addl	$1, 8(%rax)
	jmp	.LBB21_50
	.p2align	4, 0x90
.LBB21_48:                              #   in Loop: Header=BB21_37 Depth=3
	xorl	%ebp, %ebp
	testq	%rbx, %rbx
	jne	.LBB21_41
	jmp	.LBB21_42
	.p2align	4, 0x90
.LBB21_49:                              # %if.else.i.i.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB21_37 Depth=3
	addl	$1, 8(%rax)
.LBB21_50:                              # %_ZN7testing13TestParamInfoISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEC2ERKS8_m.exit
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	240(%rsp), %rax                 # 8-byte Reload
	movq	%rax, 376(%rsp)
.Ltmp89:
	leaq	96(%rsp), %rdi
	leaq	304(%rsp), %rsi
	callq	*776(%rsp)                      # 8-byte Folded Reload
.Ltmp90:
# %bb.51:                               # %invoke.cont54
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	368(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB21_59
# %bb.52:                               # %if.then.i.i.i.i618
                                        #   in Loop: Header=BB21_37 Depth=3
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB21_54
# %bb.53:                               # %if.then.i.i.i.i.i.i619
                                        #   in Loop: Header=BB21_37 Depth=3
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB21_55
	jmp	.LBB21_59
	.p2align	4, 0x90
.LBB21_54:                              # %if.else.i.i.i.i.i.i621
                                        #   in Loop: Header=BB21_37 Depth=3
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB21_59
.LBB21_55:                              # %if.then.i.i.i.i.i628
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB21_57
# %bb.56:                               # %if.then.i9.i.i.i.i.i629
                                        #   in Loop: Header=BB21_37 Depth=3
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB21_58
	jmp	.LBB21_59
.LBB21_57:                              # %if.else.i11.i.i.i.i.i631
                                        #   in Loop: Header=BB21_37 Depth=3
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB21_59
.LBB21_58:                              # %if.then5.i.i.i.i.i637
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
	.p2align	4, 0x90
.LBB21_59:                              # %_ZNSt11_Tuple_implILm0EJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev.exit638
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	104(%rsp), %r15
	testq	%r15, %r15
	je	.LBB21_68
# %bb.60:                               # %for.body.preheader.i
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	96(%rsp), %r14
	movb	(%r14), %bl
	movsbl	%bl, %edi
	callq	isalnum
	testl	%eax, %eax
	jne	.LBB21_62
# %bb.61:                               # %for.body.preheader.i
                                        #   in Loop: Header=BB21_37 Depth=3
	movb	$1, %al
	cmpb	$95, %bl
	jne	.LBB21_67
.LBB21_62:                              # %for.cond.i.preheader
                                        #   in Loop: Header=BB21_37 Depth=3
	movl	$1, %ecx
	.p2align	4, 0x90
.LBB21_63:                              # %for.cond.i
                                        #   Parent Loop BB21_3 Depth=1
                                        #     Parent Loop BB21_12 Depth=2
                                        #       Parent Loop BB21_37 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	movq	%rcx, %rbp
	cmpq	%rcx, %r15
	je	.LBB21_66
# %bb.64:                               # %for.body.i
                                        #   in Loop: Header=BB21_63 Depth=4
	movzbl	(%r14,%rbp), %ebx
	movsbl	%bl, %edi
	callq	isalnum
	leaq	1(%rbp), %rcx
	testl	%eax, %eax
	jne	.LBB21_63
# %bb.65:                               # %for.body.i
                                        #   in Loop: Header=BB21_63 Depth=4
	cmpb	$95, %bl
	je	.LBB21_63
.LBB21_66:                              # %cleanup.i.loopexit
                                        #   in Loop: Header=BB21_37 Depth=3
	cmpq	%r15, %rbp
	setb	%al
.LBB21_67:                              # %cleanup.i
                                        #   in Loop: Header=BB21_37 Depth=3
	xorb	$1, %al
	jmp	.LBB21_69
	.p2align	4, 0x90
.LBB21_68:                              #   in Loop: Header=BB21_37 Depth=3
	xorl	%eax, %eax
.LBB21_69:                              # %_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E16IsValidParamNameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp92:
	movzbl	%al, %edi
	callq	_ZN7testing8internal6IsTrueEb
.Ltmp93:
# %bb.70:                               # %invoke.cont60
                                        #   in Loop: Header=BB21_37 Depth=3
	testb	%al, %al
	jne	.LBB21_89
# %bb.71:                               # %if.else
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp94:
	movl	$.L.str.8, %edx
	leaq	304(%rsp), %rdi
	movl	$3, %esi
	movl	$575, %ecx                      # imm = 0x23F
	callq	_ZN7testing8internal8GTestLogC1ENS0_16GTestLogSeverityEPKci
.Ltmp95:
# %bb.72:                               # %invoke.cont65
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp97:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.9, %esi
	movl	$47, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp98:
# %bb.73:                               # %invoke.cont68
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp99:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.10, %esi
	movl	$25, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp100:
# %bb.74:                               # %invoke.cont70
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	96(%rsp), %rsi
	movq	104(%rsp), %rdx
.Ltmp101:
	movl	$_ZSt4cerr, %edi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp102:
# %bb.75:                               # %invoke.cont72
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	%rax, %rbx
.Ltmp103:
	movl	$.L.str.11, %esi
	movl	$17, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp104:
# %bb.76:                               # %invoke.cont74
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	88(%rsp), %rbp                  # 8-byte Reload
	testq	%rbp, %rbp
	je	.LBB21_78
# %bb.77:                               # %if.else.i
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	%rbp, %rdi
	callq	strlen
.Ltmp105:
	movq	%rbx, %rdi
	movq	%rbp, %rsi
	movq	%rax, %rdx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp106:
	jmp	.LBB21_79
.LBB21_78:                              # %if.then.i
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	(%rbx), %rax
	movq	-24(%rax), %rax
	movq	%rbx, %rdi
	addq	%rax, %rdi
	movl	32(%rbx,%rax), %esi
	orl	$1, %esi
.Ltmp107:
	callq	_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate
.Ltmp108:
.LBB21_79:                              # %invoke.cont76
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp109:
	movl	$.L.str.12, %esi
	movl	$6, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp110:
# %bb.80:                               # %invoke.cont78
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp111:
	movq	%rbx, %rdi
	movl	36(%rsp), %esi                  # 4-byte Reload
	callq	_ZNSolsEi
.Ltmp112:
# %bb.81:                               # %invoke.cont80
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	%rax, %rbx
	movq	(%rax), %rax
	movq	-24(%rax), %rax
	movq	240(%rbx,%rax), %rbp
	testq	%rbp, %rbp
	je	.LBB21_256
# %bb.82:                               # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
                                        #   in Loop: Header=BB21_37 Depth=3
	cmpb	$0, 56(%rbp)
	je	.LBB21_84
# %bb.83:                               # %if.then.i4.i.i
                                        #   in Loop: Header=BB21_37 Depth=3
	movb	67(%rbp), %al
	jmp	.LBB21_86
.LBB21_84:                              # %if.end.i.i.i647
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp113:
	movq	%rbp, %rdi
	callq	_ZNKSt5ctypeIcE13_M_widen_initEv
.Ltmp114:
# %bb.85:                               # %.noexc651
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	(%rbp), %rax
.Ltmp115:
	movq	%rbp, %rdi
	movl	$10, %esi
	callq	*48(%rax)
.Ltmp116:
.LBB21_86:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp117:
	movsbl	%al, %esi
	movq	%rbx, %rdi
	callq	_ZNSo3putEc
.Ltmp118:
# %bb.87:                               # %call1.i.noexc653
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp119:
	movq	%rax, %rdi
	callq	_ZNSo5flushEv
.Ltmp120:
# %bb.88:                               # %invoke.cont82
                                        #   in Loop: Header=BB21_37 Depth=3
	leaq	304(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
.LBB21_89:                              # %if.end86
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	144(%rsp), %rbp
	testq	%rbp, %rbp
	je	.LBB21_105
# %bb.90:                               # %while.body.i.i.preheader
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	96(%rsp), %r14
	movq	104(%rsp), %r12
	leaq	136(%rsp), %r15
	jmp	.LBB21_94
	.p2align	4, 0x90
.LBB21_91:                              # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i
                                        #   in Loop: Header=BB21_94 Depth=4
	testl	%eax, %eax
	js	.LBB21_93
.LBB21_92:                              # %if.then.i.i662
                                        #   in Loop: Header=BB21_94 Depth=4
	movq	%rbp, %rax
	addq	$16, %rax
	movq	%rbp, %r15
	movq	(%rax), %rbp
	testq	%rbp, %rbp
	je	.LBB21_98
.LBB21_94:                              # %while.body.i.i
                                        #   Parent Loop BB21_3 Depth=1
                                        #     Parent Loop BB21_12 Depth=2
                                        #       Parent Loop BB21_37 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	movq	40(%rbp), %rdx
	movq	%rdx, %rbx
	subq	%r12, %rbx
	cmovaeq	%r12, %rdx
	testq	%rdx, %rdx
	je	.LBB21_96
# %bb.95:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i
                                        #   in Loop: Header=BB21_94 Depth=4
	movq	32(%rbp), %rdi
	movq	%r14, %rsi
	callq	memcmp
	testl	%eax, %eax
	jne	.LBB21_91
.LBB21_96:                              # %if.then.i.i.i.i.i659
                                        #   in Loop: Header=BB21_94 Depth=4
	cmpq	$2147483647, %rbx               # imm = 0x7FFFFFFF
	jg	.LBB21_92
# %bb.97:                               # %if.else.i.i.i.i.i.i660
                                        #   in Loop: Header=BB21_94 Depth=4
	cmpq	$-2147483648, %rbx              # imm = 0x80000000
	movl	$-2147483648, %eax              # imm = 0x80000000
	cmovlel	%eax, %ebx
	movl	%ebx, %eax
	jmp	.LBB21_91
	.p2align	4, 0x90
.LBB21_93:                              # %if.else.i.i663
                                        #   in Loop: Header=BB21_94 Depth=4
	addq	$24, %rbp
	movq	%rbp, %rax
	movq	(%rax), %rbp
	testq	%rbp, %rbp
	jne	.LBB21_94
.LBB21_98:                              # %_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS5_EPKSt18_Rb_tree_node_baseRKS5_.exit.i
                                        #   in Loop: Header=BB21_37 Depth=3
	leaq	136(%rsp), %rax
	cmpq	%rax, %r15
	je	.LBB21_106
# %bb.99:                               # %lor.lhs.false.i
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	40(%r15), %rdx
	movq	%r12, %rbx
	subq	%rdx, %rbx
	cmovbq	%r12, %rdx
	testq	%rdx, %rdx
	je	.LBB21_102
# %bb.100:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	32(%r15), %rsi
	movq	%r14, %rdi
	callq	memcmp
	testl	%eax, %eax
	je	.LBB21_102
# %bb.101:                              # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i
                                        #   in Loop: Header=BB21_37 Depth=3
	testl	%eax, %eax
	jns	.LBB21_104
	jmp	.LBB21_105
	.p2align	4, 0x90
.LBB21_102:                             # %if.then.i.i.i.i667
                                        #   in Loop: Header=BB21_37 Depth=3
	cmpq	$2147483647, %rbx               # imm = 0x7FFFFFFF
	jg	.LBB21_104
# %bb.103:                              # %if.else.i.i.i.i.i668
                                        #   in Loop: Header=BB21_37 Depth=3
	cmpq	$-2147483648, %rbx              # imm = 0x80000000
	movl	$-2147483648, %eax              # imm = 0x80000000
	cmovlel	%eax, %ebx
	movl	%ebx, %eax
	testl	%eax, %eax
	js	.LBB21_105
.LBB21_104:                             # %cond.false.i
                                        #   in Loop: Header=BB21_37 Depth=3
	leaq	136(%rsp), %rax
	jmp	.LBB21_107
	.p2align	4, 0x90
.LBB21_105:                             #   in Loop: Header=BB21_37 Depth=3
	leaq	136(%rsp), %rax
.LBB21_106:                             #   in Loop: Header=BB21_37 Depth=3
	movq	%rax, %r15
.LBB21_107:                             # %invoke.cont87
                                        #   in Loop: Header=BB21_37 Depth=3
	xorl	%edi, %edi
	cmpq	%rax, %r15
	sete	%dil
.Ltmp125:
	callq	_ZN7testing8internal6IsTrueEb
.Ltmp126:
# %bb.108:                              # %invoke.cont89
                                        #   in Loop: Header=BB21_37 Depth=3
	testb	%al, %al
	jne	.LBB21_127
# %bb.109:                              # %if.else92
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp127:
	movl	$.L.str.8, %edx
	leaq	304(%rsp), %rdi
	movl	$3, %esi
	movl	$580, %ecx                      # imm = 0x244
	callq	_ZN7testing8internal8GTestLogC1ENS0_16GTestLogSeverityEPKci
.Ltmp128:
# %bb.110:                              # %invoke.cont95
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp130:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.13, %esi
	movl	$58, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp131:
# %bb.111:                              # %invoke.cont98
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp132:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.14, %esi
	movl	$35, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp133:
# %bb.112:                              # %invoke.cont100
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	96(%rsp), %rsi
	movq	104(%rsp), %rdx
.Ltmp134:
	movl	$_ZSt4cerr, %edi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp135:
# %bb.113:                              # %invoke.cont102
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	%rax, %rbx
.Ltmp136:
	movl	$.L.str.15, %esi
	movl	$6, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp137:
# %bb.114:                              # %invoke.cont104
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	88(%rsp), %rbp                  # 8-byte Reload
	testq	%rbp, %rbp
	je	.LBB21_116
# %bb.115:                              # %if.else.i371
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	%rbp, %rdi
	callq	strlen
.Ltmp138:
	movq	%rbx, %rdi
	movq	%rbp, %rsi
	movq	%rax, %rdx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp139:
	jmp	.LBB21_117
.LBB21_116:                             # %if.then.i369
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	(%rbx), %rax
	movq	-24(%rax), %rax
	movq	%rbx, %rdi
	addq	%rax, %rdi
	movl	32(%rbx,%rax), %esi
	orl	$1, %esi
.Ltmp140:
	callq	_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate
.Ltmp141:
.LBB21_117:                             # %invoke.cont106
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp142:
	movl	$.L.str.12, %esi
	movl	$6, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp143:
# %bb.118:                              # %invoke.cont108
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp144:
	movq	%rbx, %rdi
	movl	36(%rsp), %esi                  # 4-byte Reload
	callq	_ZNSolsEi
.Ltmp145:
# %bb.119:                              # %invoke.cont110
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	%rax, %rbx
	movq	(%rax), %rax
	movq	-24(%rax), %rax
	movq	240(%rbx,%rax), %rbp
	testq	%rbp, %rbp
	je	.LBB21_258
# %bb.120:                              # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i679
                                        #   in Loop: Header=BB21_37 Depth=3
	cmpb	$0, 56(%rbp)
	je	.LBB21_122
# %bb.121:                              # %if.then.i4.i.i681
                                        #   in Loop: Header=BB21_37 Depth=3
	movb	67(%rbp), %al
	jmp	.LBB21_124
.LBB21_122:                             # %if.end.i.i.i685
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp146:
	movq	%rbp, %rdi
	callq	_ZNKSt5ctypeIcE13_M_widen_initEv
.Ltmp147:
# %bb.123:                              # %.noexc690
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	(%rbp), %rax
.Ltmp148:
	movq	%rbp, %rdi
	movl	$10, %esi
	callq	*48(%rax)
.Ltmp149:
.LBB21_124:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i688
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp150:
	movsbl	%al, %esi
	movq	%rbx, %rdi
	callq	_ZNSo3putEc
.Ltmp151:
# %bb.125:                              # %call1.i.noexc692
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp152:
	movq	%rax, %rdi
	callq	_ZNSo5flushEv
.Ltmp153:
# %bb.126:                              # %invoke.cont112
                                        #   in Loop: Header=BB21_37 Depth=3
	leaq	304(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
.LBB21_127:                             # %if.end116
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	96(%rsp), %r14
	movq	104(%rsp), %r12
	movq	144(%rsp), %rax
	testq	%rax, %rax
	jne	.LBB21_131
# %bb.128:                              #   in Loop: Header=BB21_37 Depth=3
	leaq	136(%rsp), %rbx
	jmp	.LBB21_136
	.p2align	4, 0x90
.LBB21_129:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i811
                                        #   in Loop: Header=BB21_131 Depth=4
	testl	%eax, %eax
	js	.LBB21_135
.LBB21_130:                             # %cond.end.thread.i
                                        #   in Loop: Header=BB21_131 Depth=4
	movq	24(%rbx), %rax
	testq	%rax, %rax
	je	.LBB21_138
.LBB21_131:                             # %while.body.i
                                        #   Parent Loop BB21_3 Depth=1
                                        #     Parent Loop BB21_12 Depth=2
                                        #       Parent Loop BB21_37 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	movq	%rax, %rbx
	movq	40(%rax), %rdx
	movq	%r12, %rbp
	subq	%rdx, %rbp
	cmovbq	%r12, %rdx
	testq	%rdx, %rdx
	je	.LBB21_133
# %bb.132:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i803
                                        #   in Loop: Header=BB21_131 Depth=4
	movq	32(%rbx), %rsi
	movq	%r14, %rdi
	callq	memcmp
	testl	%eax, %eax
	jne	.LBB21_129
.LBB21_133:                             # %if.then.i.i.i.i806
                                        #   in Loop: Header=BB21_131 Depth=4
	cmpq	$2147483647, %rbp               # imm = 0x7FFFFFFF
	jg	.LBB21_130
# %bb.134:                              # %if.else.i.i.i.i.i808
                                        #   in Loop: Header=BB21_131 Depth=4
	cmpq	$-2147483648, %rbp              # imm = 0x80000000
	movl	$-2147483648, %eax              # imm = 0x80000000
	cmovlel	%eax, %ebp
	movl	%ebp, %eax
	jmp	.LBB21_129
	.p2align	4, 0x90
.LBB21_135:                             # %cond.end.i
                                        #   in Loop: Header=BB21_131 Depth=4
	movq	16(%rbx), %rax
	testq	%rax, %rax
	jne	.LBB21_131
.LBB21_136:                             # %if.then.i814
                                        #   in Loop: Header=BB21_37 Depth=3
	cmpq	152(%rsp), %rbx
	je	.LBB21_144
# %bb.137:                              # %if.else.i816
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	%rbx, %rdi
	callq	_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
	jmp	.LBB21_139
	.p2align	4, 0x90
.LBB21_138:                             # %while.end.thread91.i
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	%rbx, %rax
.LBB21_139:                             # %if.end12.i
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	40(%rax), %rdx
	movq	%rdx, %rbp
	subq	%r12, %rbp
	cmovaeq	%r12, %rdx
	testq	%rdx, %rdx
	je	.LBB21_142
# %bb.140:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i39.i
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	32(%rax), %rdi
	movq	%r14, %rsi
	callq	memcmp
	testl	%eax, %eax
	je	.LBB21_142
# %bb.141:                              # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit47.i
                                        #   in Loop: Header=BB21_37 Depth=3
	testl	%eax, %eax
	js	.LBB21_144
	jmp	.LBB21_155
	.p2align	4, 0x90
.LBB21_142:                             # %if.then.i.i.i42.i
                                        #   in Loop: Header=BB21_37 Depth=3
	cmpq	$2147483647, %rbp               # imm = 0x7FFFFFFF
	jg	.LBB21_155
# %bb.143:                              # %if.else.i.i.i.i44.i
                                        #   in Loop: Header=BB21_37 Depth=3
	cmpq	$-2147483648, %rbp              # imm = 0x80000000
	movl	$-2147483648, %eax              # imm = 0x80000000
	cmovlel	%eax, %ebp
	movl	%ebp, %eax
	testl	%eax, %eax
	jns	.LBB21_155
.LBB21_144:                             # %call2.i.noexc.thread864
                                        #   in Loop: Header=BB21_37 Depth=3
	testq	%rbx, %rbx
	je	.LBB21_155
# %bb.145:                              # %lor.lhs.false.i.i
                                        #   in Loop: Header=BB21_37 Depth=3
	leaq	136(%rsp), %rax
	cmpq	%rax, %rbx
	je	.LBB21_151
# %bb.146:                              # %lor.rhs.i.i705
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	40(%rbx), %rdx
	movq	%r12, %r15
	subq	%rdx, %r15
	cmovbq	%r12, %rdx
	testq	%rdx, %rdx
	je	.LBB21_148
# %bb.147:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i711
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	32(%rbx), %rsi
	movq	%r14, %rdi
	callq	memcmp
	movl	%eax, %r14d
	testl	%eax, %eax
	jne	.LBB21_150
.LBB21_148:                             # %if.then.i.i.i.i.i714
                                        #   in Loop: Header=BB21_37 Depth=3
	movl	$2147483647, %r14d              # imm = 0x7FFFFFFF
	cmpq	$2147483647, %r15               # imm = 0x7FFFFFFF
	jg	.LBB21_150
# %bb.149:                              # %if.else.i.i.i.i.i.i716
                                        #   in Loop: Header=BB21_37 Depth=3
	cmpq	$-2147483648, %r15              # imm = 0x80000000
	movl	$-2147483648, %eax              # imm = 0x80000000
	cmovlel	%eax, %r15d
	movl	%r15d, %r14d
.LBB21_150:                             # %_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_.exit.i.i719
                                        #   in Loop: Header=BB21_37 Depth=3
	shrl	$31, %r14d
	jmp	.LBB21_152
.LBB21_151:                             #   in Loop: Header=BB21_37 Depth=3
	movb	$1, %r14b
.LBB21_152:                             # %_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_.exit.i
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp158:
	movl	$64, %edi
	callq	_Znwm
.Ltmp159:
# %bb.153:                              # %call2.i.i.i.i.i.i.i.noexc
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	%rax, %rbp
.Ltmp160:
	leaq	128(%rsp), %rdi
	movq	%rax, %rsi
	leaq	96(%rsp), %rdx
	callq	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeIJRKS5_EEEvPSt13_Rb_tree_nodeIS5_EDpOT_
.Ltmp161:
# %bb.154:                              # %.noexc726
                                        #   in Loop: Header=BB21_37 Depth=3
	movzbl	%r14b, %edi
	movq	%rbp, %rsi
	movq	%rbx, %rdx
	leaq	136(%rsp), %rcx
	callq	_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
	addq	$1, 168(%rsp)
.LBB21_155:                             # %invoke.cont117
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	48(%rsp), %rax                  # 8-byte Reload
	movq	40(%rax), %rdx
	testq	%rdx, %rdx
	je	.LBB21_158
# %bb.156:                              # %if.then121
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	56(%rsp), %rdi
	addq	$16, %rdi
	movq	48(%rsp), %rax                  # 8-byte Reload
	movq	32(%rax), %rsi
.Ltmp162:
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp163:
# %bb.157:                              # %invoke.cont124
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	56(%rsp), %rdi
	addq	$16, %rdi
.Ltmp164:
	movl	$.L.str.7, %esi
	movl	$1, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp165:
.LBB21_158:                             # %if.end128
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	56(%rsp), %rdi
	addq	$16, %rdi
	movq	96(%rsp), %rsi
	movq	104(%rsp), %rdx
.Ltmp166:
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp167:
# %bb.159:                              # %invoke.cont129
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	176(%rsp), %r12
.Ltmp169:
	leaq	816(%rsp), %rdi
	leaq	56(%rsp), %rsi
	callq	_ZNK7testing7Message9GetStringB5cxx11Ev
.Ltmp170:
# %bb.160:                              # %invoke.cont134
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	816(%rsp), %r14
	movq	24(%rsp), %rdi                  # 8-byte Reload
	movq	(%rdi), %rax
.Ltmp172:
	callq	*40(%rax)
.Ltmp173:
# %bb.161:                              # %invoke.cont138
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	%rax, %rbx
	movq	%r13, %rdi
	callq	_ZNSt8ios_baseC2Ev
	movq	$_ZTVSt9basic_iosIcSt11char_traitsIcEE+16, 432(%rsp)
	movq	$0, 648(%rsp)
	movw	$0, 656(%rsp)
	leaq	320(%rsp), %rbp
	xorps	%xmm0, %xmm0
	movups	%xmm0, 360(%rbp)
	movups	%xmm0, 344(%rbp)
	movq	72(%rsp), %rax                  # 8-byte Reload
	movq	%rax, 304(%rsp)
	movq	-24(%rax), %rax
	movq	80(%rsp), %rcx                  # 8-byte Reload
	movq	%rcx, 304(%rsp,%rax)
	movq	$0, 312(%rsp)
	movq	304(%rsp), %rax
	movq	-24(%rax), %rdi
	leaq	304(%rsp), %rax
	addq	%rax, %rdi
.Ltmp175:
	xorl	%esi, %esi
	callq	_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E
.Ltmp176:
# %bb.162:                              # %.noexc.i735
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	768(%rsp), %rax                 # 8-byte Reload
	movq	%rax, 320(%rsp)
	movq	-24(%rax), %rax
	movq	760(%rsp), %rcx                 # 8-byte Reload
	movq	%rcx, 320(%rsp,%rax)
	movq	320(%rsp), %rax
	movq	-24(%rax), %rdi
	addq	%rbp, %rdi
.Ltmp178:
	xorl	%esi, %esi
	callq	_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E
.Ltmp179:
# %bb.163:                              # %invoke.cont4.i
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	752(%rsp), %rax                 # 8-byte Reload
	movq	%rax, 304(%rsp)
	movq	-24(%rax), %rax
	movq	744(%rsp), %rcx                 # 8-byte Reload
	movq	%rcx, 304(%rsp,%rax)
	movq	$_ZTVNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+24, 304(%rsp)
	movq	$_ZTVNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+104, 432(%rsp)
	movq	$_ZTVNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+64, 320(%rsp)
	movq	$_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16, 328(%rsp)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 48(%rbp)
	movups	%xmm0, 32(%rbp)
	movups	%xmm0, 16(%rbp)
	leaq	384(%rsp), %rdi
	callq	_ZNSt6localeC1Ev
	movq	$_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16, 328(%rsp)
	movl	$24, 392(%rsp)
	leaq	416(%rsp), %rax
	movq	%rax, 400(%rsp)
	movq	$0, 408(%rsp)
	movb	$0, 416(%rsp)
	movq	304(%rsp), %rax
	movq	-24(%rax), %rdi
	leaq	304(%rsp), %rax
	addq	%rax, %rdi
.Ltmp181:
	leaq	328(%rsp), %rsi
	callq	_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E
.Ltmp182:
# %bb.164:                              # %.noexc413
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp184:
	movl	$.L.str.17, %esi
	movl	$1, %edx
	movq	%rbp, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp185:
# %bb.165:                              # %call1.i.i.i.i.i.noexc.i
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp186:
	movq	%rbx, %rdi
	leaq	320(%rsp), %rsi
	callq	_ZN7testing8internal12PrintTupleToISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEELm5EEEvRKT_St17integral_constantImXT0_EEPSo
.Ltmp187:
# %bb.166:                              # %.noexc.i411
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp188:
	movl	$.L.str.18, %esi
	movl	$1, %edx
	leaq	320(%rsp), %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp189:
# %bb.167:                              # %invoke.cont.i
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp190:
	leaq	784(%rsp), %rdi
	leaq	328(%rsp), %rsi
	callq	_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv
.Ltmp191:
# %bb.168:                              # %invoke.cont1.i
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	232(%rsp), %rax                 # 8-byte Reload
	movq	%rax, 304(%rsp)
	movq	-24(%rax), %rax
	movq	224(%rsp), %rcx                 # 8-byte Reload
	movq	%rcx, 304(%rsp,%rax)
	movq	216(%rsp), %rax                 # 8-byte Reload
	movq	%rax, 320(%rsp)
	movq	$_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16, 328(%rsp)
	movq	400(%rsp), %rdi
	leaq	416(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB21_170
# %bb.169:                              # %if.then.i.i.i.i.i.i
                                        #   in Loop: Header=BB21_37 Depth=3
	callq	_ZdlPv
.LBB21_170:                             # %invoke.cont140
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	$_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16, 328(%rsp)
	leaq	384(%rsp), %rdi
	callq	_ZNSt6localeD1Ev
	movq	72(%rsp), %rax                  # 8-byte Reload
	movq	%rax, 304(%rsp)
	movq	-24(%rax), %rax
	movq	80(%rsp), %rcx                  # 8-byte Reload
	movq	%rcx, 304(%rsp,%rax)
	movq	$0, 312(%rsp)
	movq	%r13, %rdi
	callq	_ZNSt8ios_baseD2Ev
	movq	784(%rsp), %r15
	leaq	264(%rsp), %rax
	movq	%rax, 248(%rsp)
	movq	48(%rsp), %rcx                  # 8-byte Reload
	movq	72(%rcx), %rbx
	movq	80(%rcx), %rbp
	movq	%rbp, 304(%rsp)
	cmpq	$16, %rbp
	jb	.LBB21_173
# %bb.171:                              # %if.then4.i.i.i.i
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp193:
	leaq	248(%rsp), %rdi
	leaq	304(%rsp), %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp194:
# %bb.172:                              # %call5.i.i.i16.i.noexc
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	%rax, 248(%rsp)
	movq	304(%rsp), %rcx
	movq	%rcx, 264(%rsp)
.LBB21_173:                             # %if.end6.i.i.i.i
                                        #   in Loop: Header=BB21_37 Depth=3
	testq	%rbp, %rbp
	je	.LBB21_177
# %bb.174:                              # %if.end6.i.i.i.i
                                        #   in Loop: Header=BB21_37 Depth=3
	cmpq	$1, %rbp
	jne	.LBB21_176
# %bb.175:                              # %if.then.i.i.i.i.i.i748
                                        #   in Loop: Header=BB21_37 Depth=3
	movb	(%rbx), %cl
	movb	%cl, (%rax)
	jmp	.LBB21_177
	.p2align	4, 0x90
.LBB21_176:                             # %if.end.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	%rax, %rdi
	movq	%rbx, %rsi
	movq	%rbp, %rdx
	callq	memcpy@PLT
.LBB21_177:                             # %invoke.cont144
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	304(%rsp), %rax
	movq	%rax, 256(%rsp)
	movq	248(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movq	48(%rsp), %rax                  # 8-byte Reload
	movl	104(%rax), %eax
	movl	%eax, 280(%rsp)
	movq	40(%rsp), %rdi                  # 8-byte Reload
	movq	(%rdi), %rax
.Ltmp196:
	callq	*24(%rax)
.Ltmp197:
# %bb.178:                              # %invoke.cont146
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	%rax, %rbx
.Ltmp198:
	movl	$1, %edi
	callq	_ZN7testing8internal6IsTrueEb
.Ltmp199:
# %bb.179:                              # %call3.i418.noexc
                                        #   in Loop: Header=BB21_37 Depth=3
	testb	%al, %al
	jne	.LBB21_189
# %bb.180:                              # %if.else.i419
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp200:
	movl	$.L.str.23, %edx
	leaq	304(%rsp), %rdi
	movl	$3, %esi
	movl	$529, %ecx                      # imm = 0x211
	callq	_ZN7testing8internal8GTestLogC1ENS0_16GTestLogSeverityEPKci
.Ltmp201:
# %bb.181:                              # %.noexc426
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp202:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.24, %esi
	movl	$50, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp203:
	movq	88(%rsp), %rbp                  # 8-byte Reload
# %bb.182:                              # %invoke.cont.i420
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp204:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.25, %esi
	movl	$106, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp205:
# %bb.183:                              # %invoke.cont6.i
                                        #   in Loop: Header=BB21_37 Depth=3
	testq	%rbp, %rbp
	je	.LBB21_185
# %bb.184:                              # %if.else.i.i
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	%rbp, %rdi
	callq	strlen
.Ltmp206:
	movl	$_ZSt4cerr, %edi
	movq	%rbp, %rsi
	movq	%rax, %rdx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp207:
	jmp	.LBB21_186
.LBB21_185:                             # %if.then.i.i423
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	_ZSt4cerr(%rip), %rax
	movq	-24(%rax), %rax
	leaq	_ZSt4cerr(%rax), %rdi
	movl	_ZSt4cerr+32(%rax), %esi
	orl	$1, %esi
.Ltmp208:
	callq	_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate
.Ltmp209:
.LBB21_186:                             # %invoke.cont8.i
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp210:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.26, %esi
	movl	$1, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp211:
# %bb.187:                              # %invoke.cont10.i
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp212:
	movl	$_ZSt4cerr, %edi
	movl	36(%rsp), %esi                  # 4-byte Reload
	callq	_ZNSolsEi
.Ltmp213:
# %bb.188:                              # %invoke.cont12.i
                                        #   in Loop: Header=BB21_37 Depth=3
	leaq	304(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
.LBB21_189:                             # %invoke.cont148
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp215:
	movl	$1, %edi
	callq	_ZN7testing8internal6IsTrueEb
.Ltmp216:
# %bb.190:                              # %call3.i429.noexc
                                        #   in Loop: Header=BB21_37 Depth=3
	testb	%al, %al
	jne	.LBB21_200
# %bb.191:                              # %if.else.i431
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp217:
	movl	$.L.str.23, %edx
	leaq	304(%rsp), %rdi
	movl	$3, %esi
	movl	$550, %ecx                      # imm = 0x226
	callq	_ZN7testing8internal8GTestLogC1ENS0_16GTestLogSeverityEPKci
.Ltmp218:
# %bb.192:                              # %.noexc453
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp219:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.24, %esi
	movl	$50, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp220:
	movq	88(%rsp), %rbp                  # 8-byte Reload
# %bb.193:                              # %invoke.cont.i433
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp221:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.27, %esi
	movl	$111, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp222:
# %bb.194:                              # %invoke.cont6.i435
                                        #   in Loop: Header=BB21_37 Depth=3
	testq	%rbp, %rbp
	je	.LBB21_196
# %bb.195:                              # %if.else.i.i445
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	%rbp, %rdi
	callq	strlen
.Ltmp223:
	movl	$_ZSt4cerr, %edi
	movq	%rbp, %rsi
	movq	%rax, %rdx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp224:
	jmp	.LBB21_197
.LBB21_196:                             # %if.then.i.i442
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	_ZSt4cerr(%rip), %rax
	movq	-24(%rax), %rax
	leaq	_ZSt4cerr(%rax), %rdi
	movl	_ZSt4cerr+32(%rax), %esi
	orl	$1, %esi
.Ltmp225:
	callq	_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate
.Ltmp226:
.LBB21_197:                             # %invoke.cont8.i447
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp227:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.26, %esi
	movl	$1, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp228:
# %bb.198:                              # %invoke.cont10.i449
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp229:
	movl	$_ZSt4cerr, %edi
	movl	36(%rsp), %esi                  # 4-byte Reload
	callq	_ZNSolsEi
.Ltmp230:
# %bb.199:                              # %invoke.cont12.i450
                                        #   in Loop: Header=BB21_37 Depth=3
	leaq	304(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
.LBB21_200:                             # %invoke.cont150
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	48(%rsp), %rax                  # 8-byte Reload
	movq	64(%rax), %r13
	movq	24(%rsp), %rdi                  # 8-byte Reload
	movq	(%rdi), %rax
.Ltmp232:
	callq	*40(%rax)
.Ltmp233:
# %bb.201:                              # %invoke.cont155
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	48(%rax), %rcx
	movq	%rcx, 896(%rsp)
	movups	(%rax), %xmm0
	movups	16(%rax), %xmm1
	movups	32(%rax), %xmm2
	movaps	%xmm2, 880(%rsp)
	movaps	%xmm1, 864(%rsp)
	movaps	%xmm0, 848(%rsp)
	movq	56(%rax), %rcx
	movq	%rcx, 904(%rsp)
	movq	64(%rax), %rax
	movq	%rax, 912(%rsp)
	testq	%rax, %rax
	je	.LBB21_205
# %bb.202:                              # %if.then.i.i.i.i.i.i463
                                        #   in Loop: Header=BB21_37 Depth=3
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB21_204
# %bb.203:                              # %if.then.i.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB21_37 Depth=3
	lock		addl	$1, 8(%rax)
	jmp	.LBB21_205
	.p2align	4, 0x90
.LBB21_204:                             # %if.else.i.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB21_37 Depth=3
	addl	$1, 8(%rax)
.LBB21_205:                             # %_ZNSt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES_IJlllEEddEEC2ERKS6_.exit
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	(%r13), %rax
.Ltmp235:
	movq	%r13, %rdi
	leaq	848(%rsp), %rsi
	callq	*16(%rax)
.Ltmp236:
# %bb.206:                              # %invoke.cont160
                                        #   in Loop: Header=BB21_37 Depth=3
.Ltmp237:
	movq	%rax, 16(%rsp)
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rsp)
	movq	%r12, %rdi
	movq	%r14, %rsi
	xorl	%edx, %edx
	movq	%r15, %rcx
	leaq	248(%rsp), %r8
	movq	%rbx, %r9
	callq	_ZN7testing8internal23MakeAndRegisterTestInfoEPKcS2_S2_S2_NS0_12CodeLocationEPKvPFvvES7_PNS0_15TestFactoryBaseE
.Ltmp238:
# %bb.207:                              # %invoke.cont162
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	912(%rsp), %rbx
	testq	%rbx, %rbx
	leaq	432(%rsp), %r13
	je	.LBB21_215
# %bb.208:                              # %if.then.i.i.i.i464
                                        #   in Loop: Header=BB21_37 Depth=3
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB21_210
# %bb.209:                              # %if.then.i.i.i.i.i.i465
                                        #   in Loop: Header=BB21_37 Depth=3
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB21_211
	jmp	.LBB21_215
	.p2align	4, 0x90
.LBB21_210:                             # %if.else.i.i.i.i.i.i
                                        #   in Loop: Header=BB21_37 Depth=3
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB21_215
.LBB21_211:                             # %if.then.i.i.i.i.i466
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB21_213
# %bb.212:                              # %if.then.i9.i.i.i.i.i
                                        #   in Loop: Header=BB21_37 Depth=3
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB21_214
	jmp	.LBB21_215
.LBB21_213:                             # %if.else.i11.i.i.i.i.i
                                        #   in Loop: Header=BB21_37 Depth=3
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB21_215
.LBB21_214:                             # %if.then5.i.i.i.i.i
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
	.p2align	4, 0x90
.LBB21_215:                             # %_ZNSt11_Tuple_implILm0EJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev.exit
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	248(%rsp), %rdi
	leaq	264(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB21_217
# %bb.216:                              # %if.then.i.i.i469
                                        #   in Loop: Header=BB21_37 Depth=3
	callq	_ZdlPv
.LBB21_217:                             # %_ZN7testing8internal12CodeLocationD2Ev.exit
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	784(%rsp), %rdi
	leaq	800(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB21_219
# %bb.218:                              # %if.then.i.i474
                                        #   in Loop: Header=BB21_37 Depth=3
	callq	_ZdlPv
.LBB21_219:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit476
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	816(%rsp), %rdi
	leaq	832(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB21_221
# %bb.220:                              # %if.then.i.i480
                                        #   in Loop: Header=BB21_37 Depth=3
	callq	_ZdlPv
.LBB21_221:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit482
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	96(%rsp), %rdi
	leaq	112(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB21_223
# %bb.222:                              # %if.then.i.i486
                                        #   in Loop: Header=BB21_37 Depth=3
	callq	_ZdlPv
.LBB21_223:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit488
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	56(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB21_225
# %bb.224:                              # %_ZNKSt14default_deleteINSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEEclEPS5_.exit.i.i
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB21_225:                             # %_ZN7testing7MessageD2Ev.exit
                                        #   in Loop: Header=BB21_37 Depth=3
	movq	24(%rsp), %rdi                  # 8-byte Reload
	movq	(%rdi), %rax
.Ltmp240:
	callq	*24(%rax)
.Ltmp241:
# %bb.226:                              # %invoke.cont175
                                        #   in Loop: Header=BB21_37 Depth=3
	addq	$1, 240(%rsp)                   # 8-byte Folded Spill
	movb	$1, %r14b
	jmp	.LBB21_37
	.p2align	4, 0x90
.LBB21_227:                             # %for.cond.cleanup44
                                        #   in Loop: Header=BB21_12 Depth=2
	movq	24(%rsp), %rdi                  # 8-byte Reload
	testq	%rdi, %rdi
	je	.LBB21_229
# %bb.228:                              # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEEEclEPSB_.exit.i.i284
                                        #   in Loop: Header=BB21_12 Depth=2
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB21_229:                             # %_ZN7testing8internal13ParamIteratorISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEED2Ev.exit285
                                        #   in Loop: Header=BB21_12 Depth=2
	movq	144(%rsp), %rsi
.Ltmp80:
	leaq	128(%rsp), %rdi
	callq	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E
.Ltmp81:
# %bb.230:                              # %_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EED2Ev.exit
                                        #   in Loop: Header=BB21_12 Depth=2
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB21_232
# %bb.231:                              # %if.then.i.i289
                                        #   in Loop: Header=BB21_12 Depth=2
	callq	_ZdlPv
.LBB21_232:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit290
                                        #   in Loop: Header=BB21_12 Depth=2
	movq	296(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB21_11
# %bb.233:                              # %if.then.i.i.i294
                                        #   in Loop: Header=BB21_12 Depth=2
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB21_235
# %bb.234:                              # %if.then.i.i.i.i.i295
                                        #   in Loop: Header=BB21_12 Depth=2
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB21_11
	jmp	.LBB21_236
	.p2align	4, 0x90
.LBB21_235:                             # %if.else.i.i.i.i.i297
                                        #   in Loop: Header=BB21_12 Depth=2
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB21_11
.LBB21_236:                             # %if.then.i.i.i.i
                                        #   in Loop: Header=BB21_12 Depth=2
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB21_238
# %bb.237:                              # %if.then.i9.i.i.i.i
                                        #   in Loop: Header=BB21_12 Depth=2
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB21_11
	jmp	.LBB21_239
.LBB21_238:                             # %if.else.i11.i.i.i.i
                                        #   in Loop: Header=BB21_12 Depth=2
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB21_11
	jmp	.LBB21_239
	.p2align	4, 0x90
.LBB21_240:                             # %if.else.i.i.i
                                        #   in Loop: Header=BB21_3 Depth=1
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB21_2
.LBB21_241:                             # %if.then.i.i614
                                        #   in Loop: Header=BB21_3 Depth=1
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB21_243
# %bb.242:                              # %if.then.i9.i.i
                                        #   in Loop: Header=BB21_3 Depth=1
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB21_2
	jmp	.LBB21_244
.LBB21_243:                             # %if.else.i11.i.i
                                        #   in Loop: Header=BB21_3 Depth=1
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB21_2
	jmp	.LBB21_244
.LBB21_245:                             # %for.cond.cleanup
	testb	$1, %r14b
	jne	.LBB21_255
.LBB21_246:                             # %if.then200
	movq	40(%rsp), %rbx                  # 8-byte Reload
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movq	%rax, %r14
	leaq	712(%rsp), %r15
	movq	%r15, 696(%rsp)
	movq	40(%rbx), %rbp
	movq	48(%rbx), %rbx
	movq	%rbx, 304(%rsp)
	cmpq	$15, %rbx
	jbe	.LBB21_248
# %bb.247:                              # %if.then4.i.i.i.i782
	leaq	696(%rsp), %rdi
	leaq	304(%rsp), %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
	movq	%rax, 696(%rsp)
	movq	304(%rsp), %rcx
	movq	%rcx, 712(%rsp)
	testq	%rbx, %rbx
	jne	.LBB21_249
	jmp	.LBB21_252
.LBB21_248:                             # %if.end.if.end6_crit_edge.i.i.i.i779
	movq	%r15, %rax
	testq	%rbx, %rbx
	je	.LBB21_252
.LBB21_249:                             # %if.end6.i.i.i.i783
	cmpq	$1, %rbx
	jne	.LBB21_251
# %bb.250:                              # %if.then.i.i.i.i.i.i784
	movb	(%rbp), %cl
	movb	%cl, (%rax)
	jmp	.LBB21_252
.LBB21_251:                             # %if.end.i.i.i.i.i.i.i785
	movq	%rax, %rdi
	movq	%rbp, %rsi
	movq	%rbx, %rdx
	callq	memcpy@PLT
.LBB21_252:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit789
	movq	304(%rsp), %rax
	movq	%rax, 704(%rsp)
	movq	696(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movl	72(%rcx), %eax
	movl	%eax, 728(%rsp)
	movq	80(%rcx), %rax
	xorl	%edx, %edx
	cmpq	88(%rcx), %rax
	setne	%dl
.Ltmp246:
	leaq	696(%rsp), %rsi
	movq	%r14, %rdi
	callq	_ZN7testing8internal23InsertSyntheticTestCaseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12CodeLocationEb
.Ltmp247:
# %bb.253:                              # %invoke.cont208
	movq	696(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB21_255
# %bb.254:                              # %if.then.i.i.i600
	callq	_ZdlPv
.LBB21_255:                             # %if.end210
	addq	$920, %rsp                      # imm = 0x398
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB21_256:                             # %if.then.i.i.i643
	.cfi_def_cfa_offset 976
.Ltmp122:
	callq	_ZSt16__throw_bad_castv
.Ltmp123:
# %bb.257:                              # %.noexc650
.LBB21_258:                             # %if.then.i.i.i676
.Ltmp155:
	callq	_ZSt16__throw_bad_castv
.Ltmp156:
# %bb.259:                              # %.noexc689
.LBB21_260:                             # %if.then.i.i.i265
.Ltmp65:
	movl	$.L.str.16, %edi
	callq	_ZSt20__throw_length_errorPKc
.Ltmp66:
# %bb.261:                              # %.noexc.i
.LBB21_262:                             # %lpad207
.Ltmp248:
	movq	%rax, %rbp
	movq	696(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB21_347
# %bb.263:                              # %if.then.i.i.i606
	callq	_ZdlPv
	movq	%rbp, %rdi
	callq	_Unwind_Resume@PLT
.LBB21_264:                             # %lpad28
.Ltmp61:
	movq	%rax, %rbp
	jmp	.LBB21_322
.LBB21_265:                             # %lpad.i.loopexit
.Ltmp64:
	jmp	.LBB21_267
.LBB21_266:                             # %lpad.i.loopexit.split-lp
.Ltmp67:
.LBB21_267:                             # %lpad.i
	movq	%rax, %rbp
	movq	304(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB21_322
# %bb.268:                              # %if.then.i.i3.i
	callq	_ZdlPv
	jmp	.LBB21_322
.LBB21_269:                             # %lpad.i.i
.Ltmp82:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB21_270:                             # %lpad35
.Ltmp73:
	movq	%rax, %rbp
	jmp	.LBB21_321
.LBB21_271:                             # %lpad
.Ltmp58:
	movq	%rax, %rbp
	jmp	.LBB21_338
.LBB21_272:                             # %lpad32
.Ltmp70:
	movq	%rax, %rbp
	jmp	.LBB21_322
.LBB21_273:                             # %lpad97.loopexit.split-lp
.Ltmp157:
	jmp	.LBB21_312
.LBB21_274:                             # %lpad64
.Ltmp96:
	jmp	.LBB21_349
.LBB21_275:                             # %lpad143
.Ltmp195:
	movq	%rax, %rbp
	movq	784(%rsp), %rdi
	leaq	800(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB21_316
	jmp	.LBB21_328
.LBB21_276:                             # %lpad94
.Ltmp129:
	jmp	.LBB21_349
.LBB21_277:                             # %lpad67.loopexit.split-lp
.Ltmp124:
	jmp	.LBB21_312
.LBB21_278:                             # %lpad41
.Ltmp79:
	movq	%rax, %rbp
	testq	%rbx, %rbx
	jne	.LBB21_280
# %bb.279:
	movq	24(%rsp), %rdi                  # 8-byte Reload
	jmp	.LBB21_320
.LBB21_280:                             # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEEEclEPSB_.exit.i.i305
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*8(%rax)
	movq	24(%rsp), %rdi                  # 8-byte Reload
	jmp	.LBB21_320
.LBB21_281:                             # %lpad.i.i736
.Ltmp180:
	movq	%rax, %rbp
	jmp	.LBB21_308
.LBB21_282:                             # %lpad137
.Ltmp174:
	movq	%rax, %rbp
	movq	816(%rsp), %rdi
	leaq	832(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB21_317
	jmp	.LBB21_329
.LBB21_283:                             # %lpad174
.Ltmp242:
	movq	%rax, %rbp
	movq	24(%rsp), %rdi                  # 8-byte Reload
	jmp	.LBB21_320
.LBB21_284:                             # %lpad.i743
.Ltmp177:
	movq	%rax, %rbp
	jmp	.LBB21_309
.LBB21_285:                             # %lpad133
.Ltmp171:
	jmp	.LBB21_349
.LBB21_286:                             # %lpad7.i
.Ltmp183:
	movq	%rax, %rbp
	leaq	328(%rsp), %rdi
	callq	_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev
	jmp	.LBB21_308
.LBB21_287:                             # %lpad46
.Ltmp85:
	jmp	.LBB21_291
.LBB21_288:                             # %lpad49
.Ltmp88:
	movq	%rax, %rbp
	movq	56(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB21_319
	jmp	.LBB21_351
.LBB21_289:                             # %lpad53
.Ltmp91:
	movq	%rax, %rbp
	leaq	304(%rsp), %rdi
	callq	_ZNSt11_Tuple_implILm0EJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev
	movq	56(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB21_319
	jmp	.LBB21_351
.LBB21_290:                             # %lpad39
.Ltmp76:
.LBB21_291:                             # %ehcleanup177
	movq	%rax, %rbp
	movq	24(%rsp), %rdi                  # 8-byte Reload
	testq	%rdi, %rdi
	jne	.LBB21_320
	jmp	.LBB21_321
.LBB21_292:                             # %lpad159
.Ltmp239:
	movq	%rax, %rbp
	movq	912(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB21_314
# %bb.293:                              # %if.then.i.i.i.i500
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB21_295
# %bb.294:                              # %if.then.i.i.i.i.i.i501
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	jmp	.LBB21_296
.LBB21_295:                             # %if.else.i.i.i.i.i.i503
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
.LBB21_296:                             # %invoke.cont.i.i.i.i.i506
	cmpl	$1, %eax
	jne	.LBB21_314
# %bb.297:                              # %if.then.i.i.i.i.i510
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB21_299
# %bb.298:                              # %if.then.i9.i.i.i.i.i511
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	jmp	.LBB21_300
.LBB21_299:                             # %if.else.i11.i.i.i.i.i513
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
.LBB21_300:                             # %invoke.cont2.i.i.i.i.i516
	cmpl	$1, %eax
	jne	.LBB21_314
# %bb.301:                              # %if.then5.i.i.i.i.i519
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
	movq	248(%rsp), %rdi
	leaq	264(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB21_327
	jmp	.LBB21_315
.LBB21_302:                             # %lpad.i424
.Ltmp214:
	jmp	.LBB21_304
.LBB21_303:                             # %lpad.i451
.Ltmp231:
.LBB21_304:                             # %ehcleanup165
	movq	%rax, %rbp
	leaq	304(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
.LBB21_314:                             # %ehcleanup165
	movq	248(%rsp), %rdi
	leaq	264(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB21_327
.LBB21_315:                             # %ehcleanup166
	movq	784(%rsp), %rdi
	leaq	800(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB21_328
.LBB21_316:                             # %ehcleanup167
	movq	816(%rsp), %rdi
	leaq	832(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB21_329
.LBB21_317:                             # %ehcleanup170
	movq	96(%rsp), %rdi
	leaq	112(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB21_350
.LBB21_318:                             # %ehcleanup171
	movq	56(%rsp), %rdi
	testq	%rdi, %rdi
	jne	.LBB21_351
.LBB21_319:                             # %ehcleanup177
	movq	24(%rsp), %rdi                  # 8-byte Reload
	testq	%rdi, %rdi
	je	.LBB21_321
.LBB21_320:                             # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEEEclEPSB_.exit.i.i555
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB21_321:                             # %ehcleanup178
	movq	144(%rsp), %rsi
.Ltmp243:
	leaq	128(%rsp), %rdi
	callq	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E
.Ltmp244:
.LBB21_322:                             # %ehcleanup182
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB21_324
# %bb.323:                              # %if.then.i.i564
	callq	_ZdlPv
.LBB21_324:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit566
	movq	296(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB21_337
# %bb.325:                              # %if.then.i.i.i570
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB21_330
# %bb.326:                              # %if.then.i.i.i.i.i571
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	jmp	.LBB21_331
.LBB21_330:                             # %if.else.i.i.i.i.i573
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
.LBB21_331:                             # %invoke.cont.i.i.i.i576
	cmpl	$1, %eax
	jne	.LBB21_337
# %bb.332:                              # %if.then.i.i.i.i580
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB21_334
# %bb.333:                              # %if.then.i9.i.i.i.i581
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	jmp	.LBB21_335
.LBB21_334:                             # %if.else.i11.i.i.i.i583
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
.LBB21_335:                             # %invoke.cont2.i.i.i.i586
	cmpl	$1, %eax
	jne	.LBB21_337
# %bb.336:                              # %if.then5.i.i.i.i589
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
.LBB21_337:                             # %ehcleanup188
	movq	64(%rsp), %rbx                  # 8-byte Reload
.LBB21_338:                             # %ehcleanup188
	testq	%rbx, %rbx
	jne	.LBB21_339
.LBB21_347:                             # %ehcleanup211
	movq	%rbp, %rdi
	callq	_Unwind_Resume@PLT
.LBB21_339:                             # %if.then.i754
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB21_341
# %bb.340:                              # %if.then.i.i.i755
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB21_342
	jmp	.LBB21_347
.LBB21_341:                             # %if.else.i.i.i757
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB21_347
.LBB21_342:                             # %if.then.i.i764
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB21_344
# %bb.343:                              # %if.then.i9.i.i765
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	jmp	.LBB21_345
.LBB21_344:                             # %if.else.i11.i.i767
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
.LBB21_345:                             # %invoke.cont2.i.i770
	cmpl	$1, %eax
	jne	.LBB21_347
# %bb.346:                              # %if.then5.i.i773
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
	movq	%rbp, %rdi
	callq	_Unwind_Resume@PLT
.LBB21_305:                             # %lpad.i412
.Ltmp192:
	movq	%rax, %rbp
	movq	232(%rsp), %rax                 # 8-byte Reload
	movq	%rax, 304(%rsp)
	movq	-24(%rax), %rax
	movq	224(%rsp), %rcx                 # 8-byte Reload
	movq	%rcx, 304(%rsp,%rax)
	movq	216(%rsp), %rax                 # 8-byte Reload
	movq	%rax, 320(%rsp)
	movq	$_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16, 328(%rsp)
	movq	400(%rsp), %rdi
	leaq	416(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB21_307
# %bb.306:                              # %if.then.i.i.i.i.i731
	callq	_ZdlPv
.LBB21_307:                             # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	movq	$_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16, 328(%rsp)
	leaq	384(%rsp), %rdi
	callq	_ZNSt6localeD1Ev
.LBB21_308:                             # %ehcleanup9.i
	movq	72(%rsp), %rax                  # 8-byte Reload
	movq	%rax, 304(%rsp)
	movq	-24(%rax), %rax
	movq	80(%rsp), %rcx                  # 8-byte Reload
	movq	%rcx, 304(%rsp,%rax)
	movq	$0, 312(%rsp)
.LBB21_309:                             # %ehcleanup9.i
	movq	%r13, %rdi
	callq	_ZNSt8ios_baseD2Ev
	movq	816(%rsp), %rdi
	leaq	832(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB21_317
.LBB21_329:                             # %if.then.i.i536
	callq	_ZdlPv
	movq	96(%rsp), %rdi
	leaq	112(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB21_318
	jmp	.LBB21_350
.LBB21_310:                             # %lpad97.loopexit
.Ltmp154:
	jmp	.LBB21_312
.LBB21_311:                             # %lpad67.loopexit
.Ltmp121:
.LBB21_312:                             # %lpad67
	movq	%rax, %rbp
	leaq	304(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
	movq	96(%rsp), %rdi
	leaq	112(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB21_318
.LBB21_350:                             # %if.then.i.i542
	callq	_ZdlPv
	movq	56(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB21_319
.LBB21_351:                             # %_ZNKSt14default_deleteINSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEEclEPS5_.exit.i.i549
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	24(%rsp), %rdi                  # 8-byte Reload
	testq	%rdi, %rdi
	jne	.LBB21_320
	jmp	.LBB21_321
.LBB21_313:                             # %lpad145
.Ltmp234:
	movq	%rax, %rbp
	movq	248(%rsp), %rdi
	leaq	264(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB21_315
.LBB21_327:                             # %if.then.i.i.i524
	callq	_ZdlPv
	movq	784(%rsp), %rdi
	leaq	800(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB21_316
.LBB21_328:                             # %if.then.i.i530
	callq	_ZdlPv
	movq	816(%rsp), %rdi
	leaq	832(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB21_317
	jmp	.LBB21_329
.LBB21_348:                             # %lpad57
.Ltmp168:
.LBB21_349:                             # %lpad57
	movq	%rax, %rbp
	movq	96(%rsp), %rdi
	leaq	112(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB21_318
	jmp	.LBB21_350
.LBB21_352:                             # %lpad.i.i559
.Ltmp245:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end21:
	.size	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E13RegisterTestsEv, .Lfunc_end21-_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E13RegisterTestsEv
	.cfi_endproc
	.section	.gcc_except_table._ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E13RegisterTestsEv,"aG",@progbits,_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E13RegisterTestsEv,comdat
	.p2align	2
GCC_except_table21:
.Lexception8:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase0-.Lttbaseref0
.Lttbaseref0:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end8-.Lcst_begin8
.Lcst_begin8:
	.uleb128 .Lfunc_begin8-.Lfunc_begin8    # >> Call Site 1 <<
	.uleb128 .Ltmp56-.Lfunc_begin8          #   Call between .Lfunc_begin8 and .Ltmp56
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp56-.Lfunc_begin8          # >> Call Site 2 <<
	.uleb128 .Ltmp57-.Ltmp56                #   Call between .Ltmp56 and .Ltmp57
	.uleb128 .Ltmp58-.Lfunc_begin8          #     jumps to .Ltmp58
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp59-.Lfunc_begin8          # >> Call Site 3 <<
	.uleb128 .Ltmp60-.Ltmp59                #   Call between .Ltmp59 and .Ltmp60
	.uleb128 .Ltmp61-.Lfunc_begin8          #     jumps to .Ltmp61
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp60-.Lfunc_begin8          # >> Call Site 4 <<
	.uleb128 .Ltmp62-.Ltmp60                #   Call between .Ltmp60 and .Ltmp62
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp62-.Lfunc_begin8          # >> Call Site 5 <<
	.uleb128 .Ltmp63-.Ltmp62                #   Call between .Ltmp62 and .Ltmp63
	.uleb128 .Ltmp64-.Lfunc_begin8          #     jumps to .Ltmp64
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp63-.Lfunc_begin8          # >> Call Site 6 <<
	.uleb128 .Ltmp68-.Ltmp63                #   Call between .Ltmp63 and .Ltmp68
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp68-.Lfunc_begin8          # >> Call Site 7 <<
	.uleb128 .Ltmp69-.Ltmp68                #   Call between .Ltmp68 and .Ltmp69
	.uleb128 .Ltmp70-.Lfunc_begin8          #     jumps to .Ltmp70
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp71-.Lfunc_begin8          # >> Call Site 8 <<
	.uleb128 .Ltmp72-.Ltmp71                #   Call between .Ltmp71 and .Ltmp72
	.uleb128 .Ltmp73-.Lfunc_begin8          #     jumps to .Ltmp73
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp74-.Lfunc_begin8          # >> Call Site 9 <<
	.uleb128 .Ltmp75-.Ltmp74                #   Call between .Ltmp74 and .Ltmp75
	.uleb128 .Ltmp76-.Lfunc_begin8          #     jumps to .Ltmp76
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp77-.Lfunc_begin8          # >> Call Site 10 <<
	.uleb128 .Ltmp78-.Ltmp77                #   Call between .Ltmp77 and .Ltmp78
	.uleb128 .Ltmp79-.Lfunc_begin8          #     jumps to .Ltmp79
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp78-.Lfunc_begin8          # >> Call Site 11 <<
	.uleb128 .Ltmp83-.Ltmp78                #   Call between .Ltmp78 and .Ltmp83
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp83-.Lfunc_begin8          # >> Call Site 12 <<
	.uleb128 .Ltmp84-.Ltmp83                #   Call between .Ltmp83 and .Ltmp84
	.uleb128 .Ltmp85-.Lfunc_begin8          #     jumps to .Ltmp85
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp86-.Lfunc_begin8          # >> Call Site 13 <<
	.uleb128 .Ltmp87-.Ltmp86                #   Call between .Ltmp86 and .Ltmp87
	.uleb128 .Ltmp88-.Lfunc_begin8          #     jumps to .Ltmp88
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp89-.Lfunc_begin8          # >> Call Site 14 <<
	.uleb128 .Ltmp90-.Ltmp89                #   Call between .Ltmp89 and .Ltmp90
	.uleb128 .Ltmp91-.Lfunc_begin8          #     jumps to .Ltmp91
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp90-.Lfunc_begin8          # >> Call Site 15 <<
	.uleb128 .Ltmp92-.Ltmp90                #   Call between .Ltmp90 and .Ltmp92
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp92-.Lfunc_begin8          # >> Call Site 16 <<
	.uleb128 .Ltmp93-.Ltmp92                #   Call between .Ltmp92 and .Ltmp93
	.uleb128 .Ltmp168-.Lfunc_begin8         #     jumps to .Ltmp168
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp94-.Lfunc_begin8          # >> Call Site 17 <<
	.uleb128 .Ltmp95-.Ltmp94                #   Call between .Ltmp94 and .Ltmp95
	.uleb128 .Ltmp96-.Lfunc_begin8          #     jumps to .Ltmp96
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp97-.Lfunc_begin8          # >> Call Site 18 <<
	.uleb128 .Ltmp120-.Ltmp97               #   Call between .Ltmp97 and .Ltmp120
	.uleb128 .Ltmp121-.Lfunc_begin8         #     jumps to .Ltmp121
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp125-.Lfunc_begin8         # >> Call Site 19 <<
	.uleb128 .Ltmp126-.Ltmp125              #   Call between .Ltmp125 and .Ltmp126
	.uleb128 .Ltmp168-.Lfunc_begin8         #     jumps to .Ltmp168
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp127-.Lfunc_begin8         # >> Call Site 20 <<
	.uleb128 .Ltmp128-.Ltmp127              #   Call between .Ltmp127 and .Ltmp128
	.uleb128 .Ltmp129-.Lfunc_begin8         #     jumps to .Ltmp129
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp130-.Lfunc_begin8         # >> Call Site 21 <<
	.uleb128 .Ltmp153-.Ltmp130              #   Call between .Ltmp130 and .Ltmp153
	.uleb128 .Ltmp154-.Lfunc_begin8         #     jumps to .Ltmp154
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp158-.Lfunc_begin8         # >> Call Site 22 <<
	.uleb128 .Ltmp167-.Ltmp158              #   Call between .Ltmp158 and .Ltmp167
	.uleb128 .Ltmp168-.Lfunc_begin8         #     jumps to .Ltmp168
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp169-.Lfunc_begin8         # >> Call Site 23 <<
	.uleb128 .Ltmp170-.Ltmp169              #   Call between .Ltmp169 and .Ltmp170
	.uleb128 .Ltmp171-.Lfunc_begin8         #     jumps to .Ltmp171
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp172-.Lfunc_begin8         # >> Call Site 24 <<
	.uleb128 .Ltmp173-.Ltmp172              #   Call between .Ltmp172 and .Ltmp173
	.uleb128 .Ltmp174-.Lfunc_begin8         #     jumps to .Ltmp174
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp175-.Lfunc_begin8         # >> Call Site 25 <<
	.uleb128 .Ltmp176-.Ltmp175              #   Call between .Ltmp175 and .Ltmp176
	.uleb128 .Ltmp177-.Lfunc_begin8         #     jumps to .Ltmp177
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp178-.Lfunc_begin8         # >> Call Site 26 <<
	.uleb128 .Ltmp179-.Ltmp178              #   Call between .Ltmp178 and .Ltmp179
	.uleb128 .Ltmp180-.Lfunc_begin8         #     jumps to .Ltmp180
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp181-.Lfunc_begin8         # >> Call Site 27 <<
	.uleb128 .Ltmp182-.Ltmp181              #   Call between .Ltmp181 and .Ltmp182
	.uleb128 .Ltmp183-.Lfunc_begin8         #     jumps to .Ltmp183
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp184-.Lfunc_begin8         # >> Call Site 28 <<
	.uleb128 .Ltmp191-.Ltmp184              #   Call between .Ltmp184 and .Ltmp191
	.uleb128 .Ltmp192-.Lfunc_begin8         #     jumps to .Ltmp192
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp193-.Lfunc_begin8         # >> Call Site 29 <<
	.uleb128 .Ltmp194-.Ltmp193              #   Call between .Ltmp193 and .Ltmp194
	.uleb128 .Ltmp195-.Lfunc_begin8         #     jumps to .Ltmp195
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp194-.Lfunc_begin8         # >> Call Site 30 <<
	.uleb128 .Ltmp196-.Ltmp194              #   Call between .Ltmp194 and .Ltmp196
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp196-.Lfunc_begin8         # >> Call Site 31 <<
	.uleb128 .Ltmp201-.Ltmp196              #   Call between .Ltmp196 and .Ltmp201
	.uleb128 .Ltmp234-.Lfunc_begin8         #     jumps to .Ltmp234
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp202-.Lfunc_begin8         # >> Call Site 32 <<
	.uleb128 .Ltmp213-.Ltmp202              #   Call between .Ltmp202 and .Ltmp213
	.uleb128 .Ltmp214-.Lfunc_begin8         #     jumps to .Ltmp214
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp215-.Lfunc_begin8         # >> Call Site 33 <<
	.uleb128 .Ltmp218-.Ltmp215              #   Call between .Ltmp215 and .Ltmp218
	.uleb128 .Ltmp234-.Lfunc_begin8         #     jumps to .Ltmp234
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp219-.Lfunc_begin8         # >> Call Site 34 <<
	.uleb128 .Ltmp230-.Ltmp219              #   Call between .Ltmp219 and .Ltmp230
	.uleb128 .Ltmp231-.Lfunc_begin8         #     jumps to .Ltmp231
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp232-.Lfunc_begin8         # >> Call Site 35 <<
	.uleb128 .Ltmp233-.Ltmp232              #   Call between .Ltmp232 and .Ltmp233
	.uleb128 .Ltmp234-.Lfunc_begin8         #     jumps to .Ltmp234
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp235-.Lfunc_begin8         # >> Call Site 36 <<
	.uleb128 .Ltmp238-.Ltmp235              #   Call between .Ltmp235 and .Ltmp238
	.uleb128 .Ltmp239-.Lfunc_begin8         #     jumps to .Ltmp239
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp238-.Lfunc_begin8         # >> Call Site 37 <<
	.uleb128 .Ltmp240-.Ltmp238              #   Call between .Ltmp238 and .Ltmp240
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp240-.Lfunc_begin8         # >> Call Site 38 <<
	.uleb128 .Ltmp241-.Ltmp240              #   Call between .Ltmp240 and .Ltmp241
	.uleb128 .Ltmp242-.Lfunc_begin8         #     jumps to .Ltmp242
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp241-.Lfunc_begin8         # >> Call Site 39 <<
	.uleb128 .Ltmp80-.Ltmp241               #   Call between .Ltmp241 and .Ltmp80
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp80-.Lfunc_begin8          # >> Call Site 40 <<
	.uleb128 .Ltmp81-.Ltmp80                #   Call between .Ltmp80 and .Ltmp81
	.uleb128 .Ltmp82-.Lfunc_begin8          #     jumps to .Ltmp82
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp81-.Lfunc_begin8          # >> Call Site 41 <<
	.uleb128 .Ltmp246-.Ltmp81               #   Call between .Ltmp81 and .Ltmp246
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp246-.Lfunc_begin8         # >> Call Site 42 <<
	.uleb128 .Ltmp247-.Ltmp246              #   Call between .Ltmp246 and .Ltmp247
	.uleb128 .Ltmp248-.Lfunc_begin8         #     jumps to .Ltmp248
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp122-.Lfunc_begin8         # >> Call Site 43 <<
	.uleb128 .Ltmp123-.Ltmp122              #   Call between .Ltmp122 and .Ltmp123
	.uleb128 .Ltmp124-.Lfunc_begin8         #     jumps to .Ltmp124
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp155-.Lfunc_begin8         # >> Call Site 44 <<
	.uleb128 .Ltmp156-.Ltmp155              #   Call between .Ltmp155 and .Ltmp156
	.uleb128 .Ltmp157-.Lfunc_begin8         #     jumps to .Ltmp157
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp65-.Lfunc_begin8          # >> Call Site 45 <<
	.uleb128 .Ltmp66-.Ltmp65                #   Call between .Ltmp65 and .Ltmp66
	.uleb128 .Ltmp67-.Lfunc_begin8          #     jumps to .Ltmp67
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp66-.Lfunc_begin8          # >> Call Site 46 <<
	.uleb128 .Ltmp243-.Ltmp66               #   Call between .Ltmp66 and .Ltmp243
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp243-.Lfunc_begin8         # >> Call Site 47 <<
	.uleb128 .Ltmp244-.Ltmp243              #   Call between .Ltmp243 and .Ltmp244
	.uleb128 .Ltmp245-.Lfunc_begin8         #     jumps to .Ltmp245
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp244-.Lfunc_begin8         # >> Call Site 48 <<
	.uleb128 .Lfunc_end21-.Ltmp244          #   Call between .Ltmp244 and .Lfunc_end21
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end8:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase0:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev,"axG",@progbits,_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev,comdat
	.weak	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev # -- Begin function _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev,@function
_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev: # @_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	(%rdi), %rbx
	testq	%rbx, %rbx
	je	.LBB22_9
# %bb.1:                                # %if.then
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB22_3
# %bb.2:                                # %if.then.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB22_5
	jmp	.LBB22_9
.LBB22_3:                               # %if.else.i.i
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB22_9
.LBB22_5:                               # %if.then.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB22_7
# %bb.6:                                # %if.then.i9.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB22_10
.LBB22_9:                               # %if.end
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB22_7:                               # %if.else.i11.i
	.cfi_def_cfa_offset 16
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB22_9
.LBB22_10:                              # %if.then5.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmpq	*24(%rax)                       # TAILCALL
.Lfunc_end22:
	.size	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, .Lfunc_end22-_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11_Tuple_implILm0EJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev,"axG",@progbits,_ZNSt11_Tuple_implILm0EJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev,comdat
	.weak	_ZNSt11_Tuple_implILm0EJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev # -- Begin function _ZNSt11_Tuple_implILm0EJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm0EJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev,@function
_ZNSt11_Tuple_implILm0EJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev: # @_ZNSt11_Tuple_implILm0EJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	64(%rdi), %rbx
	testq	%rbx, %rbx
	je	.LBB23_9
# %bb.1:                                # %if.then.i.i.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB23_3
# %bb.2:                                # %if.then.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB23_5
	jmp	.LBB23_9
.LBB23_3:                               # %if.else.i.i.i.i.i
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB23_9
.LBB23_5:                               # %if.then.i.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB23_7
# %bb.6:                                # %if.then.i9.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB23_10
.LBB23_9:                               # %_ZNSt10_Head_baseILm0ESt10shared_ptrI7KernelIELb0EED2Ev.exit
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB23_7:                               # %if.else.i11.i.i.i.i
	.cfi_def_cfa_offset 16
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB23_9
.LBB23_10:                              # %if.then5.i.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmpq	*24(%rax)                       # TAILCALL
.Lfunc_end23:
	.size	_ZNSt11_Tuple_implILm0EJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev, .Lfunc_end23-_ZNSt11_Tuple_implILm0EJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeIJRKS5_EEEvPSt13_Rb_tree_nodeIS5_EDpOT_,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeIJRKS5_EEEvPSt13_Rb_tree_nodeIS5_EDpOT_,comdat
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeIJRKS5_EEEvPSt13_Rb_tree_nodeIS5_EDpOT_ # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeIJRKS5_EEEvPSt13_Rb_tree_nodeIS5_EDpOT_
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeIJRKS5_EEEvPSt13_Rb_tree_nodeIS5_EDpOT_,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeIJRKS5_EEEvPSt13_Rb_tree_nodeIS5_EDpOT_: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeIJRKS5_EEEvPSt13_Rb_tree_nodeIS5_EDpOT_
.Lfunc_begin9:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception9
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$16, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r12
	leaq	48(%rsi), %r14
	movq	%r14, 32(%rsi)
	movq	(%rdx), %r15
	movq	8(%rdx), %rbx
	movq	%rbx, 8(%rsp)
	cmpq	$16, %rbx
	jb	.LBB24_3
# %bb.1:                                # %if.then4.i.i.i.i.i.i
	leaq	32(%r12), %r13
.Ltmp249:
	leaq	8(%rsp), %rsi
	movq	%r13, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp250:
# %bb.2:                                # %call5.i.i.i16.i.i.i.noexc
	movq	%rax, (%r13)
	movq	8(%rsp), %rcx
	movq	%rcx, (%r14)
	movq	%rax, %r14
.LBB24_3:                               # %if.end6.i.i.i.i.i.i
	testq	%rbx, %rbx
	je	.LBB24_7
# %bb.4:                                # %if.end6.i.i.i.i.i.i
	cmpq	$1, %rbx
	jne	.LBB24_6
# %bb.5:                                # %if.then.i.i.i.i.i.i.i.i
	movb	(%r15), %al
	movb	%al, (%r14)
	jmp	.LBB24_7
.LBB24_6:                               # %if.end.i.i.i.i.i.i.i.i.i
	movq	%r14, %rdi
	movq	%r15, %rsi
	movq	%rbx, %rdx
	callq	memcpy@PLT
.LBB24_7:                               # %try.cont
	movq	8(%rsp), %rax
	movq	%rax, 40(%r12)
	movq	32(%r12), %rcx
	movb	$0, (%rcx,%rax)
	addq	$16, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB24_11:                              # %lpad
	.cfi_def_cfa_offset 64
.Ltmp251:
	movq	%rax, %rdi
	callq	__cxa_begin_catch
	movq	%r12, %rdi
	callq	_ZdlPv
.Ltmp252:
	callq	__cxa_rethrow
.Ltmp253:
# %bb.12:                               # %unreachable
.LBB24_8:                               # %lpad5
.Ltmp254:
	movq	%rax, %rbx
.Ltmp255:
	callq	__cxa_end_catch
.Ltmp256:
# %bb.9:                                # %eh.resume
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB24_10:                              # %terminate.lpad
.Ltmp257:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end24:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeIJRKS5_EEEvPSt13_Rb_tree_nodeIS5_EDpOT_, .Lfunc_end24-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeIJRKS5_EEEvPSt13_Rb_tree_nodeIS5_EDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeIJRKS5_EEEvPSt13_Rb_tree_nodeIS5_EDpOT_,"aG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeIJRKS5_EEEvPSt13_Rb_tree_nodeIS5_EDpOT_,comdat
	.p2align	2
GCC_except_table24:
.Lexception9:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase1-.Lttbaseref1
.Lttbaseref1:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end9-.Lcst_begin9
.Lcst_begin9:
	.uleb128 .Ltmp249-.Lfunc_begin9         # >> Call Site 1 <<
	.uleb128 .Ltmp250-.Ltmp249              #   Call between .Ltmp249 and .Ltmp250
	.uleb128 .Ltmp251-.Lfunc_begin9         #     jumps to .Ltmp251
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp250-.Lfunc_begin9         # >> Call Site 2 <<
	.uleb128 .Ltmp252-.Ltmp250              #   Call between .Ltmp250 and .Ltmp252
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp252-.Lfunc_begin9         # >> Call Site 3 <<
	.uleb128 .Ltmp253-.Ltmp252              #   Call between .Ltmp252 and .Ltmp253
	.uleb128 .Ltmp254-.Lfunc_begin9         #     jumps to .Ltmp254
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp255-.Lfunc_begin9         # >> Call Site 4 <<
	.uleb128 .Ltmp256-.Ltmp255              #   Call between .Ltmp255 and .Ltmp256
	.uleb128 .Ltmp257-.Lfunc_begin9         #     jumps to .Ltmp257
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp256-.Lfunc_begin9         # >> Call Site 5 <<
	.uleb128 .Lfunc_end24-.Ltmp256          #   Call between .Ltmp256 and .Lfunc_end24
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end9:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase1:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev,"axG",@progbits,_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev,comdat
	.weak	_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev # -- Begin function _ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev,@function
_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev: # @_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	$_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16, (%rdi)
	movq	72(%rdi), %rdi
	leaq	88(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB25_2
# %bb.1:                                # %if.then.i.i
	callq	_ZdlPv
.LBB25_2:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	$_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16, (%rbx)
	addq	$56, %rbx
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZNSt6localeD1Ev                # TAILCALL
.Lfunc_end25:
	.size	_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev, .Lfunc_end25-_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal12PrintTupleToISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEELm5EEEvRKT_St17integral_constantImXT0_EEPSo,"axG",@progbits,_ZN7testing8internal12PrintTupleToISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEELm5EEEvRKT_St17integral_constantImXT0_EEPSo,comdat
	.weak	_ZN7testing8internal12PrintTupleToISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEELm5EEEvRKT_St17integral_constantImXT0_EEPSo # -- Begin function _ZN7testing8internal12PrintTupleToISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEELm5EEEvRKT_St17integral_constantImXT0_EEPSo
	.p2align	4, 0x90
	.type	_ZN7testing8internal12PrintTupleToISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEELm5EEEvRKT_St17integral_constantImXT0_EEPSo,@function
_ZN7testing8internal12PrintTupleToISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEELm5EEEvRKT_St17integral_constantImXT0_EEPSo: # @_ZN7testing8internal12PrintTupleToISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEELm5EEEvRKT_St17integral_constantImXT0_EEPSo
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	%rdi, %r14
	addq	$56, %rdi
	xorl	%edx, %edx
	callq	_ZN7testing8internal17PrintSmartPointerI7KernelISt10shared_ptrIS2_EvEEvRKT0_PSoi
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movb	$40, 6(%rsp)
	leaq	6(%rsp), %rsi
	movl	$1, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movq	40(%r14), %rsi
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertIlEERSoT_
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movq	48(%r14), %rsi
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertIlEERSoT_
	movb	$41, 7(%rsp)
	leaq	7(%rsp), %rsi
	movl	$1, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.17, %esi
	movl	$1, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movq	32(%r14), %rsi
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertIlEERSoT_
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movq	24(%r14), %rsi
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertIlEERSoT_
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movq	16(%r14), %rsi
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertIlEERSoT_
	movl	$.L.str.18, %esi
	movl	$1, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movsd	8(%r14), %xmm0                  # xmm0 = mem[0],zero
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertIdEERSoT_
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movsd	(%r14), %xmm0                   # xmm0 = mem[0],zero
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertIdEERSoT_
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end26:
	.size	_ZN7testing8internal12PrintTupleToISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEELm5EEEvRKT_St17integral_constantImXT0_EEPSo, .Lfunc_end26-_ZN7testing8internal12PrintTupleToISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEELm5EEEvRKT_St17integral_constantImXT0_EEPSo
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal17PrintSmartPointerI7KernelISt10shared_ptrIS2_EvEEvRKT0_PSoi,"axG",@progbits,_ZN7testing8internal17PrintSmartPointerI7KernelISt10shared_ptrIS2_EvEEvRKT0_PSoi,comdat
	.weak	_ZN7testing8internal17PrintSmartPointerI7KernelISt10shared_ptrIS2_EvEEvRKT0_PSoi # -- Begin function _ZN7testing8internal17PrintSmartPointerI7KernelISt10shared_ptrIS2_EvEEvRKT0_PSoi
	.p2align	4, 0x90
	.type	_ZN7testing8internal17PrintSmartPointerI7KernelISt10shared_ptrIS2_EvEEvRKT0_PSoi,@function
_ZN7testing8internal17PrintSmartPointerI7KernelISt10shared_ptrIS2_EvEEvRKT0_PSoi: # @_ZN7testing8internal17PrintSmartPointerI7KernelISt10shared_ptrIS2_EvEEvRKT0_PSoi
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %r14
	cmpq	$0, (%rdi)
	je	.LBB27_1
# %bb.2:                                # %if.else
	movq	%rdi, %rbx
	movl	$.L.str.21, %esi
	movl	$7, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movq	(%rbx), %rsi
	movq	%r14, %rdi
	callq	_ZNSo9_M_insertIPKvEERSoT_
	movl	$.L.str.22, %esi
	movl	$10, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movq	(%rbx), %rbx
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	*56(%rax)
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	*64(%rax)
	movl	$.L.str.18, %esi
	movl	$1, %edx
	jmp	.LBB27_3
.LBB27_1:                               # %if.then
	movl	$.L.str.20, %esi
	movl	$9, %edx
.LBB27_3:                               # %if.end
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end27:
	.size	_ZN7testing8internal17PrintSmartPointerI7KernelISt10shared_ptrIS2_EvEEvRKT0_PSoi, .Lfunc_end27-_ZN7testing8internal17PrintSmartPointerI7KernelISt10shared_ptrIS2_EvEEvRKT0_PSoi
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12__shared_ptrI7KernelILN9__gnu_cxx12_Lock_policyE2EED2Ev,"axG",@progbits,_ZNSt12__shared_ptrI7KernelILN9__gnu_cxx12_Lock_policyE2EED2Ev,comdat
	.weak	_ZNSt12__shared_ptrI7KernelILN9__gnu_cxx12_Lock_policyE2EED2Ev # -- Begin function _ZNSt12__shared_ptrI7KernelILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12__shared_ptrI7KernelILN9__gnu_cxx12_Lock_policyE2EED2Ev,@function
_ZNSt12__shared_ptrI7KernelILN9__gnu_cxx12_Lock_policyE2EED2Ev: # @_ZNSt12__shared_ptrI7KernelILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	8(%rdi), %rbx
	testq	%rbx, %rbx
	je	.LBB28_9
# %bb.1:                                # %if.then.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB28_3
# %bb.2:                                # %if.then.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB28_5
	jmp	.LBB28_9
.LBB28_3:                               # %if.else.i.i.i
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB28_9
.LBB28_5:                               # %if.then.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB28_7
# %bb.6:                                # %if.then.i9.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB28_10
.LBB28_9:                               # %_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev.exit
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB28_7:                               # %if.else.i11.i.i
	.cfi_def_cfa_offset 16
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB28_9
.LBB28_10:                              # %if.then5.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmpq	*24(%rax)                       # TAILCALL
.Lfunc_end28:
	.size	_ZNSt12__shared_ptrI7KernelILN9__gnu_cxx12_Lock_policyE2EED2Ev, .Lfunc_end28-_ZNSt12__shared_ptrI7KernelILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E,"axG",@progbits,_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E,comdat
	.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E # -- Begin function _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E,@function
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E: # @_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	testq	%rsi, %rsi
	je	.LBB29_5
# %bb.1:                                # %while.body.preheader
	movq	%rsi, %rbx
	movq	%rdi, %r14
	jmp	.LBB29_2
	.p2align	4, 0x90
.LBB29_4:                               # %_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS5_E.exit
                                        #   in Loop: Header=BB29_2 Depth=1
	movq	%rbx, %rdi
	callq	_ZdlPv
	movq	%r15, %rbx
	testq	%r15, %r15
	je	.LBB29_5
.LBB29_2:                               # %while.body
                                        # =>This Inner Loop Header: Depth=1
	movq	24(%rbx), %rsi
	movq	%r14, %rdi
	callq	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E
	movq	16(%rbx), %r15
	movq	32(%rbx), %rdi
	leaq	48(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB29_4
# %bb.3:                                # %if.then.i.i.i.i.i.i
                                        #   in Loop: Header=BB29_2 Depth=1
	callq	_ZdlPv
	jmp	.LBB29_4
.LBB29_5:                               # %while.end
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end29:
	.size	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E, .Lfunc_end29-_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoC2EPKcS6_PNS0_19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES8_IJlllEEddEEEENS0_12CodeLocationE,"axG",@progbits,_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoC2EPKcS6_PNS0_19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES8_IJlllEEddEEEENS0_12CodeLocationE,comdat
	.weak	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoC2EPKcS6_PNS0_19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES8_IJlllEEddEEEENS0_12CodeLocationE # -- Begin function _ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoC2EPKcS6_PNS0_19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES8_IJlllEEddEEEENS0_12CodeLocationE
	.p2align	4, 0x90
	.type	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoC2EPKcS6_PNS0_19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES8_IJlllEEddEEEENS0_12CodeLocationE,@function
_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoC2EPKcS6_PNS0_19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES8_IJlllEEddEEEENS0_12CodeLocationE: # @_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoC2EPKcS6_PNS0_19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES8_IJlllEEddEEEENS0_12CodeLocationE
.Lfunc_begin10:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception10
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, 16(%rsp)                  # 8-byte Spill
	leaq	16(%rdi), %r15
	movq	%r15, (%rdi)
	testq	%rsi, %rsi
	je	.LBB30_33
# %bb.1:                                # %if.end.i.i.i.i
	movq	%r8, %r14
	movq	%rdx, %r12
	movq	%rsi, %r13
	movq	%rdi, %rbx
	movq	%rsi, %rdi
	callq	strlen
	movq	%rax, %rbp
	movq	%rax, (%rsp)
	movq	%r15, 8(%rsp)                   # 8-byte Spill
	cmpq	$16, %rax
	jb	.LBB30_3
# %bb.2:                                # %if.then4.i.i.i.i
	movq	%rsp, %rsi
	movq	%rbx, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
	movq	%rax, %r15
	movq	%rax, (%rbx)
	movq	(%rsp), %rcx
	movq	%rcx, 16(%rbx)
.LBB30_3:                               # %if.end6.i.i.i.i
	testq	%rbp, %rbp
	je	.LBB30_7
# %bb.4:                                # %if.end6.i.i.i.i
	cmpq	$1, %rbp
	jne	.LBB30_6
# %bb.5:                                # %if.then.i.i.i.i.i.i
	movb	(%r13), %cl
	movb	%cl, (%r15)
	jmp	.LBB30_7
.LBB30_6:                               # %if.end.i.i.i.i.i.i.i
	movq	%r15, %rdi
	movq	%r13, %rsi
	movq	%rbp, %rdx
	callq	memcpy@PLT
.LBB30_7:                               # %invoke.cont
	movq	(%rsp), %rax
	movq	%rax, 8(%rbx)
	movq	(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	leaq	48(%rbx), %rbp
	movq	%rbp, 32(%rbx)
	testq	%r12, %r12
	je	.LBB30_8
# %bb.10:                               # %if.end.i.i.i.i16
	movq	%r12, %rdi
	callq	strlen
	movq	%rax, %r13
	movq	%rax, (%rsp)
	movq	%rbp, %rax
	cmpq	$16, %r13
	jb	.LBB30_13
# %bb.11:                               # %if.then4.i.i.i.i19
	leaq	32(%rbx), %rdi
.Ltmp258:
	movq	%rsp, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp259:
# %bb.12:                               # %call5.i.i.i9.i.noexc27
	movq	%rax, 32(%rbx)
	movq	(%rsp), %rcx
	movq	%rcx, 48(%rbx)
.LBB30_13:                              # %if.end6.i.i.i.i20
	testq	%r13, %r13
	je	.LBB30_17
# %bb.14:                               # %if.end6.i.i.i.i20
	cmpq	$1, %r13
	jne	.LBB30_16
# %bb.15:                               # %if.then.i.i.i.i.i.i21
	movb	(%r12), %cl
	movb	%cl, (%rax)
	jmp	.LBB30_17
.LBB30_16:                              # %if.end.i.i.i.i.i.i.i22
	movq	%rax, %rdi
	movq	%r12, %rsi
	movq	%r13, %rdx
	callq	memcpy@PLT
.LBB30_17:                              # %invoke.cont4
	movq	(%rsp), %rax
	movq	%rax, 40(%rbx)
	movq	32(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	movq	16(%rsp), %rax                  # 8-byte Reload
	movq	%rax, 64(%rbx)
	leaq	88(%rbx), %rax
	movq	%rax, 72(%rbx)
	movq	(%r14), %r15
	movq	8(%r14), %r12
	movq	%r12, (%rsp)
	cmpq	$15, %r12
	jbe	.LBB30_20
# %bb.18:                               # %if.then4.i.i.i.i40
	leaq	72(%rbx), %rdi
.Ltmp260:
	movq	%rsp, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp261:
# %bb.19:                               # %call5.i.i.i16.i.noexc
	movq	%rax, 72(%rbx)
	movq	(%rsp), %rcx
	movq	%rcx, 88(%rbx)
.LBB30_20:                              # %if.end6.i.i.i.i41
	testq	%r12, %r12
	je	.LBB30_24
# %bb.21:                               # %if.end6.i.i.i.i41
	cmpq	$1, %r12
	jne	.LBB30_23
# %bb.22:                               # %if.then.i.i.i.i.i.i42
	movb	(%r15), %cl
	movb	%cl, (%rax)
	jmp	.LBB30_24
.LBB30_23:                              # %if.end.i.i.i.i.i.i.i43
	movq	%rax, %rdi
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB30_24:                              # %invoke.cont6
	movq	(%rsp), %rax
	movq	%rax, 80(%rbx)
	movq	72(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	movl	32(%r14), %eax
	movl	%eax, 104(%rbx)
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB30_33:                              # %if.then.i.i.i.i
	.cfi_def_cfa_offset 80
	movl	$.L.str.4, %edi
	callq	_ZSt19__throw_logic_errorPKc
.LBB30_8:                               # %if.then.i.i.i.i13
.Ltmp263:
	movl	$.L.str.4, %edi
	callq	_ZSt19__throw_logic_errorPKc
.Ltmp264:
# %bb.9:                                # %.noexc26
.LBB30_26:                              # %lpad5
.Ltmp262:
	movq	%rax, %r14
	movq	64(%rbx), %rdi
	testq	%rdi, %rdi
	jne	.LBB30_27
# %bb.28:                               # %_ZNSt10unique_ptrIN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEESt14default_deleteISB_EED2Ev.exit
	movq	$0, 64(%rbx)
	movq	32(%rbx), %rdi
	cmpq	%rbp, %rdi
	jne	.LBB30_29
.LBB30_30:                              # %ehcleanup
	movq	(%rbx), %rdi
	cmpq	8(%rsp), %rdi                   # 8-byte Folded Reload
	jne	.LBB30_31
.LBB30_32:                              # %eh.resume
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB30_27:                              # %_ZNKSt14default_deleteIN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEEEclEPSB_.exit.i
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	$0, 64(%rbx)
	movq	32(%rbx), %rdi
	cmpq	%rbp, %rdi
	je	.LBB30_30
.LBB30_29:                              # %if.then.i.i
	callq	_ZdlPv
	movq	(%rbx), %rdi
	cmpq	8(%rsp), %rdi                   # 8-byte Folded Reload
	je	.LBB30_32
	jmp	.LBB30_31
.LBB30_25:                              # %lpad3
.Ltmp265:
	movq	%rax, %r14
	movq	(%rbx), %rdi
	cmpq	8(%rsp), %rdi                   # 8-byte Folded Reload
	je	.LBB30_32
.LBB30_31:                              # %if.then.i.i34
	callq	_ZdlPv
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end30:
	.size	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoC2EPKcS6_PNS0_19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES8_IJlllEEddEEEENS0_12CodeLocationE, .Lfunc_end30-_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoC2EPKcS6_PNS0_19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES8_IJlllEEddEEEENS0_12CodeLocationE
	.cfi_endproc
	.section	.gcc_except_table._ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoC2EPKcS6_PNS0_19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES8_IJlllEEddEEEENS0_12CodeLocationE,"aG",@progbits,_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoC2EPKcS6_PNS0_19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES8_IJlllEEddEEEENS0_12CodeLocationE,comdat
	.p2align	2
GCC_except_table30:
.Lexception10:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end10-.Lcst_begin10
.Lcst_begin10:
	.uleb128 .Lfunc_begin10-.Lfunc_begin10  # >> Call Site 1 <<
	.uleb128 .Ltmp258-.Lfunc_begin10        #   Call between .Lfunc_begin10 and .Ltmp258
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp258-.Lfunc_begin10        # >> Call Site 2 <<
	.uleb128 .Ltmp259-.Ltmp258              #   Call between .Ltmp258 and .Ltmp259
	.uleb128 .Ltmp265-.Lfunc_begin10        #     jumps to .Ltmp265
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp259-.Lfunc_begin10        # >> Call Site 3 <<
	.uleb128 .Ltmp260-.Ltmp259              #   Call between .Ltmp259 and .Ltmp260
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp260-.Lfunc_begin10        # >> Call Site 4 <<
	.uleb128 .Ltmp261-.Ltmp260              #   Call between .Ltmp260 and .Ltmp261
	.uleb128 .Ltmp262-.Lfunc_begin10        #     jumps to .Ltmp262
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp261-.Lfunc_begin10        # >> Call Site 5 <<
	.uleb128 .Ltmp263-.Ltmp261              #   Call between .Ltmp261 and .Ltmp263
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp263-.Lfunc_begin10        # >> Call Site 6 <<
	.uleb128 .Ltmp264-.Ltmp263              #   Call between .Ltmp263 and .Ltmp264
	.uleb128 .Ltmp265-.Lfunc_begin10        #     jumps to .Ltmp265
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp264-.Lfunc_begin10        # >> Call Site 7 <<
	.uleb128 .Lfunc_end30-.Ltmp264          #   Call between .Ltmp264 and .Lfunc_end30
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end10:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6vectorISt10shared_ptrIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_,"axG",@progbits,_ZNSt6vectorISt10shared_ptrIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_,comdat
	.weak	_ZNSt6vectorISt10shared_ptrIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_ # -- Begin function _ZNSt6vectorISt10shared_ptrIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorISt10shared_ptrIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_,@function
_ZNSt6vectorISt10shared_ptrIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_: # @_ZNSt6vectorISt10shared_ptrIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r13
	movq	%rsi, %rbx
	movq	%rdi, %r15
	movq	(%rdi), %rax
	movq	8(%rdi), %rcx
	subq	%rax, %rcx
	movq	%rcx, %rdx
	sarq	$4, %rdx
	testq	%rcx, %rcx
	movl	$1, %ecx
	cmovneq	%rdx, %rcx
	leaq	(%rcx,%rdx), %r12
	movq	%r12, %rsi
	shrq	$60, %rsi
	movabsq	$1152921504606846975, %rsi      # imm = 0xFFFFFFFFFFFFFFF
	cmovneq	%rsi, %r12
	addq	%rdx, %rcx
	cmovbq	%rsi, %r12
	movq	%rbx, %rbp
	subq	%rax, %rbp
	shlq	$4, %r12
	movq	%r12, %rdi
	callq	_Znwm
	movq	(%r13), %rcx
	movq	%rcx, (%rax,%rbp)
	movq	8(%r13), %rcx
	movq	$0, 8(%r13)
	movq	%rcx, 8(%rax,%rbp)
	movq	$0, (%r13)
	movq	(%r15), %r13
	cmpq	%rbx, %r13
	movq	%rax, 16(%rsp)                  # 8-byte Spill
	movq	%rax, %rbp
	je	.LBB31_3
# %bb.1:                                # %for.body.i.i.i.i.preheader
	movq	%r13, %rdx
	.p2align	4, 0x90
.LBB31_2:                               # %for.body.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdx), %rcx
	movq	%rcx, (%rbp)
	movq	$0, 8(%rbp)
	movq	8(%rdx), %rcx
	movq	$0, 8(%rdx)
	movq	%rcx, 8(%rbp)
	movq	$0, (%rdx)
	addq	$16, %rbp
	addq	$16, %rdx
	cmpq	%rbx, %rdx
	jne	.LBB31_2
.LBB31_3:                               # %invoke.cont10
	addq	$16, %rbp
	movq	8(%r15), %r14
	cmpq	%rbx, %r14
	je	.LBB31_5
	.p2align	4, 0x90
.LBB31_4:                               # %for.body.i.i.i.i78
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rbx), %rax
	movq	%rax, (%rbp)
	movq	$0, 8(%rbp)
	movq	8(%rbx), %rax
	movq	$0, 8(%rbx)
	movq	%rax, 8(%rbp)
	movq	$0, (%rbx)
	addq	$16, %rbp
	addq	$16, %rbx
	cmpq	%r14, %rbx
	jne	.LBB31_4
.LBB31_5:                               # %invoke.cont15
	cmpq	%r14, %r13
	je	.LBB31_19
# %bb.6:                                # %for.body.i.preheader
	movq	%r15, 8(%rsp)                   # 8-byte Spill
	movl	$__pthread_key_create, %r15d
	jmp	.LBB31_7
	.p2align	4, 0x90
.LBB31_17:                              # %_ZSt8_DestroyISt10shared_ptrIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEEEvPT_.exit.i
                                        #   in Loop: Header=BB31_7 Depth=1
	addq	$16, %r13
	cmpq	%r13, %r14
	je	.LBB31_18
.LBB31_7:                               # %for.body.i
                                        # =>This Inner Loop Header: Depth=1
	movq	8(%r13), %rbx
	testq	%rbx, %rbx
	je	.LBB31_17
# %bb.8:                                # %if.then.i.i.i85
                                        #   in Loop: Header=BB31_7 Depth=1
	testq	%r15, %r15
	je	.LBB31_10
# %bb.9:                                # %if.then.i.i.i.i.i
                                        #   in Loop: Header=BB31_7 Depth=1
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB31_17
	jmp	.LBB31_12
	.p2align	4, 0x90
.LBB31_10:                              # %if.else.i.i.i.i.i
                                        #   in Loop: Header=BB31_7 Depth=1
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB31_17
.LBB31_12:                              # %if.then.i.i.i.i
                                        #   in Loop: Header=BB31_7 Depth=1
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	testq	%r15, %r15
	je	.LBB31_14
# %bb.13:                               # %if.then.i9.i.i.i.i
                                        #   in Loop: Header=BB31_7 Depth=1
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB31_17
	jmp	.LBB31_16
.LBB31_14:                              # %if.else.i11.i.i.i.i
                                        #   in Loop: Header=BB31_7 Depth=1
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB31_17
.LBB31_16:                              # %if.then5.i.i.i.i
                                        #   in Loop: Header=BB31_7 Depth=1
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
	jmp	.LBB31_17
.LBB31_18:                              # %_ZNSt12_Destroy_auxILb0EE9__destroyIPSt10shared_ptrIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEEEEvT_SB_.exit.loopexit
	movq	8(%rsp), %r15                   # 8-byte Reload
	movq	(%r15), %r13
.LBB31_19:                              # %_ZNSt12_Destroy_auxILb0EE9__destroyIPSt10shared_ptrIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEEEEvT_SB_.exit
	testq	%r13, %r13
	movq	16(%rsp), %rbx                  # 8-byte Reload
	je	.LBB31_21
# %bb.20:                               # %if.then.i81
	movq	%r13, %rdi
	callq	_ZdlPv
.LBB31_21:                              # %_ZNSt12_Vector_baseISt10shared_ptrIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEESaIS7_EE13_M_deallocateEPS7_m.exit
	movq	%rbx, (%r15)
	movq	%rbp, 8(%r15)
	addq	%r12, %rbx
	movq	%rbx, 16(%r15)
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end31:
	.size	_ZNSt6vectorISt10shared_ptrIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_, .Lfunc_end31-_ZNSt6vectorISt10shared_ptrIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2IPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEEET_,"axG",@progbits,_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2IPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEEET_,comdat
	.weak	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2IPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEEET_ # -- Begin function _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2IPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEEET_
	.p2align	4, 0x90
	.type	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2IPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEEET_,@function
_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2IPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEEET_: # @_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2IPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEEET_
.Lfunc_begin11:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception11
# %bb.0:                                # %entry
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	$0, (%rdi)
.Ltmp266:
	movl	$24, %edi
	callq	_Znwm
.Ltmp267:
# %bb.1:                                # %invoke.cont
	movabsq	$4294967297, %rcx               # imm = 0x100000001
	movq	%rcx, 8(%rax)
	movq	$_ZTVSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE+16, (%rax)
	movq	%r14, 16(%rax)
	movq	%rax, (%rbx)
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB32_2:                               # %lpad
	.cfi_def_cfa_offset 32
.Ltmp268:
	movq	%rax, %rdi
	callq	__cxa_begin_catch
	testq	%r14, %r14
	je	.LBB32_4
# %bb.3:                                # %delete.notnull
	movq	%r14, %rdi
	callq	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoD2Ev
	movq	%r14, %rdi
	callq	_ZdlPv
.LBB32_4:                               # %delete.end
.Ltmp269:
	callq	__cxa_rethrow
.Ltmp270:
# %bb.8:                                # %unreachable
.LBB32_5:                               # %lpad3
.Ltmp271:
	movq	%rax, %rbx
.Ltmp272:
	callq	__cxa_end_catch
.Ltmp273:
# %bb.6:                                # %eh.resume
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB32_7:                               # %terminate.lpad
.Ltmp274:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end32:
	.size	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2IPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEEET_, .Lfunc_end32-_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2IPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEEET_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2IPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEEET_,"aG",@progbits,_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2IPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoEEET_,comdat
	.p2align	2
GCC_except_table32:
.Lexception11:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase2-.Lttbaseref2
.Lttbaseref2:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end11-.Lcst_begin11
.Lcst_begin11:
	.uleb128 .Ltmp266-.Lfunc_begin11        # >> Call Site 1 <<
	.uleb128 .Ltmp267-.Ltmp266              #   Call between .Ltmp266 and .Ltmp267
	.uleb128 .Ltmp268-.Lfunc_begin11        #     jumps to .Ltmp268
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp267-.Lfunc_begin11        # >> Call Site 2 <<
	.uleb128 .Ltmp269-.Ltmp267              #   Call between .Ltmp267 and .Ltmp269
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp269-.Lfunc_begin11        # >> Call Site 3 <<
	.uleb128 .Ltmp270-.Ltmp269              #   Call between .Ltmp269 and .Ltmp270
	.uleb128 .Ltmp271-.Lfunc_begin11        #     jumps to .Ltmp271
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp272-.Lfunc_begin11        # >> Call Site 4 <<
	.uleb128 .Ltmp273-.Ltmp272              #   Call between .Ltmp272 and .Ltmp273
	.uleb128 .Ltmp274-.Lfunc_begin11        #     jumps to .Ltmp274
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp273-.Lfunc_begin11        # >> Call Site 5 <<
	.uleb128 .Lfunc_end32-.Ltmp273          #   Call between .Ltmp273 and .Lfunc_end32
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end11:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase2:
	.p2align	2
                                        # -- End function
	.section	.text._ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoD2Ev,"axG",@progbits,_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoD2Ev,comdat
	.weak	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoD2Ev # -- Begin function _ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoD2Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoD2Ev,@function
_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoD2Ev: # @_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoD2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	72(%rdi), %rdi
	leaq	88(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB33_2
# %bb.1:                                # %if.then.i.i.i
	callq	_ZdlPv
.LBB33_2:                               # %_ZN7testing8internal12CodeLocationD2Ev.exit
	movq	64(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB33_4
# %bb.3:                                # %_ZNKSt14default_deleteIN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEEEclEPSB_.exit.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB33_4:                               # %_ZNSt10unique_ptrIN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEESt14default_deleteISB_EED2Ev.exit
	movq	$0, 64(%rbx)
	movq	32(%rbx), %rdi
	leaq	48(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB33_6
# %bb.5:                                # %if.then.i.i
	callq	_ZdlPv
.LBB33_6:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	(%rbx), %rdi
	addq	$16, %rbx
	cmpq	%rbx, %rdi
	je	.LBB33_7
# %bb.8:                                # %if.then.i.i5
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.LBB33_7:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit6
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end33:
	.size	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoD2Ev, .Lfunc_end33-_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev,"axG",@progbits,_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev,comdat
	.weak	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev # -- Begin function _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev,@function
_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev: # @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	retq
.Lfunc_end34:
	.size	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev, .Lfunc_end34-_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EED0Ev,"axG",@progbits,_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EED0Ev,comdat
	.weak	_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EED0Ev # -- Begin function _ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.p2align	4, 0x90
	.type	_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EED0Ev,@function
_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EED0Ev: # @_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.cfi_startproc
# %bb.0:                                # %entry
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end35:
	.size	_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EED0Ev, .Lfunc_end35-_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,"axG",@progbits,_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,comdat
	.weak	_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv # -- Begin function _ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.p2align	4, 0x90
	.type	_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,@function
_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv: # @_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	16(%rdi), %rbx
	testq	%rbx, %rbx
	je	.LBB36_10
# %bb.1:                                # %delete.notnull
	movq	72(%rbx), %rdi
	leaq	88(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB36_3
# %bb.2:                                # %if.then.i.i.i.i
	callq	_ZdlPv
.LBB36_3:                               # %_ZN7testing8internal12CodeLocationD2Ev.exit.i
	movq	64(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB36_5
# %bb.4:                                # %_ZNKSt14default_deleteIN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEEEclEPSB_.exit.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB36_5:                               # %_ZNSt10unique_ptrIN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEESt14default_deleteISB_EED2Ev.exit.i
	movq	$0, 64(%rbx)
	movq	32(%rbx), %rdi
	leaq	48(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB36_7
# %bb.6:                                # %if.then.i.i.i
	callq	_ZdlPv
.LBB36_7:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
	movq	(%rbx), %rdi
	leaq	16(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB36_9
# %bb.8:                                # %if.then.i.i5.i
	callq	_ZdlPv
.LBB36_9:                               # %_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoD2Ev.exit
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.LBB36_10:                              # %delete.end
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end36:
	.size	_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv, .Lfunc_end36-_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,"axG",@progbits,_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,comdat
	.weak	_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv # -- Begin function _ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.p2align	4, 0x90
	.type	_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,@function
_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv: # @_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_startproc
# %bb.0:                                # %entry
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end37:
	.size	_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv, .Lfunc_end37-_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,"axG",@progbits,_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,comdat
	.weak	_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info # -- Begin function _ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.p2align	4, 0x90
	.type	_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,@function
_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info: # @_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.cfi_startproc
# %bb.0:                                # %entry
	xorl	%eax, %eax
	retq
.Lfunc_end38:
	.size	_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info, .Lfunc_end38-_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED0Ev,"axG",@progbits,_ZN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED0Ev,comdat
	.weak	_ZN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED0Ev # -- Begin function _ZN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED0Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED0Ev,@function
_ZN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED0Ev: # @_ZN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED0Ev
	.cfi_startproc
# %bb.0:                                # %entry
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end39:
	.size	_ZN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED0Ev, .Lfunc_end39-_ZN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestE17CreateTestFactoryESt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES4_IJlllEEddEE,"axG",@progbits,_ZN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestE17CreateTestFactoryESt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES4_IJlllEEddEE,comdat
	.weak	_ZN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestE17CreateTestFactoryESt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES4_IJlllEEddEE # -- Begin function _ZN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestE17CreateTestFactoryESt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES4_IJlllEEddEE
	.p2align	4, 0x90
	.type	_ZN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestE17CreateTestFactoryESt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES4_IJlllEEddEE,@function
_ZN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestE17CreateTestFactoryESt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES4_IJlllEEddEE: # @_ZN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestE17CreateTestFactoryESt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES4_IJlllEEddEE
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$64, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %rbx
	movl	$80, %edi
	callq	_Znwm
	movq	%rax, %r15
	movq	48(%rbx), %rax
	movq	%rax, 48(%rsp)
	movups	(%rbx), %xmm0
	movups	16(%rbx), %xmm1
	movups	32(%rbx), %xmm2
	movaps	%xmm2, 32(%rsp)
	movaps	%xmm1, 16(%rsp)
	movaps	%xmm0, (%rsp)
	movq	56(%rbx), %rax
	movq	64(%rbx), %r14
	testq	%r14, %r14
	je	.LBB40_17
# %bb.1:                                # %if.then.i.i.i.i.i.i
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB40_3
# %bb.2:                                # %if.then.i.i.i.i.i.i.i.i
	lock		addl	$1, 8(%r14)
	jmp	.LBB40_4
.LBB40_17:                              # %_ZNSt11_Tuple_implILm0EJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev.exit.critedge
	movq	$_ZTVN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE+16, (%r15)
	movaps	(%rsp), %xmm0
	movaps	16(%rsp), %xmm1
	movaps	32(%rsp), %xmm2
	movups	%xmm0, 8(%r15)
	movups	%xmm1, 24(%r15)
	movups	%xmm2, 40(%r15)
	movq	48(%rsp), %rcx
	movq	%rcx, 56(%r15)
	movq	%rax, 64(%r15)
	movq	%r14, 72(%r15)
	jmp	.LBB40_18
.LBB40_3:                               # %if.else.i.i.i.i.i.i.i.i
	addl	$1, 8(%r14)
.LBB40_4:                               # %_ZNSt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES_IJlllEEddEEC2ERKS6_.exit
	movq	$_ZTVN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE+16, (%r15)
	movaps	(%rsp), %xmm0
	movaps	16(%rsp), %xmm1
	movaps	32(%rsp), %xmm2
	movups	%xmm0, 8(%r15)
	movups	%xmm1, 24(%r15)
	movups	%xmm2, 40(%r15)
	movq	48(%rsp), %rcx
	movq	%rcx, 56(%r15)
	movq	%rax, 64(%r15)
	movq	%r14, 72(%r15)
	testq	%r14, %r14
	je	.LBB40_18
# %bb.5:                                # %if.then.i.i.i.i.i.i.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB40_7
# %bb.6:                                # %if.then.i.i.i.i.i.i.i.i.i
	lock		addl	$1, 8(%r14)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	jne	.LBB40_9
.LBB40_10:                              # %if.else.i.i.i.i.i.i
	movl	8(%r14), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%r14)
	cmpl	$1, %eax
	je	.LBB40_12
	jmp	.LBB40_18
.LBB40_7:                               # %if.else.i.i.i.i.i.i.i.i.i
	addl	$1, 8(%r14)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB40_10
.LBB40_9:                               # %if.then.i.i.i.i.i.i3
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%r14)
	cmpl	$1, %eax
	jne	.LBB40_18
.LBB40_12:                              # %if.then.i.i.i.i.i
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB40_14
# %bb.13:                               # %if.then.i9.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%r14)
	cmpl	$1, %eax
	je	.LBB40_16
	jmp	.LBB40_18
.LBB40_14:                              # %if.else.i11.i.i.i.i.i
	movl	12(%r14), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%r14)
	cmpl	$1, %eax
	jne	.LBB40_18
.LBB40_16:                              # %if.then5.i.i.i.i.i
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*24(%rax)
.LBB40_18:                              # %_ZNSt11_Tuple_implILm0EJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev.exit
	movq	%r15, %rax
	addq	$64, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end40:
	.size	_ZN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestE17CreateTestFactoryESt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES4_IJlllEEddEE, .Lfunc_end40-_ZN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestE17CreateTestFactoryESt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES4_IJlllEEddEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEED2Ev,"axG",@progbits,_ZN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEED2Ev,comdat
	.weak	_ZN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEED2Ev # -- Begin function _ZN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEED2Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEED2Ev,@function
_ZN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEED2Ev: # @_ZN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	retq
.Lfunc_end41:
	.size	_ZN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEED2Ev, .Lfunc_end41-_ZN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED2Ev,"axG",@progbits,_ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED2Ev,comdat
	.weak	_ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED2Ev # -- Begin function _ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED2Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED2Ev,@function
_ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED2Ev: # @_ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	$_ZTVN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE+16, (%rdi)
	movq	72(%rdi), %rbx
	testq	%rbx, %rbx
	je	.LBB42_9
# %bb.1:                                # %if.then.i.i.i.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB42_3
# %bb.2:                                # %if.then.i.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB42_5
	jmp	.LBB42_9
.LBB42_3:                               # %if.else.i.i.i.i.i.i
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB42_9
.LBB42_5:                               # %if.then.i.i.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB42_7
# %bb.6:                                # %if.then.i9.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB42_10
.LBB42_9:                               # %_ZNSt11_Tuple_implILm0EJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev.exit
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB42_7:                               # %if.else.i11.i.i.i.i.i
	.cfi_def_cfa_offset 16
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB42_9
.LBB42_10:                              # %if.then5.i.i.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmpq	*24(%rax)                       # TAILCALL
.Lfunc_end42:
	.size	_ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED2Ev, .Lfunc_end42-_ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED0Ev,"axG",@progbits,_ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED0Ev,comdat
	.weak	_ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED0Ev # -- Begin function _ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED0Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED0Ev,@function
_ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED0Ev: # @_ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED0Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
	movq	$_ZTVN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE+16, (%rdi)
	movq	72(%rdi), %rbx
	testq	%rbx, %rbx
	je	.LBB43_10
# %bb.1:                                # %if.then.i.i.i.i.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB43_3
# %bb.2:                                # %if.then.i.i.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB43_5
	jmp	.LBB43_10
.LBB43_3:                               # %if.else.i.i.i.i.i.i.i
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB43_10
.LBB43_5:                               # %if.then.i.i.i.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB43_7
# %bb.6:                                # %if.then.i9.i.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB43_9
	jmp	.LBB43_10
.LBB43_7:                               # %if.else.i11.i.i.i.i.i.i
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB43_10
.LBB43_9:                               # %if.then5.i.i.i.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
.LBB43_10:                              # %_ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED2Ev.exit
	movq	%r14, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end43:
	.size	_ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED0Ev, .Lfunc_end43-_ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestE10CreateTestEv,"axG",@progbits,_ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestE10CreateTestEv,comdat
	.weak	_ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestE10CreateTestEv # -- Begin function _ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestE10CreateTestEv
	.p2align	4, 0x90
	.type	_ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestE10CreateTestEv,@function
_ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestE10CreateTestEv: # @_ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestE10CreateTestEv
.Lfunc_begin12:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception12
# %bb.0:                                # %entry
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	addq	$8, %rdi
	movq	%rdi, _ZN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEE10parameter_E(%rip)
	movl	$24, %edi
	callq	_Znwm
	movq	%rax, %rbx
.Ltmp275:
	movq	%rax, %rdi
	callq	_ZN7testing4TestC2Ev
.Ltmp276:
# %bb.1:                                # %invoke.cont
	movq	$_ZTV44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test+16, (%rbx)
	movq	$_ZTV44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test+88, 16(%rbx)
	movq	%rbx, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB44_2:                               # %lpad
	.cfi_def_cfa_offset 32
.Ltmp277:
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	_ZdlPv
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end44:
	.size	_ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestE10CreateTestEv, .Lfunc_end44-_ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestE10CreateTestEv
	.cfi_endproc
	.section	.gcc_except_table._ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestE10CreateTestEv,"aG",@progbits,_ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestE10CreateTestEv,comdat
	.p2align	2
GCC_except_table44:
.Lexception12:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end12-.Lcst_begin12
.Lcst_begin12:
	.uleb128 .Lfunc_begin12-.Lfunc_begin12  # >> Call Site 1 <<
	.uleb128 .Ltmp275-.Lfunc_begin12        #   Call between .Lfunc_begin12 and .Ltmp275
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp275-.Lfunc_begin12        # >> Call Site 2 <<
	.uleb128 .Ltmp276-.Ltmp275              #   Call between .Ltmp275 and .Ltmp276
	.uleb128 .Ltmp277-.Lfunc_begin12        #     jumps to .Ltmp277
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp276-.Lfunc_begin12        # >> Call Site 3 <<
	.uleb128 .Lfunc_end44-.Ltmp276          #   Call between .Ltmp276 and .Lfunc_end44
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end12:
	.p2align	2
                                        # -- End function
	.section	.text._ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E25AddTestSuiteInstantiationERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS0_14ParamGeneratorISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllESD_IJlllEEddEEEEvEPFS9_RKNS_13TestParamInfoISK_EEEPKci,"axG",@progbits,_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E25AddTestSuiteInstantiationERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS0_14ParamGeneratorISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllESD_IJlllEEddEEEEvEPFS9_RKNS_13TestParamInfoISK_EEEPKci,comdat
	.weak	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E25AddTestSuiteInstantiationERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS0_14ParamGeneratorISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllESD_IJlllEEddEEEEvEPFS9_RKNS_13TestParamInfoISK_EEEPKci # -- Begin function _ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E25AddTestSuiteInstantiationERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS0_14ParamGeneratorISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllESD_IJlllEEddEEEEvEPFS9_RKNS_13TestParamInfoISK_EEEPKci
	.p2align	4, 0x90
	.type	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E25AddTestSuiteInstantiationERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS0_14ParamGeneratorISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllESD_IJlllEEddEEEEvEPFS9_RKNS_13TestParamInfoISK_EEEPKci,@function
_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E25AddTestSuiteInstantiationERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS0_14ParamGeneratorISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllESD_IJlllEEddEEEEvEPFS9_RKNS_13TestParamInfoISK_EEEPKci: # @_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E25AddTestSuiteInstantiationERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS0_14ParamGeneratorISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllESD_IJlllEEddEEEEvEPFS9_RKNS_13TestParamInfoISK_EEEPKci
.Lfunc_begin13:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception13
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$88, %rsp
	.cfi_def_cfa_offset 144
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, %rbp
	movq	%rcx, %r15
	movq	%rdx, %r12
	movq	%rdi, %rbx
	leaq	32(%rsp), %rdi
	movq	%rdi, 16(%rsp)
	movq	(%rsi), %rcx
	movq	8(%rsi), %r14
	movq	%r14, 8(%rsp)
	cmpq	$15, %r14
	jbe	.LBB45_1
# %bb.2:                                # %if.then4.i.i.i.i.i
	leaq	16(%rsp), %rdi
	leaq	8(%rsp), %rsi
	xorl	%edx, %edx
	movq	%r15, %r13
	movl	%r9d, %r15d
	movq	%rcx, 80(%rsp)                  # 8-byte Spill
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
	movl	%r15d, %r9d
	movq	%r13, %r15
	leaq	32(%rsp), %rdi
	movq	%rax, 16(%rsp)
	movq	8(%rsp), %rcx
	movq	%rcx, 32(%rsp)
	movq	80(%rsp), %rcx                  # 8-byte Reload
	testq	%r14, %r14
	jne	.LBB45_4
	jmp	.LBB45_7
.LBB45_1:                               # %if.end.if.end6_crit_edge.i.i.i.i.i
	movq	%rdi, %rax
	testq	%r14, %r14
	je	.LBB45_7
.LBB45_4:                               # %if.end6.i.i.i.i.i
	cmpq	$1, %r14
	jne	.LBB45_6
# %bb.5:                                # %if.then.i.i.i.i.i.i.i
	movb	(%rcx), %cl
	movb	%cl, (%rax)
	jmp	.LBB45_7
.LBB45_6:                               # %if.end.i.i.i.i.i.i.i.i
	movq	%rax, %rdi
	movq	%rcx, %rsi
	movq	%r14, %rdx
	movl	%r9d, %r14d
	callq	memcpy@PLT
	movl	%r14d, %r9d
	leaq	32(%rsp), %rdi
.LBB45_7:                               # %_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E17InstantiationInfoC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS0_14ParamGeneratorISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllESE_IJlllEEddEEEEvEPFSA_RKNS_13TestParamInfoISL_EEEPKci.exit
	movq	8(%rsp), %rax
	movq	%rax, 24(%rsp)
	movq	16(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movq	%r12, 48(%rsp)
	movq	%r15, 56(%rsp)
	movq	%rbp, 64(%rsp)
	movl	%r9d, 72(%rsp)
	movq	112(%rbx), %rsi
	cmpq	120(%rbx), %rsi
	je	.LBB45_12
# %bb.8:                                # %if.then.i.i
	leaq	48(%rsp), %rax
	leaq	16(%rsi), %rcx
	movq	%rcx, (%rsi)
	movq	16(%rsp), %rdx
	cmpq	%rdi, %rdx
	je	.LBB45_9
# %bb.10:                               # %if.else.i.i.i.i.i.i
	movq	%rdx, (%rsi)
	movq	32(%rsp), %rcx
	movq	%rcx, 16(%rsi)
	jmp	.LBB45_11
.LBB45_12:                              # %if.else.i.i
	movq	%rdi, %rbp
	addq	$104, %rbx
.Ltmp278:
	leaq	16(%rsp), %rdx
	movq	%rbx, %rdi
	callq	_ZNSt6vectorIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E17InstantiationInfoESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_
.Ltmp279:
# %bb.13:                               # %invoke.cont
	movq	16(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB45_15
# %bb.14:                               # %if.then.i.i.i
	callq	_ZdlPv
	jmp	.LBB45_15
.LBB45_9:                               # %if.then.i.i.i.i.i.i
	movups	(%rdi), %xmm0
	movups	%xmm0, (%rcx)
.LBB45_11:                              # %invoke.cont.thread
	movq	24(%rsp), %rcx
	movq	%rcx, 8(%rsi)
	movq	%rdi, 16(%rsp)
	movq	$0, 24(%rsp)
	movb	$0, 32(%rsp)
	movups	(%rax), %xmm0
	movups	12(%rax), %xmm1
	movups	%xmm1, 44(%rsi)
	movups	%xmm0, 32(%rsi)
	addq	$64, 112(%rbx)
.LBB45_15:                              # %_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E17InstantiationInfoD2Ev.exit
	xorl	%eax, %eax
	addq	$88, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB45_16:                              # %lpad
	.cfi_def_cfa_offset 144
.Ltmp280:
	movq	%rax, %rbx
	movq	16(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB45_18
# %bb.17:                               # %if.then.i.i.i8
	callq	_ZdlPv
.LBB45_18:                              # %_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E17InstantiationInfoD2Ev.exit9
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end45:
	.size	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E25AddTestSuiteInstantiationERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS0_14ParamGeneratorISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllESD_IJlllEEddEEEEvEPFS9_RKNS_13TestParamInfoISK_EEEPKci, .Lfunc_end45-_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E25AddTestSuiteInstantiationERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS0_14ParamGeneratorISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllESD_IJlllEEddEEEEvEPFS9_RKNS_13TestParamInfoISK_EEEPKci
	.cfi_endproc
	.section	.gcc_except_table._ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E25AddTestSuiteInstantiationERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS0_14ParamGeneratorISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllESD_IJlllEEddEEEEvEPFS9_RKNS_13TestParamInfoISK_EEEPKci,"aG",@progbits,_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E25AddTestSuiteInstantiationERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS0_14ParamGeneratorISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllESD_IJlllEEddEEEEvEPFS9_RKNS_13TestParamInfoISK_EEEPKci,comdat
	.p2align	2
GCC_except_table45:
.Lexception13:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end13-.Lcst_begin13
.Lcst_begin13:
	.uleb128 .Lfunc_begin13-.Lfunc_begin13  # >> Call Site 1 <<
	.uleb128 .Ltmp278-.Lfunc_begin13        #   Call between .Lfunc_begin13 and .Ltmp278
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp278-.Lfunc_begin13        # >> Call Site 2 <<
	.uleb128 .Ltmp279-.Ltmp278              #   Call between .Ltmp278 and .Ltmp279
	.uleb128 .Ltmp280-.Lfunc_begin13        #     jumps to .Ltmp280
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp279-.Lfunc_begin13        # >> Call Site 3 <<
	.uleb128 .Lfunc_end45-.Ltmp279          #   Call between .Ltmp279 and .Lfunc_end45
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end13:
	.p2align	2
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4                               # -- Begin function _ZL65gtest_GemmKernelTestsMmaSyncMultiLdsTest32x32NT2x2_EvalGenerator_v
.LCPI46_0:
	.quad	64                              # 0x40
	.quad	4                               # 0x4
.LCPI46_1:
	.quad	128                             # 0x80
	.quad	2                               # 0x2
.LCPI46_2:
	.quad	256                             # 0x100
	.quad	1                               # 0x1
.LCPI46_3:
	.quad	5120                            # 0x1400
	.quad	5120                            # 0x1400
.LCPI46_4:
	.quad	5120                            # 0x1400
	.quad	6144                            # 0x1800
.LCPI46_5:
	.quad	6144                            # 0x1800
	.quad	6144                            # 0x1800
.LCPI46_6:
	.quad	7168                            # 0x1c00
	.quad	7168                            # 0x1c00
.LCPI46_7:
	.quad	7168                            # 0x1c00
	.quad	8192                            # 0x2000
.LCPI46_8:
	.quad	8192                            # 0x2000
	.quad	8192                            # 0x2000
	.text
	.p2align	4, 0x90
	.type	_ZL65gtest_GemmKernelTestsMmaSyncMultiLdsTest32x32NT2x2_EvalGenerator_v,@function
_ZL65gtest_GemmKernelTestsMmaSyncMultiLdsTest32x32NT2x2_EvalGenerator_v: # @_ZL65gtest_GemmKernelTestsMmaSyncMultiLdsTest32x32NT2x2_EvalGenerator_v
.Lfunc_begin14:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception14
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$320, %rsp                      # imm = 0x140
	.cfi_def_cfa_offset 368
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	xorps	%xmm0, %xmm0
	movaps	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
.Ltmp281:
	movq	%rsp, %rdi
	callq	_ZN15KernelGeneratorISt5tupleIJS0_IJDF16_ffSt17integral_constantIjLj32EES2_S1_IjLj8EE9col_major9row_majorS4_S4_5LdsRFS1_IjLj2EES1_IjLj1EEEEEE24MmaSyncMultiLdsGeneratorE8generateERSt6vectorISt10shared_ptrI7KernelIESaISG_EE
.Ltmp282:
# %bb.1:                                # %_ZN10TestParams7kernelsEv.exit
.Ltmp284:
	leaq	224(%rsp), %rdi
	movq	%rsp, %rsi
	callq	_ZN7testing8ValuesInISt6vectorISt10shared_ptrI7KernelIESaIS4_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS9_
.Ltmp285:
# %bb.2:                                # %invoke.cont
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 128(%rsp)
	movq	$0, 144(%rsp)
.Ltmp287:
	movl	$48, %edi
	callq	_Znwm
.Ltmp288:
# %bb.3:                                # %invoke.cont6
	movq	%rax, 128(%rsp)
	movq	%rax, %rcx
	addq	$48, %rcx
	movq	%rcx, 144(%rsp)
	movaps	.LCPI46_0(%rip), %xmm0          # xmm0 = [64,4]
	movups	%xmm0, (%rax)
	movaps	.LCPI46_1(%rip), %xmm0          # xmm0 = [128,2]
	movups	%xmm0, 16(%rax)
	movaps	.LCPI46_2(%rip), %xmm0          # xmm0 = [256,1]
	movups	%xmm0, 32(%rax)
	movq	%rcx, 136(%rsp)
.Ltmp290:
	leaq	208(%rsp), %rdi
	leaq	128(%rsp), %rsi
	callq	_ZN7testing8ValuesInISt6vectorISt4pairIllESaIS3_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS8_
.Ltmp291:
# %bb.4:                                # %invoke.cont8
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 96(%rsp)
	movq	$0, 112(%rsp)
.Ltmp293:
	movl	$96, %edi
	callq	_Znwm
.Ltmp294:
# %bb.5:                                # %invoke.cont12
	movq	%rax, 96(%rsp)
	movq	%rax, %rcx
	addq	$96, %rcx
	movq	%rcx, 112(%rsp)
	movaps	.LCPI46_3(%rip), %xmm0          # xmm0 = [5120,5120]
	movups	%xmm0, (%rax)
	movaps	.LCPI46_4(%rip), %xmm0          # xmm0 = [5120,6144]
	movups	%xmm0, 16(%rax)
	movaps	.LCPI46_5(%rip), %xmm0          # xmm0 = [6144,6144]
	movups	%xmm0, 32(%rax)
	movaps	.LCPI46_6(%rip), %xmm0          # xmm0 = [7168,7168]
	movups	%xmm0, 48(%rax)
	movaps	.LCPI46_7(%rip), %xmm0          # xmm0 = [7168,8192]
	movups	%xmm0, 64(%rax)
	movaps	.LCPI46_8(%rip), %xmm0          # xmm0 = [8192,8192]
	movups	%xmm0, 80(%rax)
	movq	%rcx, 104(%rsp)
.Ltmp296:
	leaq	192(%rsp), %rdi
	leaq	96(%rsp), %rsi
	callq	_ZN7testing8ValuesInISt6vectorISt5tupleIJlllEESaIS3_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS8_
.Ltmp297:
# %bb.6:                                # %invoke.cont14
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 64(%rsp)
	movq	$0, 80(%rsp)
.Ltmp299:
	movl	$8, %edi
	callq	_Znwm
.Ltmp300:
# %bb.7:                                # %invoke.cont18
	movq	%rax, 64(%rsp)
	movq	%rax, %rcx
	addq	$8, %rcx
	movq	%rcx, 80(%rsp)
	movabsq	$4611686018427387904, %rbx      # imm = 0x4000000000000000
	movq	%rbx, (%rax)
	movq	%rcx, 72(%rsp)
.Ltmp302:
	leaq	176(%rsp), %rdi
	leaq	64(%rsp), %rsi
	callq	_ZN7testing8ValuesInISt6vectorIdSaIdEEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS6_
.Ltmp303:
# %bb.8:                                # %invoke.cont20
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 32(%rsp)
	movq	$0, 48(%rsp)
.Ltmp305:
	movl	$8, %edi
	callq	_Znwm
.Ltmp306:
# %bb.9:                                # %invoke.cont24
	movq	%rax, 32(%rsp)
	movq	%rax, %rcx
	addq	$8, %rcx
	movq	%rcx, 48(%rsp)
	movq	%rbx, (%rax)
	movq	%rcx, 40(%rsp)
.Ltmp308:
	leaq	160(%rsp), %rdi
	leaq	32(%rsp), %rsi
	callq	_ZN7testing8ValuesInISt6vectorIdSaIdEEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS6_
.Ltmp309:
# %bb.10:                               # %invoke.cont26
	movq	160(%rsp), %rcx
	movq	168(%rsp), %rax
	movq	%rcx, 240(%rsp)
	movq	%rax, 248(%rsp)
	testq	%rax, %rax
	je	.LBB46_30
# %bb.11:                               # %if.then.i.i.i.i.i.i.i.i.i.i.i.i.i
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB46_29
# %bb.12:                               # %if.then.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i
	lock		addl	$1, 8(%rax)
	jmp	.LBB46_30
.LBB46_29:                              # %if.else.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i
	addl	$1, 8(%rax)
.LBB46_30:                              # %_ZNSt11_Tuple_implILm4EJN7testing8internal14ParamGeneratorIdEEEEC2ERKS3_.exit.i.i.i.i.i.i.i
	movq	176(%rsp), %rcx
	movq	184(%rsp), %rax
	movq	%rcx, 256(%rsp)
	movq	%rax, 264(%rsp)
	testq	%rax, %rax
	je	.LBB46_34
# %bb.31:                               # %if.then.i.i.i.i.i.i.i.i.i.i.i.i
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB46_33
# %bb.32:                               # %if.then.i.i.i.i.i.i.i.i.i.i.i.i.i.i
	lock		addl	$1, 8(%rax)
	jmp	.LBB46_34
.LBB46_33:                              # %if.else.i.i.i.i.i.i.i.i.i.i.i.i.i.i
	addl	$1, 8(%rax)
.LBB46_34:                              # %_ZNSt11_Tuple_implILm3EJN7testing8internal14ParamGeneratorIdEES3_EEC2ERKS3_S6_.exit.i.i.i.i.i.i
	movq	192(%rsp), %rcx
	movq	200(%rsp), %rax
	movq	%rcx, 272(%rsp)
	movq	%rax, 280(%rsp)
	testq	%rax, %rax
	je	.LBB46_38
# %bb.35:                               # %if.then.i.i.i.i.i.i.i.i.i.i.i
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB46_37
# %bb.36:                               # %if.then.i.i.i.i.i.i.i5.i.i.i.i.i.i
	lock		addl	$1, 8(%rax)
	jmp	.LBB46_38
.LBB46_37:                              # %if.else.i.i.i.i.i.i.i.i.i.i.i.i.i
	addl	$1, 8(%rax)
.LBB46_38:                              # %_ZNSt11_Tuple_implILm2EJN7testing8internal14ParamGeneratorISt5tupleIJlllEEEENS2_IdEES6_EEC2ERKS5_RKS6_SB_.exit.i.i.i.i.i
	movq	208(%rsp), %rcx
	movq	216(%rsp), %rax
	movq	%rcx, 288(%rsp)
	movq	%rax, 296(%rsp)
	testq	%rax, %rax
	je	.LBB46_42
# %bb.39:                               # %if.then.i.i.i.i.i.i.i.i.i.i
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB46_41
# %bb.40:                               # %if.then.i.i.i.i.i.i.i7.i.i.i.i.i
	lock		addl	$1, 8(%rax)
	jmp	.LBB46_42
.LBB46_41:                              # %if.else.i.i.i.i.i.i.i.i.i.i.i.i
	addl	$1, 8(%rax)
.LBB46_42:                              # %_ZNSt11_Tuple_implILm1EJN7testing8internal14ParamGeneratorISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEES9_EEC2ERKS5_RKS8_RKS9_SG_.exit.i.i.i.i
	movq	224(%rsp), %rcx
	movq	232(%rsp), %rax
	movq	%rcx, 304(%rsp)
	movq	%rax, 312(%rsp)
	testq	%rax, %rax
	je	.LBB46_46
# %bb.43:                               # %if.then.i.i.i.i.i.i.i.i.i
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB46_45
# %bb.44:                               # %if.then.i.i.i.i.i.i.i9.i.i.i.i
	lock		addl	$1, 8(%rax)
	jmp	.LBB46_46
.LBB46_45:                              # %if.else.i.i.i.i.i.i.i.i.i.i.i
	addl	$1, 8(%rax)
.LBB46_46:                              # %invoke.cont28
.Ltmp311:
	movl	$88, %edi
	callq	_Znwm
.Ltmp312:
# %bb.47:                               # %call.i.noexc
	movq	%rax, %rbx
	movq	$_ZTVN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE+16, (%rax)
	movq	%rax, %rdi
	addq	$8, %rdi
.Ltmp314:
	leaq	240(%rsp), %rsi
	callq	_ZNSt5tupleIJN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2ERKSD_
.Ltmp315:
# %bb.48:                               # %invoke.cont.i
	movq	%rbx, (%r14)
	movq	$0, 8(%r14)
.Ltmp317:
	movl	$24, %edi
	callq	_Znwm
.Ltmp318:
# %bb.49:                               # %invoke.cont30
	movabsq	$4294967297, %rcx               # imm = 0x100000001
	movq	%rcx, 8(%rax)
	movq	$_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE+16, (%rax)
	movq	%rbx, 16(%rax)
	movq	%rax, 8(%r14)
	movq	312(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB46_64
# %bb.50:                               # %if.then.i.i.i.i.i.i82
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB46_57
# %bb.51:                               # %if.then.i.i.i.i.i.i.i.i83
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB46_59
	jmp	.LBB46_64
.LBB46_57:                              # %if.else.i.i.i.i.i.i.i.i85
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB46_64
.LBB46_59:                              # %if.then.i.i.i.i.i.i.i92
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB46_61
# %bb.60:                               # %if.then.i9.i.i.i.i.i.i.i93
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB46_63
	jmp	.LBB46_64
.LBB46_61:                              # %if.else.i11.i.i.i.i.i.i.i95
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB46_64
.LBB46_63:                              # %if.then5.i.i.i.i.i.i.i101
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
.LBB46_64:                              # %_ZN7testing8internal22CartesianProductHolderIJNS0_14ParamGeneratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev.exit
	leaq	240(%rsp), %rdi
	callq	_ZNSt11_Tuple_implILm1EJN7testing8internal14ParamGeneratorISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEES9_EED2Ev
	movq	168(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB46_74
# %bb.65:                               # %if.then.i.i.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB46_67
# %bb.66:                               # %if.then.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB46_69
	jmp	.LBB46_74
.LBB46_67:                              # %if.else.i.i.i.i.i
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB46_74
.LBB46_69:                              # %if.then.i.i.i.i103
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB46_71
# %bb.70:                               # %if.then.i9.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB46_73
	jmp	.LBB46_74
.LBB46_71:                              # %if.else.i11.i.i.i.i
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB46_74
.LBB46_73:                              # %if.then5.i.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
.LBB46_74:                              # %_ZN7testing8internal14ParamGeneratorIdED2Ev.exit
	movq	32(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB46_76
# %bb.75:                               # %if.then.i.i.i106
	callq	_ZdlPv
.LBB46_76:                              # %_ZNSt6vectorIdSaIdEED2Ev.exit
	movq	184(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB46_86
# %bb.77:                               # %if.then.i.i.i110
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB46_79
# %bb.78:                               # %if.then.i.i.i.i.i111
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB46_81
	jmp	.LBB46_86
.LBB46_79:                              # %if.else.i.i.i.i.i113
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB46_86
.LBB46_81:                              # %if.then.i.i.i.i120
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB46_83
# %bb.82:                               # %if.then.i9.i.i.i.i121
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB46_85
	jmp	.LBB46_86
.LBB46_83:                              # %if.else.i11.i.i.i.i123
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB46_86
.LBB46_85:                              # %if.then5.i.i.i.i129
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
.LBB46_86:                              # %_ZN7testing8internal14ParamGeneratorIdED2Ev.exit130
	movq	64(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB46_88
# %bb.87:                               # %if.then.i.i.i134
	callq	_ZdlPv
.LBB46_88:                              # %_ZNSt6vectorIdSaIdEED2Ev.exit135
	movq	200(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB46_98
# %bb.89:                               # %if.then.i.i.i139
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB46_91
# %bb.90:                               # %if.then.i.i.i.i.i140
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB46_93
	jmp	.LBB46_98
.LBB46_91:                              # %if.else.i.i.i.i.i142
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB46_98
.LBB46_93:                              # %if.then.i.i.i.i149
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB46_95
# %bb.94:                               # %if.then.i9.i.i.i.i150
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB46_97
	jmp	.LBB46_98
.LBB46_95:                              # %if.else.i11.i.i.i.i152
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB46_98
.LBB46_97:                              # %if.then5.i.i.i.i158
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
.LBB46_98:                              # %_ZN7testing8internal14ParamGeneratorISt5tupleIJlllEEED2Ev.exit
	movq	96(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB46_100
# %bb.99:                               # %if.then.i.i.i162
	callq	_ZdlPv
.LBB46_100:                             # %_ZNSt6vectorISt5tupleIJlllEESaIS1_EED2Ev.exit
	movq	216(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB46_110
# %bb.101:                              # %if.then.i.i.i166
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB46_103
# %bb.102:                              # %if.then.i.i.i.i.i167
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB46_105
	jmp	.LBB46_110
.LBB46_103:                             # %if.else.i.i.i.i.i169
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB46_110
.LBB46_105:                             # %if.then.i.i.i.i176
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB46_107
# %bb.106:                              # %if.then.i9.i.i.i.i177
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB46_109
	jmp	.LBB46_110
.LBB46_107:                             # %if.else.i11.i.i.i.i179
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB46_110
.LBB46_109:                             # %if.then5.i.i.i.i185
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
.LBB46_110:                             # %_ZN7testing8internal14ParamGeneratorISt4pairIllEED2Ev.exit
	movq	128(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB46_112
# %bb.111:                              # %if.then.i.i.i189
	callq	_ZdlPv
.LBB46_112:                             # %_ZNSt6vectorISt4pairIllESaIS1_EED2Ev.exit
	movq	232(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB46_122
# %bb.113:                              # %if.then.i.i.i193
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB46_115
# %bb.114:                              # %if.then.i.i.i.i.i194
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB46_117
	jmp	.LBB46_122
.LBB46_115:                             # %if.else.i.i.i.i.i196
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB46_122
.LBB46_117:                             # %if.then.i.i.i.i203
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB46_119
# %bb.118:                              # %if.then.i9.i.i.i.i204
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB46_121
	jmp	.LBB46_122
.LBB46_119:                             # %if.else.i11.i.i.i.i206
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB46_122
.LBB46_121:                             # %if.then5.i.i.i.i212
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
.LBB46_122:                             # %_ZN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEED2Ev.exit
	movq	(%rsp), %rbx
	movq	8(%rsp), %r12
	cmpq	%r12, %rbx
	je	.LBB46_136
# %bb.123:                              # %for.body.i.i.preheader
	movl	$__pthread_key_create, %r13d
	jmp	.LBB46_124
	.p2align	4, 0x90
.LBB46_134:                             # %_ZSt8_DestroyISt10shared_ptrI7KernelIEEvPT_.exit.i.i
                                        #   in Loop: Header=BB46_124 Depth=1
	addq	$16, %rbx
	cmpq	%rbx, %r12
	je	.LBB46_135
.LBB46_124:                             # %for.body.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	8(%rbx), %r15
	testq	%r15, %r15
	je	.LBB46_134
# %bb.125:                              # %if.then.i.i.i.i.i213
                                        #   in Loop: Header=BB46_124 Depth=1
	testq	%r13, %r13
	je	.LBB46_127
# %bb.126:                              # %if.then.i.i.i.i.i.i.i214
                                        #   in Loop: Header=BB46_124 Depth=1
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%r15)
	cmpl	$1, %eax
	jne	.LBB46_134
	jmp	.LBB46_129
	.p2align	4, 0x90
.LBB46_127:                             # %if.else.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB46_124 Depth=1
	movl	8(%r15), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%r15)
	cmpl	$1, %eax
	jne	.LBB46_134
.LBB46_129:                             # %if.then.i.i.i.i.i.i215
                                        #   in Loop: Header=BB46_124 Depth=1
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*16(%rax)
	testq	%r13, %r13
	je	.LBB46_131
# %bb.130:                              # %if.then.i9.i.i.i.i.i.i
                                        #   in Loop: Header=BB46_124 Depth=1
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%r15)
	cmpl	$1, %eax
	jne	.LBB46_134
	jmp	.LBB46_133
.LBB46_131:                             # %if.else.i11.i.i.i.i.i.i
                                        #   in Loop: Header=BB46_124 Depth=1
	movl	12(%r15), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%r15)
	cmpl	$1, %eax
	jne	.LBB46_134
.LBB46_133:                             # %if.then5.i.i.i.i.i.i
                                        #   in Loop: Header=BB46_124 Depth=1
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*24(%rax)
	jmp	.LBB46_134
.LBB46_135:                             # %invoke.cont.loopexit.i
	movq	(%rsp), %rbx
.LBB46_136:                             # %invoke.cont.i217
	testq	%rbx, %rbx
	je	.LBB46_138
# %bb.137:                              # %if.then.i.i.i218
	movq	%rbx, %rdi
	callq	_ZdlPv
.LBB46_138:                             # %_ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EED2Ev.exit
	movq	%r14, %rax
	addq	$320, %rsp                      # imm = 0x140
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB46_54:                              # %lpad.i.i.i.i.i
	.cfi_def_cfa_offset 368
.Ltmp319:
	movq	%rax, %rdi
	callq	__cxa_begin_catch
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*8(%rax)
.Ltmp320:
	callq	__cxa_rethrow
.Ltmp321:
# %bb.55:                               # %unreachable.i.i.i.i.i
.LBB46_52:                              # %lpad3.i.i.i.i.i
.Ltmp322:
	movq	%rax, %r14
.Ltmp323:
	callq	__cxa_end_catch
.Ltmp324:
	jmp	.LBB46_149
.LBB46_53:                              # %terminate.lpad.i.i.i.i.i
.Ltmp325:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB46_56:                              # %lpad.i
.Ltmp316:
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	_ZdlPv
	jmp	.LBB46_149
.LBB46_148:                             # %lpad29
.Ltmp313:
	movq	%rax, %r14
.LBB46_149:                             # %lpad29.body
	leaq	240(%rsp), %rdi
	callq	_ZN7testing8internal22CartesianProductHolderIJNS0_14ParamGeneratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev
	leaq	160(%rsp), %rdi
	callq	_ZN7testing8internal14ParamGeneratorIdED2Ev
	jmp	.LBB46_150
.LBB46_147:                             # %lpad25
.Ltmp310:
	movq	%rax, %r14
.LBB46_150:                             # %ehcleanup31
	movq	32(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB46_152
# %bb.151:                              # %if.then.i.i.i222
	callq	_ZdlPv
	jmp	.LBB46_152
.LBB46_146:                             # %lpad23
.Ltmp307:
	movq	%rax, %r14
.LBB46_152:                             # %ehcleanup32
	leaq	176(%rsp), %rdi
	callq	_ZN7testing8internal14ParamGeneratorIdED2Ev
	movq	64(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB46_155
.LBB46_154:                             # %if.then.i.i.i227
	callq	_ZdlPv
	jmp	.LBB46_155
.LBB46_145:                             # %lpad19
.Ltmp304:
	movq	%rax, %r14
	movq	64(%rsp), %rdi
	testq	%rdi, %rdi
	jne	.LBB46_154
	jmp	.LBB46_155
.LBB46_144:                             # %lpad17
.Ltmp301:
	movq	%rax, %r14
.LBB46_155:                             # %ehcleanup36
	leaq	192(%rsp), %rdi
	callq	_ZN7testing8internal14ParamGeneratorISt5tupleIJlllEEED2Ev
	movq	96(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB46_158
.LBB46_157:                             # %if.then.i.i.i232
	callq	_ZdlPv
	jmp	.LBB46_158
.LBB46_143:                             # %lpad13
.Ltmp298:
	movq	%rax, %r14
	movq	96(%rsp), %rdi
	testq	%rdi, %rdi
	jne	.LBB46_157
	jmp	.LBB46_158
.LBB46_142:                             # %lpad11
.Ltmp295:
	movq	%rax, %r14
.LBB46_158:                             # %ehcleanup40
	leaq	208(%rsp), %rdi
	callq	_ZN7testing8internal14ParamGeneratorISt4pairIllEED2Ev
	movq	128(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB46_161
.LBB46_160:                             # %if.then.i.i.i237
	callq	_ZdlPv
.LBB46_161:                             # %ehcleanup44
	leaq	224(%rsp), %rdi
	callq	_ZN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEED2Ev
.LBB46_162:                             # %ehcleanup47
	movq	%rsp, %rdi
	callq	_ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EED2Ev
.LBB46_163:                             # %unwind_resume
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB46_141:                             # %lpad7
.Ltmp292:
	movq	%rax, %r14
	movq	128(%rsp), %rdi
	testq	%rdi, %rdi
	jne	.LBB46_160
	jmp	.LBB46_161
.LBB46_140:                             # %lpad5
.Ltmp289:
	movq	%rax, %r14
	jmp	.LBB46_161
.LBB46_139:                             # %lpad
.Ltmp286:
	movq	%rax, %r14
	jmp	.LBB46_162
.LBB46_13:                              # %lpad.i.i
.Ltmp283:
	movq	%rax, %r14
	movq	(%rsp), %rbx
	movq	8(%rsp), %r12
	cmpq	%r12, %rbx
	je	.LBB46_27
# %bb.14:                               # %for.body.i.i.i.preheader
	movl	$__pthread_key_create, %r13d
	jmp	.LBB46_15
	.p2align	4, 0x90
.LBB46_25:                              # %_ZSt8_DestroyISt10shared_ptrI7KernelIEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB46_15 Depth=1
	addq	$16, %rbx
	cmpq	%rbx, %r12
	je	.LBB46_26
.LBB46_15:                              # %for.body.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	8(%rbx), %r15
	testq	%r15, %r15
	je	.LBB46_25
# %bb.16:                               # %if.then.i.i.i.i.i.i
                                        #   in Loop: Header=BB46_15 Depth=1
	testq	%r13, %r13
	je	.LBB46_18
# %bb.17:                               # %if.then.i.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB46_15 Depth=1
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%r15)
	cmpl	$1, %eax
	jne	.LBB46_25
	jmp	.LBB46_20
.LBB46_18:                              # %if.else.i.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB46_15 Depth=1
	movl	8(%r15), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%r15)
	cmpl	$1, %eax
	jne	.LBB46_25
.LBB46_20:                              # %if.then.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB46_15 Depth=1
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*16(%rax)
	testq	%r13, %r13
	je	.LBB46_22
# %bb.21:                               # %if.then.i9.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB46_15 Depth=1
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%r15)
	cmpl	$1, %eax
	jne	.LBB46_25
	jmp	.LBB46_24
.LBB46_22:                              # %if.else.i11.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB46_15 Depth=1
	movl	12(%r15), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%r15)
	cmpl	$1, %eax
	jne	.LBB46_25
.LBB46_24:                              # %if.then5.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB46_15 Depth=1
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*24(%rax)
	jmp	.LBB46_25
.LBB46_26:                              # %invoke.cont.loopexit.i.i
	movq	(%rsp), %rbx
.LBB46_27:                              # %invoke.cont.i.i
	testq	%rbx, %rbx
	je	.LBB46_163
# %bb.28:                               # %if.then.i.i.i.i
	movq	%rbx, %rdi
	callq	_ZdlPv
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end46:
	.size	_ZL65gtest_GemmKernelTestsMmaSyncMultiLdsTest32x32NT2x2_EvalGenerator_v, .Lfunc_end46-_ZL65gtest_GemmKernelTestsMmaSyncMultiLdsTest32x32NT2x2_EvalGenerator_v
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table46:
.Lexception14:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase3-.Lttbaseref3
.Lttbaseref3:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end14-.Lcst_begin14
.Lcst_begin14:
	.uleb128 .Ltmp281-.Lfunc_begin14        # >> Call Site 1 <<
	.uleb128 .Ltmp282-.Ltmp281              #   Call between .Ltmp281 and .Ltmp282
	.uleb128 .Ltmp283-.Lfunc_begin14        #     jumps to .Ltmp283
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp284-.Lfunc_begin14        # >> Call Site 2 <<
	.uleb128 .Ltmp285-.Ltmp284              #   Call between .Ltmp284 and .Ltmp285
	.uleb128 .Ltmp286-.Lfunc_begin14        #     jumps to .Ltmp286
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp287-.Lfunc_begin14        # >> Call Site 3 <<
	.uleb128 .Ltmp288-.Ltmp287              #   Call between .Ltmp287 and .Ltmp288
	.uleb128 .Ltmp289-.Lfunc_begin14        #     jumps to .Ltmp289
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp290-.Lfunc_begin14        # >> Call Site 4 <<
	.uleb128 .Ltmp291-.Ltmp290              #   Call between .Ltmp290 and .Ltmp291
	.uleb128 .Ltmp292-.Lfunc_begin14        #     jumps to .Ltmp292
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp293-.Lfunc_begin14        # >> Call Site 5 <<
	.uleb128 .Ltmp294-.Ltmp293              #   Call between .Ltmp293 and .Ltmp294
	.uleb128 .Ltmp295-.Lfunc_begin14        #     jumps to .Ltmp295
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp296-.Lfunc_begin14        # >> Call Site 6 <<
	.uleb128 .Ltmp297-.Ltmp296              #   Call between .Ltmp296 and .Ltmp297
	.uleb128 .Ltmp298-.Lfunc_begin14        #     jumps to .Ltmp298
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp299-.Lfunc_begin14        # >> Call Site 7 <<
	.uleb128 .Ltmp300-.Ltmp299              #   Call between .Ltmp299 and .Ltmp300
	.uleb128 .Ltmp301-.Lfunc_begin14        #     jumps to .Ltmp301
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp302-.Lfunc_begin14        # >> Call Site 8 <<
	.uleb128 .Ltmp303-.Ltmp302              #   Call between .Ltmp302 and .Ltmp303
	.uleb128 .Ltmp304-.Lfunc_begin14        #     jumps to .Ltmp304
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp305-.Lfunc_begin14        # >> Call Site 9 <<
	.uleb128 .Ltmp306-.Ltmp305              #   Call between .Ltmp305 and .Ltmp306
	.uleb128 .Ltmp307-.Lfunc_begin14        #     jumps to .Ltmp307
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp308-.Lfunc_begin14        # >> Call Site 10 <<
	.uleb128 .Ltmp309-.Ltmp308              #   Call between .Ltmp308 and .Ltmp309
	.uleb128 .Ltmp310-.Lfunc_begin14        #     jumps to .Ltmp310
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp311-.Lfunc_begin14        # >> Call Site 11 <<
	.uleb128 .Ltmp312-.Ltmp311              #   Call between .Ltmp311 and .Ltmp312
	.uleb128 .Ltmp313-.Lfunc_begin14        #     jumps to .Ltmp313
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp314-.Lfunc_begin14        # >> Call Site 12 <<
	.uleb128 .Ltmp315-.Ltmp314              #   Call between .Ltmp314 and .Ltmp315
	.uleb128 .Ltmp316-.Lfunc_begin14        #     jumps to .Ltmp316
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp317-.Lfunc_begin14        # >> Call Site 13 <<
	.uleb128 .Ltmp318-.Ltmp317              #   Call between .Ltmp317 and .Ltmp318
	.uleb128 .Ltmp319-.Lfunc_begin14        #     jumps to .Ltmp319
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp318-.Lfunc_begin14        # >> Call Site 14 <<
	.uleb128 .Ltmp320-.Ltmp318              #   Call between .Ltmp318 and .Ltmp320
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp320-.Lfunc_begin14        # >> Call Site 15 <<
	.uleb128 .Ltmp321-.Ltmp320              #   Call between .Ltmp320 and .Ltmp321
	.uleb128 .Ltmp322-.Lfunc_begin14        #     jumps to .Ltmp322
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp323-.Lfunc_begin14        # >> Call Site 16 <<
	.uleb128 .Ltmp324-.Ltmp323              #   Call between .Ltmp323 and .Ltmp324
	.uleb128 .Ltmp325-.Lfunc_begin14        #     jumps to .Ltmp325
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp324-.Lfunc_begin14        # >> Call Site 17 <<
	.uleb128 .Lfunc_end46-.Ltmp324          #   Call between .Ltmp324 and .Lfunc_end46
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end14:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase3:
	.p2align	2
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4                               # -- Begin function _ZL68gtest_GemmKernelTestsMmaSyncMultiLdsTest32x32NT2x2_EvalGenerateName_B5cxx11RKN7testing13TestParamInfoISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE
.LCPI47_0:
	.quad	64                              # 0x40
	.quad	4                               # 0x4
.LCPI47_1:
	.quad	128                             # 0x80
	.quad	2                               # 0x2
.LCPI47_2:
	.quad	256                             # 0x100
	.quad	1                               # 0x1
.LCPI47_3:
	.quad	5120                            # 0x1400
	.quad	5120                            # 0x1400
.LCPI47_4:
	.quad	5120                            # 0x1400
	.quad	6144                            # 0x1800
.LCPI47_5:
	.quad	6144                            # 0x1800
	.quad	6144                            # 0x1800
.LCPI47_6:
	.quad	7168                            # 0x1c00
	.quad	7168                            # 0x1c00
.LCPI47_7:
	.quad	7168                            # 0x1c00
	.quad	8192                            # 0x2000
.LCPI47_8:
	.quad	8192                            # 0x2000
	.quad	8192                            # 0x2000
	.text
	.p2align	4, 0x90
	.type	_ZL68gtest_GemmKernelTestsMmaSyncMultiLdsTest32x32NT2x2_EvalGenerateName_B5cxx11RKN7testing13TestParamInfoISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE,@function
_ZL68gtest_GemmKernelTestsMmaSyncMultiLdsTest32x32NT2x2_EvalGenerateName_B5cxx11RKN7testing13TestParamInfoISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE: # @_ZL68gtest_GemmKernelTestsMmaSyncMultiLdsTest32x32NT2x2_EvalGenerateName_B5cxx11RKN7testing13TestParamInfoISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE
.Lfunc_begin15:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception15
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$392, %rsp                      # imm = 0x188
	.cfi_def_cfa_offset 448
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r14
	movq	%rdi, %r15
	callq	_ZN7testing8internal10AlwaysTrueEv
	testb	%al, %al
	jne	.LBB47_161
# %bb.1:                                # %if.then
	xorps	%xmm0, %xmm0
	movaps	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
.Ltmp326:
	movq	%rsp, %rdi
	callq	_ZN15KernelGeneratorISt5tupleIJS0_IJDF16_ffSt17integral_constantIjLj32EES2_S1_IjLj8EE9col_major9row_majorS4_S4_5LdsRFS1_IjLj2EES1_IjLj1EEEEEE24MmaSyncMultiLdsGeneratorE8generateERSt6vectorISt10shared_ptrI7KernelIESaISG_EE
.Ltmp327:
# %bb.2:                                # %_ZN10TestParams7kernelsEv.exit
.Ltmp329:
	leaq	200(%rsp), %rdi
	movq	%rsp, %rsi
	callq	_ZN7testing8ValuesInISt6vectorISt10shared_ptrI7KernelIESaIS4_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS9_
.Ltmp330:
# %bb.3:                                # %invoke.cont
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 128(%rsp)
	movq	$0, 144(%rsp)
.Ltmp332:
	movl	$48, %edi
	callq	_Znwm
.Ltmp333:
# %bb.4:                                # %invoke.cont6
	movq	%rax, 128(%rsp)
	movq	%rax, %rcx
	addq	$48, %rcx
	movq	%rcx, 144(%rsp)
	movaps	.LCPI47_0(%rip), %xmm0          # xmm0 = [64,4]
	movups	%xmm0, (%rax)
	movaps	.LCPI47_1(%rip), %xmm0          # xmm0 = [128,2]
	movups	%xmm0, 16(%rax)
	movaps	.LCPI47_2(%rip), %xmm0          # xmm0 = [256,1]
	movups	%xmm0, 32(%rax)
	movq	%rcx, 136(%rsp)
.Ltmp335:
	leaq	184(%rsp), %rdi
	leaq	128(%rsp), %rsi
	callq	_ZN7testing8ValuesInISt6vectorISt4pairIllESaIS3_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS8_
.Ltmp336:
# %bb.5:                                # %invoke.cont8
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 96(%rsp)
	movq	$0, 112(%rsp)
.Ltmp338:
	movl	$96, %edi
	callq	_Znwm
.Ltmp339:
# %bb.6:                                # %invoke.cont12
	movq	%rax, 96(%rsp)
	movq	%rax, %rcx
	addq	$96, %rcx
	movq	%rcx, 112(%rsp)
	movaps	.LCPI47_3(%rip), %xmm0          # xmm0 = [5120,5120]
	movups	%xmm0, (%rax)
	movaps	.LCPI47_4(%rip), %xmm0          # xmm0 = [5120,6144]
	movups	%xmm0, 16(%rax)
	movaps	.LCPI47_5(%rip), %xmm0          # xmm0 = [6144,6144]
	movups	%xmm0, 32(%rax)
	movaps	.LCPI47_6(%rip), %xmm0          # xmm0 = [7168,7168]
	movups	%xmm0, 48(%rax)
	movaps	.LCPI47_7(%rip), %xmm0          # xmm0 = [7168,8192]
	movups	%xmm0, 64(%rax)
	movaps	.LCPI47_8(%rip), %xmm0          # xmm0 = [8192,8192]
	movups	%xmm0, 80(%rax)
	movq	%rcx, 104(%rsp)
.Ltmp341:
	leaq	168(%rsp), %rdi
	leaq	96(%rsp), %rsi
	callq	_ZN7testing8ValuesInISt6vectorISt5tupleIJlllEESaIS3_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS8_
.Ltmp342:
# %bb.7:                                # %invoke.cont14
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 64(%rsp)
	movq	$0, 80(%rsp)
.Ltmp344:
	movl	$8, %edi
	callq	_Znwm
.Ltmp345:
# %bb.8:                                # %invoke.cont18
	movq	%rax, 64(%rsp)
	movq	%rax, %rcx
	addq	$8, %rcx
	movq	%rcx, 80(%rsp)
	movabsq	$4611686018427387904, %rbx      # imm = 0x4000000000000000
	movq	%rbx, (%rax)
	movq	%rcx, 72(%rsp)
.Ltmp347:
	leaq	152(%rsp), %rdi
	leaq	64(%rsp), %rsi
	callq	_ZN7testing8ValuesInISt6vectorIdSaIdEEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS6_
.Ltmp348:
# %bb.9:                                # %invoke.cont20
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 32(%rsp)
	movq	$0, 48(%rsp)
.Ltmp350:
	movl	$8, %edi
	callq	_Znwm
.Ltmp351:
# %bb.10:                               # %invoke.cont24
	movq	%rax, 32(%rsp)
	movq	%rax, %rcx
	addq	$8, %rcx
	movq	%rcx, 48(%rsp)
	movq	%rbx, (%rax)
	movq	%rcx, 40(%rsp)
.Ltmp353:
	leaq	296(%rsp), %rdi
	leaq	32(%rsp), %rsi
	callq	_ZN7testing8ValuesInISt6vectorIdSaIdEEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS6_
.Ltmp354:
# %bb.11:                               # %invoke.cont26
	movq	296(%rsp), %rcx
	movq	304(%rsp), %rax
	movq	%rcx, 216(%rsp)
	movq	%rax, 224(%rsp)
	testq	%rax, %rax
	je	.LBB47_31
# %bb.12:                               # %if.then.i.i.i.i.i.i.i.i.i.i.i.i.i
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB47_30
# %bb.13:                               # %if.then.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i
	lock		addl	$1, 8(%rax)
	jmp	.LBB47_31
.LBB47_30:                              # %if.else.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i
	addl	$1, 8(%rax)
.LBB47_31:                              # %_ZNSt11_Tuple_implILm4EJN7testing8internal14ParamGeneratorIdEEEEC2ERKS3_.exit.i.i.i.i.i.i.i
	movq	152(%rsp), %rcx
	movq	160(%rsp), %rax
	movq	%rcx, 232(%rsp)
	movq	%rax, 240(%rsp)
	testq	%rax, %rax
	je	.LBB47_35
# %bb.32:                               # %if.then.i.i.i.i.i.i.i.i.i.i.i.i
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB47_34
# %bb.33:                               # %if.then.i.i.i.i.i.i.i.i.i.i.i.i.i.i
	lock		addl	$1, 8(%rax)
	jmp	.LBB47_35
.LBB47_34:                              # %if.else.i.i.i.i.i.i.i.i.i.i.i.i.i.i
	addl	$1, 8(%rax)
.LBB47_35:                              # %_ZNSt11_Tuple_implILm3EJN7testing8internal14ParamGeneratorIdEES3_EEC2ERKS3_S6_.exit.i.i.i.i.i.i
	movq	168(%rsp), %rcx
	movq	176(%rsp), %rax
	movq	%rcx, 248(%rsp)
	movq	%rax, 256(%rsp)
	testq	%rax, %rax
	je	.LBB47_39
# %bb.36:                               # %if.then.i.i.i.i.i.i.i.i.i.i.i
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB47_38
# %bb.37:                               # %if.then.i.i.i.i.i.i.i5.i.i.i.i.i.i
	lock		addl	$1, 8(%rax)
	jmp	.LBB47_39
.LBB47_38:                              # %if.else.i.i.i.i.i.i.i.i.i.i.i.i.i
	addl	$1, 8(%rax)
.LBB47_39:                              # %_ZNSt11_Tuple_implILm2EJN7testing8internal14ParamGeneratorISt5tupleIJlllEEEENS2_IdEES6_EEC2ERKS5_RKS6_SB_.exit.i.i.i.i.i
	movq	184(%rsp), %rcx
	movq	192(%rsp), %rax
	movq	%rcx, 264(%rsp)
	movq	%rax, 272(%rsp)
	testq	%rax, %rax
	je	.LBB47_43
# %bb.40:                               # %if.then.i.i.i.i.i.i.i.i.i.i
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB47_42
# %bb.41:                               # %if.then.i.i.i.i.i.i.i7.i.i.i.i.i
	lock		addl	$1, 8(%rax)
	jmp	.LBB47_43
.LBB47_42:                              # %if.else.i.i.i.i.i.i.i.i.i.i.i.i
	addl	$1, 8(%rax)
.LBB47_43:                              # %_ZNSt11_Tuple_implILm1EJN7testing8internal14ParamGeneratorISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEES9_EEC2ERKS5_RKS8_RKS9_SG_.exit.i.i.i.i
	movq	200(%rsp), %rcx
	movq	208(%rsp), %rax
	movq	%rcx, 280(%rsp)
	movq	%rax, 288(%rsp)
	testq	%rax, %rax
	je	.LBB47_47
# %bb.44:                               # %if.then.i.i.i.i.i.i.i.i.i
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB47_46
# %bb.45:                               # %if.then.i.i.i.i.i.i.i9.i.i.i.i
	lock		addl	$1, 8(%rax)
	jmp	.LBB47_47
.LBB47_46:                              # %if.else.i.i.i.i.i.i.i.i.i.i.i
	addl	$1, 8(%rax)
.LBB47_47:                              # %invoke.cont28
	movq	216(%rsp), %rcx
	movq	224(%rsp), %rax
	movq	%rcx, 312(%rsp)
	movq	%rax, 320(%rsp)
	testq	%rax, %rax
	je	.LBB47_51
# %bb.48:                               # %if.then.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i79
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB47_50
# %bb.49:                               # %if.then.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i
	lock		addl	$1, 8(%rax)
	jmp	.LBB47_51
.LBB47_50:                              # %if.else.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i
	addl	$1, 8(%rax)
.LBB47_51:                              # %_ZNSt11_Tuple_implILm4EJN7testing8internal14ParamGeneratorIdEEEEC2EOS4_.exit.i.i.i.i.i.i.i.i.i
	movq	232(%rsp), %rcx
	movq	240(%rsp), %rax
	movq	%rcx, 328(%rsp)
	movq	%rax, 336(%rsp)
	testq	%rax, %rax
	je	.LBB47_55
# %bb.52:                               # %if.then.i.i.i.i.i.i.i.i2.i.i.i.i.i.i
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB47_54
# %bb.53:                               # %if.then.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i
	lock		addl	$1, 8(%rax)
	jmp	.LBB47_55
.LBB47_54:                              # %if.else.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i
	addl	$1, 8(%rax)
.LBB47_55:                              # %_ZNSt11_Tuple_implILm3EJN7testing8internal14ParamGeneratorIdEES3_EEC2EOS4_.exit.i.i.i.i.i.i.i.i
	movq	248(%rsp), %rcx
	movq	256(%rsp), %rax
	movq	%rcx, 344(%rsp)
	movq	%rax, 352(%rsp)
	testq	%rax, %rax
	je	.LBB47_59
# %bb.56:                               # %if.then.i.i.i.i.i.i.i.i.i.i.i.i.i86
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB47_58
# %bb.57:                               # %if.then.i.i.i.i.i.i.i7.i.i.i.i.i.i.i.i
	lock		addl	$1, 8(%rax)
	jmp	.LBB47_59
.LBB47_58:                              # %if.else.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i88
	addl	$1, 8(%rax)
.LBB47_59:                              # %_ZNSt11_Tuple_implILm2EJN7testing8internal14ParamGeneratorISt5tupleIJlllEEEENS2_IdEES6_EEC2EOS7_.exit.i.i.i.i.i.i.i
	movq	264(%rsp), %rcx
	movq	272(%rsp), %rax
	movq	%rcx, 360(%rsp)
	movq	%rax, 368(%rsp)
	testq	%rax, %rax
	je	.LBB47_63
# %bb.60:                               # %if.then.i.i.i.i.i.i9.i.i.i.i.i.i
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB47_62
# %bb.61:                               # %if.then.i.i.i.i.i.i.i7.i.i.i.i.i.i.i
	lock		addl	$1, 8(%rax)
	jmp	.LBB47_63
.LBB47_62:                              # %if.else.i.i.i.i.i.i.i.i11.i.i.i.i.i.i
	addl	$1, 8(%rax)
.LBB47_63:                              # %_ZNSt11_Tuple_implILm1EJN7testing8internal14ParamGeneratorISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEES9_EEC2EOSA_.exit.i.i.i.i.i.i
	movq	280(%rsp), %rax
	movq	288(%rsp), %rbx
	movq	%rax, 376(%rsp)
	movq	%rbx, 384(%rsp)
	testq	%rbx, %rbx
	je	.LBB47_76
# %bb.64:                               # %if.then.i.i.i.i.i.i.i.i.i.i.i.i95
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB47_65
# %bb.66:                               # %invoke.cont30
	lock		addl	$1, 8(%rbx)
	movq	288(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB47_76
# %bb.67:                               # %if.then.i.i.i.i.i.i102
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB47_69
.LBB47_68:                              # %if.then.i.i.i.i.i.i.i.i103
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB47_71
	jmp	.LBB47_76
.LBB47_65:                              # %invoke.cont30.thread
	addl	$1, 8(%rbx)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	jne	.LBB47_68
.LBB47_69:                              # %if.else.i.i.i.i.i.i.i.i105
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB47_76
.LBB47_71:                              # %if.then.i.i.i.i.i.i.i112
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB47_73
# %bb.72:                               # %if.then.i9.i.i.i.i.i.i.i113
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB47_75
	jmp	.LBB47_76
.LBB47_73:                              # %if.else.i11.i.i.i.i.i.i.i115
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB47_76
.LBB47_75:                              # %if.then5.i.i.i.i.i.i.i121
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
.LBB47_76:                              # %_ZN7testing8internal22CartesianProductHolderIJNS0_14ParamGeneratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev.exit
	leaq	216(%rsp), %rdi
	callq	_ZNSt11_Tuple_implILm1EJN7testing8internal14ParamGeneratorISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEES9_EED2Ev
	movq	304(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB47_86
# %bb.77:                               # %if.then.i.i.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB47_79
# %bb.78:                               # %if.then.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB47_81
	jmp	.LBB47_86
.LBB47_79:                              # %if.else.i.i.i.i.i
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB47_86
.LBB47_81:                              # %if.then.i.i.i.i123
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB47_83
# %bb.82:                               # %if.then.i9.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB47_85
	jmp	.LBB47_86
.LBB47_83:                              # %if.else.i11.i.i.i.i
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB47_86
.LBB47_85:                              # %if.then5.i.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
.LBB47_86:                              # %_ZN7testing8internal14ParamGeneratorIdED2Ev.exit
	movq	32(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB47_88
# %bb.87:                               # %if.then.i.i.i125
	callq	_ZdlPv
.LBB47_88:                              # %_ZNSt6vectorIdSaIdEED2Ev.exit
	movq	160(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB47_98
# %bb.89:                               # %if.then.i.i.i129
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB47_91
# %bb.90:                               # %if.then.i.i.i.i.i130
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB47_93
	jmp	.LBB47_98
.LBB47_91:                              # %if.else.i.i.i.i.i132
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB47_98
.LBB47_93:                              # %if.then.i.i.i.i139
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB47_95
# %bb.94:                               # %if.then.i9.i.i.i.i140
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB47_97
	jmp	.LBB47_98
.LBB47_95:                              # %if.else.i11.i.i.i.i142
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB47_98
.LBB47_97:                              # %if.then5.i.i.i.i148
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
.LBB47_98:                              # %_ZN7testing8internal14ParamGeneratorIdED2Ev.exit149
	movq	64(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB47_100
# %bb.99:                               # %if.then.i.i.i152
	callq	_ZdlPv
.LBB47_100:                             # %_ZNSt6vectorIdSaIdEED2Ev.exit153
	movq	176(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB47_110
# %bb.101:                              # %if.then.i.i.i157
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB47_103
# %bb.102:                              # %if.then.i.i.i.i.i158
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB47_105
	jmp	.LBB47_110
.LBB47_103:                             # %if.else.i.i.i.i.i160
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB47_110
.LBB47_105:                             # %if.then.i.i.i.i167
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB47_107
# %bb.106:                              # %if.then.i9.i.i.i.i168
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB47_109
	jmp	.LBB47_110
.LBB47_107:                             # %if.else.i11.i.i.i.i170
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB47_110
.LBB47_109:                             # %if.then5.i.i.i.i176
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
.LBB47_110:                             # %_ZN7testing8internal14ParamGeneratorISt5tupleIJlllEEED2Ev.exit
	movq	96(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB47_112
# %bb.111:                              # %if.then.i.i.i179
	callq	_ZdlPv
.LBB47_112:                             # %_ZNSt6vectorISt5tupleIJlllEESaIS1_EED2Ev.exit
	movq	192(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB47_122
# %bb.113:                              # %if.then.i.i.i183
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB47_115
# %bb.114:                              # %if.then.i.i.i.i.i184
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB47_117
	jmp	.LBB47_122
.LBB47_115:                             # %if.else.i.i.i.i.i186
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB47_122
.LBB47_117:                             # %if.then.i.i.i.i193
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB47_119
# %bb.118:                              # %if.then.i9.i.i.i.i194
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB47_121
	jmp	.LBB47_122
.LBB47_119:                             # %if.else.i11.i.i.i.i196
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB47_122
.LBB47_121:                             # %if.then5.i.i.i.i202
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
.LBB47_122:                             # %_ZN7testing8internal14ParamGeneratorISt4pairIllEED2Ev.exit
	movq	128(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB47_124
# %bb.123:                              # %if.then.i.i.i205
	callq	_ZdlPv
.LBB47_124:                             # %_ZNSt6vectorISt4pairIllESaIS1_EED2Ev.exit
	movq	208(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB47_134
# %bb.125:                              # %if.then.i.i.i209
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB47_127
# %bb.126:                              # %if.then.i.i.i.i.i210
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB47_129
	jmp	.LBB47_134
.LBB47_127:                             # %if.else.i.i.i.i.i212
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB47_134
.LBB47_129:                             # %if.then.i.i.i.i219
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB47_131
# %bb.130:                              # %if.then.i9.i.i.i.i220
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB47_133
	jmp	.LBB47_134
.LBB47_131:                             # %if.else.i11.i.i.i.i222
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB47_134
.LBB47_133:                             # %if.then5.i.i.i.i228
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
.LBB47_134:                             # %_ZN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEED2Ev.exit
	movq	(%rsp), %rbx
	movq	8(%rsp), %r13
	cmpq	%r13, %rbx
	je	.LBB47_148
# %bb.135:                              # %for.body.i.i.preheader
	movl	$__pthread_key_create, %ebp
	jmp	.LBB47_136
	.p2align	4, 0x90
.LBB47_146:                             # %_ZSt8_DestroyISt10shared_ptrI7KernelIEEvPT_.exit.i.i
                                        #   in Loop: Header=BB47_136 Depth=1
	addq	$16, %rbx
	cmpq	%rbx, %r13
	je	.LBB47_147
.LBB47_136:                             # %for.body.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	8(%rbx), %r12
	testq	%r12, %r12
	je	.LBB47_146
# %bb.137:                              # %if.then.i.i.i.i.i229
                                        #   in Loop: Header=BB47_136 Depth=1
	testq	%rbp, %rbp
	je	.LBB47_139
# %bb.138:                              # %if.then.i.i.i.i.i.i.i230
                                        #   in Loop: Header=BB47_136 Depth=1
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%r12)
	cmpl	$1, %eax
	jne	.LBB47_146
	jmp	.LBB47_141
	.p2align	4, 0x90
.LBB47_139:                             # %if.else.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB47_136 Depth=1
	movl	8(%r12), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%r12)
	cmpl	$1, %eax
	jne	.LBB47_146
.LBB47_141:                             # %if.then.i.i.i.i.i.i231
                                        #   in Loop: Header=BB47_136 Depth=1
	movq	(%r12), %rax
	movq	%r12, %rdi
	callq	*16(%rax)
	testq	%rbp, %rbp
	je	.LBB47_143
# %bb.142:                              # %if.then.i9.i.i.i.i.i.i
                                        #   in Loop: Header=BB47_136 Depth=1
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%r12)
	cmpl	$1, %eax
	jne	.LBB47_146
	jmp	.LBB47_145
.LBB47_143:                             # %if.else.i11.i.i.i.i.i.i
                                        #   in Loop: Header=BB47_136 Depth=1
	movl	12(%r12), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%r12)
	cmpl	$1, %eax
	jne	.LBB47_146
.LBB47_145:                             # %if.then5.i.i.i.i.i.i
                                        #   in Loop: Header=BB47_136 Depth=1
	movq	(%r12), %rax
	movq	%r12, %rdi
	callq	*24(%rax)
	jmp	.LBB47_146
.LBB47_147:                             # %invoke.cont.loopexit.i
	movq	(%rsp), %rbx
.LBB47_148:                             # %invoke.cont.i
	testq	%rbx, %rbx
	je	.LBB47_150
# %bb.149:                              # %if.then.i.i.i233
	movq	%rbx, %rdi
	callq	_ZdlPv
.LBB47_150:                             # %_ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EED2Ev.exit
	movq	384(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB47_160
# %bb.151:                              # %if.then.i.i.i.i.i.i.i234
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB47_153
# %bb.152:                              # %if.then.i.i.i.i.i.i.i.i.i235
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB47_155
	jmp	.LBB47_160
.LBB47_153:                             # %if.else.i.i.i.i.i.i.i.i.i
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB47_160
.LBB47_155:                             # %if.then.i.i.i.i.i.i.i.i236
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB47_157
# %bb.156:                              # %if.then.i9.i.i.i.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB47_159
	jmp	.LBB47_160
.LBB47_157:                             # %if.else.i11.i.i.i.i.i.i.i.i
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB47_160
.LBB47_159:                             # %if.then5.i.i.i.i.i.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
.LBB47_160:                             # %_ZNSt10_Head_baseILm0EN7testing8internal22CartesianProductHolderIJNS1_14ParamGeneratorISt10shared_ptrI7KernelIEEENS3_ISt4pairIllEEENS3_ISt5tupleIJlllEEEENS3_IdEESE_EEELb0EED2Ev.exit
	leaq	312(%rsp), %rdi
	callq	_ZNSt11_Tuple_implILm1EJN7testing8internal14ParamGeneratorISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEES9_EED2Ev
.LBB47_161:                             # %if.end
	leaq	312(%rsp), %rdi
	callq	_ZN7testing7MessageC1Ev
	movq	312(%rsp), %rdi
	addq	$16, %rdi
	movq	72(%r14), %rsi
.Ltmp356:
	callq	_ZNSo9_M_insertImEERSoT_
.Ltmp357:
# %bb.162:                              # %invoke.cont.i257
.Ltmp358:
	leaq	312(%rsp), %rsi
	movq	%r15, %rdi
	callq	_ZNK7testing7Message9GetStringB5cxx11Ev
.Ltmp359:
# %bb.163:                              # %invoke.cont1.i
	movq	312(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB47_165
# %bb.164:                              # %_ZNKSt14default_deleteINSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEEclEPS5_.exit.i.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB47_165:                             # %_ZN7testing8internal16DefaultParamNameISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_13TestParamInfoIT_EE.exit
	movq	%r15, %rax
	addq	$392, %rsp                      # imm = 0x188
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB47_174:                             # %lpad25
	.cfi_def_cfa_offset 448
.Ltmp355:
	movq	%rax, %r14
	movq	32(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB47_176
# %bb.175:                              # %if.then.i.i.i240
	callq	_ZdlPv
	jmp	.LBB47_176
.LBB47_173:                             # %lpad23
.Ltmp352:
	movq	%rax, %r14
.LBB47_176:                             # %ehcleanup32
	leaq	152(%rsp), %rdi
	callq	_ZN7testing8internal14ParamGeneratorIdED2Ev
	jmp	.LBB47_177
.LBB47_172:                             # %lpad19
.Ltmp349:
	movq	%rax, %r14
.LBB47_177:                             # %ehcleanup35
	movq	64(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB47_179
# %bb.178:                              # %if.then.i.i.i245
	callq	_ZdlPv
	jmp	.LBB47_179
.LBB47_171:                             # %lpad17
.Ltmp346:
	movq	%rax, %r14
.LBB47_179:                             # %ehcleanup36
	leaq	168(%rsp), %rdi
	callq	_ZN7testing8internal14ParamGeneratorISt5tupleIJlllEEED2Ev
	jmp	.LBB47_180
.LBB47_170:                             # %lpad13
.Ltmp343:
	movq	%rax, %r14
.LBB47_180:                             # %ehcleanup39
	movq	96(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB47_182
# %bb.181:                              # %if.then.i.i.i250
	callq	_ZdlPv
	jmp	.LBB47_182
.LBB47_169:                             # %lpad11
.Ltmp340:
	movq	%rax, %r14
.LBB47_182:                             # %ehcleanup40
	leaq	184(%rsp), %rdi
	callq	_ZN7testing8internal14ParamGeneratorISt4pairIllEED2Ev
	movq	128(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB47_185
.LBB47_184:                             # %if.then.i.i.i255
	callq	_ZdlPv
	jmp	.LBB47_185
.LBB47_168:                             # %lpad7
.Ltmp337:
	movq	%rax, %r14
	movq	128(%rsp), %rdi
	testq	%rdi, %rdi
	jne	.LBB47_184
	jmp	.LBB47_185
.LBB47_167:                             # %lpad5
.Ltmp334:
	movq	%rax, %r14
.LBB47_185:                             # %ehcleanup44
	leaq	200(%rsp), %rdi
	callq	_ZN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEED2Ev
	movq	%rsp, %rdi
	callq	_ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EED2Ev
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB47_166:                             # %lpad
.Ltmp331:
	movq	%rax, %r14
	movq	%rsp, %rdi
	callq	_ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EED2Ev
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB47_14:                              # %lpad.i.i
.Ltmp328:
	movq	%rax, %r14
	movq	(%rsp), %rbx
	movq	8(%rsp), %r12
	cmpq	%r12, %rbx
	je	.LBB47_28
# %bb.15:                               # %for.body.i.i.i.preheader
	movl	$__pthread_key_create, %r13d
	jmp	.LBB47_16
	.p2align	4, 0x90
.LBB47_26:                              # %_ZSt8_DestroyISt10shared_ptrI7KernelIEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB47_16 Depth=1
	addq	$16, %rbx
	cmpq	%rbx, %r12
	je	.LBB47_27
.LBB47_16:                              # %for.body.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	8(%rbx), %r15
	testq	%r15, %r15
	je	.LBB47_26
# %bb.17:                               # %if.then.i.i.i.i.i.i
                                        #   in Loop: Header=BB47_16 Depth=1
	testq	%r13, %r13
	je	.LBB47_19
# %bb.18:                               # %if.then.i.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB47_16 Depth=1
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%r15)
	cmpl	$1, %eax
	jne	.LBB47_26
	jmp	.LBB47_21
.LBB47_19:                              # %if.else.i.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB47_16 Depth=1
	movl	8(%r15), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%r15)
	cmpl	$1, %eax
	jne	.LBB47_26
.LBB47_21:                              # %if.then.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB47_16 Depth=1
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*16(%rax)
	testq	%r13, %r13
	je	.LBB47_23
# %bb.22:                               # %if.then.i9.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB47_16 Depth=1
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%r15)
	jmp	.LBB47_24
.LBB47_23:                              # %if.else.i11.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB47_16 Depth=1
	movl	12(%r15), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%r15)
.LBB47_24:                              # %invoke.cont2.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB47_16 Depth=1
	cmpl	$1, %eax
	jne	.LBB47_26
# %bb.25:                               # %if.then5.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB47_16 Depth=1
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*24(%rax)
	jmp	.LBB47_26
.LBB47_27:                              # %invoke.cont.loopexit.i.i
	movq	(%rsp), %rbx
.LBB47_28:                              # %invoke.cont.i.i
	testq	%rbx, %rbx
	je	.LBB47_189
# %bb.29:                               # %if.then.i.i.i.i
	movq	%rbx, %rdi
	callq	_ZdlPv
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB47_187:                             # %lpad.i
.Ltmp360:
	movq	%rax, %r14
	movq	312(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB47_189
# %bb.188:                              # %_ZNKSt14default_deleteINSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEEclEPS5_.exit.i.i8.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB47_189:                             # %unwind_resume
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end47:
	.size	_ZL68gtest_GemmKernelTestsMmaSyncMultiLdsTest32x32NT2x2_EvalGenerateName_B5cxx11RKN7testing13TestParamInfoISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE, .Lfunc_end47-_ZL68gtest_GemmKernelTestsMmaSyncMultiLdsTest32x32NT2x2_EvalGenerateName_B5cxx11RKN7testing13TestParamInfoISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table47:
.Lexception15:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end15-.Lcst_begin15
.Lcst_begin15:
	.uleb128 .Lfunc_begin15-.Lfunc_begin15  # >> Call Site 1 <<
	.uleb128 .Ltmp326-.Lfunc_begin15        #   Call between .Lfunc_begin15 and .Ltmp326
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp326-.Lfunc_begin15        # >> Call Site 2 <<
	.uleb128 .Ltmp327-.Ltmp326              #   Call between .Ltmp326 and .Ltmp327
	.uleb128 .Ltmp328-.Lfunc_begin15        #     jumps to .Ltmp328
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp329-.Lfunc_begin15        # >> Call Site 3 <<
	.uleb128 .Ltmp330-.Ltmp329              #   Call between .Ltmp329 and .Ltmp330
	.uleb128 .Ltmp331-.Lfunc_begin15        #     jumps to .Ltmp331
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp332-.Lfunc_begin15        # >> Call Site 4 <<
	.uleb128 .Ltmp333-.Ltmp332              #   Call between .Ltmp332 and .Ltmp333
	.uleb128 .Ltmp334-.Lfunc_begin15        #     jumps to .Ltmp334
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp335-.Lfunc_begin15        # >> Call Site 5 <<
	.uleb128 .Ltmp336-.Ltmp335              #   Call between .Ltmp335 and .Ltmp336
	.uleb128 .Ltmp337-.Lfunc_begin15        #     jumps to .Ltmp337
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp338-.Lfunc_begin15        # >> Call Site 6 <<
	.uleb128 .Ltmp339-.Ltmp338              #   Call between .Ltmp338 and .Ltmp339
	.uleb128 .Ltmp340-.Lfunc_begin15        #     jumps to .Ltmp340
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp341-.Lfunc_begin15        # >> Call Site 7 <<
	.uleb128 .Ltmp342-.Ltmp341              #   Call between .Ltmp341 and .Ltmp342
	.uleb128 .Ltmp343-.Lfunc_begin15        #     jumps to .Ltmp343
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp344-.Lfunc_begin15        # >> Call Site 8 <<
	.uleb128 .Ltmp345-.Ltmp344              #   Call between .Ltmp344 and .Ltmp345
	.uleb128 .Ltmp346-.Lfunc_begin15        #     jumps to .Ltmp346
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp347-.Lfunc_begin15        # >> Call Site 9 <<
	.uleb128 .Ltmp348-.Ltmp347              #   Call between .Ltmp347 and .Ltmp348
	.uleb128 .Ltmp349-.Lfunc_begin15        #     jumps to .Ltmp349
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp350-.Lfunc_begin15        # >> Call Site 10 <<
	.uleb128 .Ltmp351-.Ltmp350              #   Call between .Ltmp350 and .Ltmp351
	.uleb128 .Ltmp352-.Lfunc_begin15        #     jumps to .Ltmp352
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp353-.Lfunc_begin15        # >> Call Site 11 <<
	.uleb128 .Ltmp354-.Ltmp353              #   Call between .Ltmp353 and .Ltmp354
	.uleb128 .Ltmp355-.Lfunc_begin15        #     jumps to .Ltmp355
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp354-.Lfunc_begin15        # >> Call Site 12 <<
	.uleb128 .Ltmp356-.Ltmp354              #   Call between .Ltmp354 and .Ltmp356
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp356-.Lfunc_begin15        # >> Call Site 13 <<
	.uleb128 .Ltmp359-.Ltmp356              #   Call between .Ltmp356 and .Ltmp359
	.uleb128 .Ltmp360-.Lfunc_begin15        #     jumps to .Ltmp360
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp359-.Lfunc_begin15        # >> Call Site 14 <<
	.uleb128 .Lfunc_end47-.Ltmp359          #   Call between .Ltmp359 and .Lfunc_end47
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end15:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6vectorIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E17InstantiationInfoESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_,"axG",@progbits,_ZNSt6vectorIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E17InstantiationInfoESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_,comdat
	.weak	_ZNSt6vectorIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E17InstantiationInfoESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_ # -- Begin function _ZNSt6vectorIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E17InstantiationInfoESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E17InstantiationInfoESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_,@function
_ZNSt6vectorIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E17InstantiationInfoESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_: # @_ZNSt6vectorIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E17InstantiationInfoESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	(%rdi), %rax
	movq	%rdi, (%rsp)                    # 8-byte Spill
	movq	8(%rdi), %rcx
	subq	%rax, %rcx
	movq	%rcx, %rdi
	sarq	$6, %rdi
	testq	%rcx, %rcx
	movl	$1, %ecx
	cmovneq	%rdi, %rcx
	leaq	(%rcx,%rdi), %r13
	movq	%r13, %rbp
	shrq	$58, %rbp
	movabsq	$288230376151711743, %rbp       # imm = 0x3FFFFFFFFFFFFFF
	cmovneq	%rbp, %r13
	addq	%rdi, %rcx
	cmovbq	%rbp, %r13
	movq	%rdx, %r12
	movq	%rsi, %r14
	movq	%rsi, %rbx
	subq	%rax, %rbx
	sarq	$6, %rbx
	testq	%r13, %r13
	je	.LBB48_1
# %bb.2:                                # %_ZNSt16allocator_traitsISaIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E17InstantiationInfoEEE8allocateERS6_m.exit.i
	movq	%r13, %rdi
	shlq	$6, %rdi
	callq	_Znwm
	movq	%rax, %r15
	jmp	.LBB48_3
.LBB48_1:
	xorl	%r15d, %r15d
.LBB48_3:                               # %_ZNSt12_Vector_baseIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E17InstantiationInfoESaIS5_EE11_M_allocateEm.exit
	shlq	$6, %rbx
	leaq	(%r15,%rbx), %rcx
	addq	$16, %rcx
	movq	%rcx, (%r15,%rbx)
	movq	(%r12), %rdx
	leaq	16(%r12), %rax
	cmpq	%rax, %rdx
	je	.LBB48_4
# %bb.5:                                # %if.else.i.i.i.i
	leaq	(%r15,%rbx), %rcx
	movq	%rdx, (%rcx)
	movq	16(%r12), %rcx
	movq	%rcx, 16(%r15,%rbx)
	jmp	.LBB48_6
.LBB48_4:                               # %if.then.i.i.i.i
	movups	(%rdx), %xmm0
	movups	%xmm0, (%rcx)
.LBB48_6:                               # %invoke.cont
	movq	8(%r12), %rcx
	movq	%rcx, 8(%r15,%rbx)
	movq	%rax, (%r12)
	movq	$0, 8(%r12)
	movb	$0, 16(%r12)
	movups	32(%r12), %xmm0
	movups	44(%r12), %xmm1
	movups	%xmm1, 44(%r15,%rbx)
	movups	%xmm0, 32(%r15,%rbx)
	movq	(%rsp), %r12                    # 8-byte Reload
	movq	(%r12), %rax
	movq	%r15, %rbx
	cmpq	%r14, %rax
	je	.LBB48_13
# %bb.7:                                # %for.body.i.i.i.i.preheader
	leaq	16(%r15), %rbx
	addq	$16, %rax
	jmp	.LBB48_8
	.p2align	4, 0x90
.LBB48_10:                              # %if.else.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB48_8 Depth=1
	movq	%rcx, -16(%rbx)
	movq	(%rax), %rcx
	movq	%rcx, (%rbx)
.LBB48_11:                              # %_ZSt10_ConstructIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E17InstantiationInfoEJS5_EEvPT_DpOT0_.exit.i.i.i.i
                                        #   in Loop: Header=BB48_8 Depth=1
	movq	-8(%rax), %rcx
	movq	%rcx, -8(%rbx)
	movq	%rax, -16(%rax)
	movq	$0, -8(%rax)
	movb	$0, (%rax)
	movups	16(%rax), %xmm0
	movups	28(%rax), %xmm1
	movups	%xmm1, 28(%rbx)
	movups	%xmm0, 16(%rbx)
	addq	$64, %rbx
	leaq	64(%rax), %rcx
	addq	$48, %rax
	cmpq	%r14, %rax
	movq	%rcx, %rax
	je	.LBB48_12
.LBB48_8:                               # %for.body.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	%rbx, -16(%rbx)
	movq	-16(%rax), %rcx
	cmpq	%rax, %rcx
	jne	.LBB48_10
# %bb.9:                                # %if.then.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB48_8 Depth=1
	movups	(%rcx), %xmm0
	movups	%xmm0, (%rbx)
	jmp	.LBB48_11
.LBB48_12:                              # %invoke.cont10.loopexit
	addq	$-16, %rbx
.LBB48_13:                              # %invoke.cont10
	addq	$64, %rbx
	movq	8(%r12), %rax
	cmpq	%r14, %rax
	je	.LBB48_20
# %bb.14:                               # %for.body.i.i.i.i74.preheader
	addq	$16, %r14
	jmp	.LBB48_15
	.p2align	4, 0x90
.LBB48_17:                              # %if.else.i.i.i.i.i.i.i80
                                        #   in Loop: Header=BB48_15 Depth=1
	movq	%rcx, (%rbx)
	movq	(%r14), %rcx
	movq	%rcx, 16(%rbx)
.LBB48_18:                              # %_ZSt10_ConstructIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E17InstantiationInfoEJS5_EEvPT_DpOT0_.exit.i.i.i.i88
                                        #   in Loop: Header=BB48_15 Depth=1
	movq	-8(%r14), %rcx
	movq	%rcx, 8(%rbx)
	movq	%r14, -16(%r14)
	movq	$0, -8(%r14)
	movb	$0, (%r14)
	movups	16(%r14), %xmm0
	movups	28(%r14), %xmm1
	movups	%xmm1, 44(%rbx)
	movups	%xmm0, 32(%rbx)
	addq	$64, %rbx
	leaq	64(%r14), %rcx
	addq	$48, %r14
	cmpq	%rax, %r14
	movq	%rcx, %r14
	je	.LBB48_19
.LBB48_15:                              # %for.body.i.i.i.i74
                                        # =>This Inner Loop Header: Depth=1
	leaq	16(%rbx), %rcx
	movq	%rcx, (%rbx)
	movq	-16(%r14), %rcx
	cmpq	%r14, %rcx
	jne	.LBB48_17
# %bb.16:                               # %if.then.i.i.i.i.i.i.i76
                                        #   in Loop: Header=BB48_15 Depth=1
	movups	(%rcx), %xmm0
	movups	%xmm0, 16(%rbx)
	jmp	.LBB48_18
.LBB48_19:                              # %invoke.cont15.loopexit
	movq	8(%r12), %r14
.LBB48_20:                              # %invoke.cont15
	movq	(%r12), %rbp
	cmpq	%r14, %rbp
	jne	.LBB48_21
# %bb.25:                               # %_ZSt8_DestroyIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E17InstantiationInfoES5_EvT_S7_RSaIT0_E.exit
	testq	%r14, %r14
	je	.LBB48_27
.LBB48_26:                              # %if.then.i95
	movq	%r14, %rdi
	callq	_ZdlPv
.LBB48_27:                              # %_ZNSt12_Vector_baseIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E17InstantiationInfoESaIS5_EE13_M_deallocateEPS5_m.exit
	movq	%r15, (%r12)
	movq	%rbx, 8(%r12)
	shlq	$6, %r13
	addq	%r15, %r13
	movq	%r13, 16(%r12)
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
	.p2align	4, 0x90
.LBB48_23:                              # %_ZSt8_DestroyIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E17InstantiationInfoEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB48_21 Depth=1
	.cfi_def_cfa_offset 64
	addq	$48, %rbp
	cmpq	%r14, %rbp
	je	.LBB48_24
.LBB48_21:                              # %for.body.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rbp), %rdi
	addq	$16, %rbp
	cmpq	%rbp, %rdi
	je	.LBB48_23
# %bb.22:                               # %if.then.i.i.i.i.i.i.i94
                                        #   in Loop: Header=BB48_21 Depth=1
	callq	_ZdlPv
	jmp	.LBB48_23
.LBB48_24:                              # %_ZSt8_DestroyIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E17InstantiationInfoES5_EvT_S7_RSaIT0_E.exitthread-pre-split
	movq	(%r12), %r14
	testq	%r14, %r14
	jne	.LBB48_26
	jmp	.LBB48_27
.Lfunc_end48:
	.size	_ZNSt6vectorIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E17InstantiationInfoESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_, .Lfunc_end48-_ZNSt6vectorIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E17InstantiationInfoESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8ValuesInISt6vectorISt10shared_ptrI7KernelIESaIS4_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS9_,"axG",@progbits,_ZN7testing8ValuesInISt6vectorISt10shared_ptrI7KernelIESaIS4_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS9_,comdat
	.weak	_ZN7testing8ValuesInISt6vectorISt10shared_ptrI7KernelIESaIS4_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS9_ # -- Begin function _ZN7testing8ValuesInISt6vectorISt10shared_ptrI7KernelIESaIS4_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS9_
	.p2align	4, 0x90
	.type	_ZN7testing8ValuesInISt6vectorISt10shared_ptrI7KernelIESaIS4_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS9_,@function
_ZN7testing8ValuesInISt6vectorISt10shared_ptrI7KernelIESaIS4_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS9_: # @_ZN7testing8ValuesInISt6vectorISt10shared_ptrI7KernelIESaIS4_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS9_
.Lfunc_begin16:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception16
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r14
	movq	(%rsi), %rbx
	movq	8(%rsi), %r13
	movl	$32, %edi
	callq	_Znwm
	movq	%rax, %r15
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE+16, (%rax)
	leaq	8(%rax), %rbp
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rax)
	movq	$0, 24(%rax)
	movq	%r13, %r12
	subq	%rbx, %r12
	testq	%r12, %r12
	je	.LBB49_1
# %bb.2:                                # %cond.true.i.i.i.i
	js	.LBB49_3
# %bb.5:                                # %_ZNSt16allocator_traitsISaISt10shared_ptrI7KernelIEEE8allocateERS3_m.exit.i.i.i.i
.Ltmp361:
	movq	%r12, %rdi
	callq	_Znwm
.Ltmp362:
# %bb.6:                                # %call2.i.i.i.i.i.noexc.i
	movq	%rax, %rcx
	jmp	.LBB49_7
.LBB49_1:
	xorl	%ecx, %ecx
.LBB49_7:                               # %_ZNSt12_Vector_baseISt10shared_ptrI7KernelIESaIS2_EE11_M_allocateEm.exit.i.i.i
	sarq	$4, %r12
	movq	%rcx, 8(%r15)
	shlq	$4, %r12
	addq	%rcx, %r12
	movq	%r12, 24(%r15)
	cmpq	%r13, %rbx
	je	.LBB49_14
# %bb.8:                                # %for.body.i.i.i.i.i.i.preheader
	movl	$__pthread_key_create, %eax
	jmp	.LBB49_9
	.p2align	4, 0x90
.LBB49_12:                              # %if.else.i.i.i.i.i.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB49_9 Depth=1
	addl	$1, 8(%rdx)
.LBB49_13:                              # %_ZSt10_ConstructISt10shared_ptrI7KernelIEJRKS2_EEvPT_DpOT0_.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB49_9 Depth=1
	addq	$16, %rcx
	addq	$16, %rbx
	cmpq	%r13, %rbx
	je	.LBB49_14
.LBB49_9:                               # %for.body.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rbx), %rdx
	movq	%rdx, (%rcx)
	movq	8(%rbx), %rdx
	movq	%rdx, 8(%rcx)
	testq	%rdx, %rdx
	je	.LBB49_13
# %bb.10:                               # %if.then.i.i.i.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB49_9 Depth=1
	testq	%rax, %rax
	je	.LBB49_12
# %bb.11:                               # %if.then.i.i.i.i.i.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB49_9 Depth=1
	lock		addl	$1, 8(%rdx)
	jmp	.LBB49_13
.LBB49_14:                              # %_ZN7testing8ValuesInIN9__gnu_cxx17__normal_iteratorIPKSt10shared_ptrI7KernelIESt6vectorIS5_SaIS5_EEEEEENS_8internal14ParamGeneratorINSt15iterator_traitsIT_E10value_typeEEESF_SF_.exit
	movq	%rcx, 16(%r15)
	movq	%r15, (%r14)
	movq	$0, 8(%r14)
.Ltmp366:
	movl	$24, %edi
	callq	_Znwm
.Ltmp367:
# %bb.15:                               # %_ZN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEEC2EPNS0_23ParamGeneratorInterfaceIS4_EE.exit
	movabsq	$4294967297, %rcx               # imm = 0x100000001
	movq	%rcx, 8(%rax)
	movq	$_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE+16, (%rax)
	movq	%r15, 16(%rax)
	movq	%rax, 8(%r14)
	movq	%r14, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB49_3:                               # %if.then.i.i.i.i.i.i
	.cfi_def_cfa_offset 64
.Ltmp363:
	callq	_ZSt17__throw_bad_allocv
.Ltmp364:
# %bb.4:                                # %.noexc.i
.LBB49_22:                              # %lpad.i.i.i.i.i
.Ltmp368:
	movq	%rax, %rdi
	callq	__cxa_begin_catch
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*8(%rax)
.Ltmp369:
	callq	__cxa_rethrow
.Ltmp370:
# %bb.23:                               # %unreachable.i.i.i.i.i
.LBB49_20:                              # %lpad3.i.i.i.i.i
.Ltmp371:
	movq	%rax, %rbx
.Ltmp372:
	callq	__cxa_end_catch
.Ltmp373:
	jmp	.LBB49_19
.LBB49_21:                              # %terminate.lpad.i.i.i.i.i
.Ltmp374:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB49_16:                              # %lpad.i7
.Ltmp365:
	movq	%rax, %rbx
	movq	(%rbp), %rdi
	testq	%rdi, %rdi
	je	.LBB49_18
# %bb.17:                               # %if.then.i.i.i
	callq	_ZdlPv
.LBB49_18:                              # %lpad.i.body
	movq	%r15, %rdi
	callq	_ZdlPv
.LBB49_19:                              # %unwind_resume
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end49:
	.size	_ZN7testing8ValuesInISt6vectorISt10shared_ptrI7KernelIESaIS4_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS9_, .Lfunc_end49-_ZN7testing8ValuesInISt6vectorISt10shared_ptrI7KernelIESaIS4_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS9_
	.cfi_endproc
	.section	.gcc_except_table._ZN7testing8ValuesInISt6vectorISt10shared_ptrI7KernelIESaIS4_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS9_,"aG",@progbits,_ZN7testing8ValuesInISt6vectorISt10shared_ptrI7KernelIESaIS4_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS9_,comdat
	.p2align	2
GCC_except_table49:
.Lexception16:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase4-.Lttbaseref4
.Lttbaseref4:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end16-.Lcst_begin16
.Lcst_begin16:
	.uleb128 .Lfunc_begin16-.Lfunc_begin16  # >> Call Site 1 <<
	.uleb128 .Ltmp361-.Lfunc_begin16        #   Call between .Lfunc_begin16 and .Ltmp361
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp361-.Lfunc_begin16        # >> Call Site 2 <<
	.uleb128 .Ltmp362-.Ltmp361              #   Call between .Ltmp361 and .Ltmp362
	.uleb128 .Ltmp365-.Lfunc_begin16        #     jumps to .Ltmp365
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp366-.Lfunc_begin16        # >> Call Site 3 <<
	.uleb128 .Ltmp367-.Ltmp366              #   Call between .Ltmp366 and .Ltmp367
	.uleb128 .Ltmp368-.Lfunc_begin16        #     jumps to .Ltmp368
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp363-.Lfunc_begin16        # >> Call Site 4 <<
	.uleb128 .Ltmp364-.Ltmp363              #   Call between .Ltmp363 and .Ltmp364
	.uleb128 .Ltmp365-.Lfunc_begin16        #     jumps to .Ltmp365
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp364-.Lfunc_begin16        # >> Call Site 5 <<
	.uleb128 .Ltmp369-.Ltmp364              #   Call between .Ltmp364 and .Ltmp369
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp369-.Lfunc_begin16        # >> Call Site 6 <<
	.uleb128 .Ltmp370-.Ltmp369              #   Call between .Ltmp369 and .Ltmp370
	.uleb128 .Ltmp371-.Lfunc_begin16        #     jumps to .Ltmp371
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp372-.Lfunc_begin16        # >> Call Site 7 <<
	.uleb128 .Ltmp373-.Ltmp372              #   Call between .Ltmp372 and .Ltmp373
	.uleb128 .Ltmp374-.Lfunc_begin16        #     jumps to .Ltmp374
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp373-.Lfunc_begin16        # >> Call Site 8 <<
	.uleb128 .Lfunc_end49-.Ltmp373          #   Call between .Ltmp373 and .Lfunc_end49
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end16:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase4:
	.p2align	2
                                        # -- End function
	.section	.text._ZN7testing8ValuesInISt6vectorISt4pairIllESaIS3_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS8_,"axG",@progbits,_ZN7testing8ValuesInISt6vectorISt4pairIllESaIS3_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS8_,comdat
	.weak	_ZN7testing8ValuesInISt6vectorISt4pairIllESaIS3_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS8_ # -- Begin function _ZN7testing8ValuesInISt6vectorISt4pairIllESaIS3_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS8_
	.p2align	4, 0x90
	.type	_ZN7testing8ValuesInISt6vectorISt4pairIllESaIS3_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS8_,@function
_ZN7testing8ValuesInISt6vectorISt4pairIllESaIS3_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS8_: # @_ZN7testing8ValuesInISt6vectorISt4pairIllESaIS3_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS8_
.Lfunc_begin17:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception17
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r14
	movq	(%rsi), %rbx
	movq	8(%rsi), %r13
	movl	$32, %edi
	callq	_Znwm
	movq	%rax, %r15
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE+16, (%rax)
	leaq	8(%rax), %rbp
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rax)
	movq	$0, 24(%rax)
	movq	%r13, %r12
	subq	%rbx, %r12
	testq	%r12, %r12
	je	.LBB50_1
# %bb.2:                                # %cond.true.i.i.i.i
	js	.LBB50_3
# %bb.5:                                # %_ZNSt16allocator_traitsISaISt4pairIllEEE8allocateERS2_m.exit.i.i.i.i
.Ltmp375:
	movq	%r12, %rdi
	callq	_Znwm
.Ltmp376:
# %bb.6:                                # %call2.i.i.i.i.i.noexc.i
	movq	%rax, %rcx
	jmp	.LBB50_7
.LBB50_1:
	xorl	%ecx, %ecx
.LBB50_7:                               # %_ZNSt12_Vector_baseISt4pairIllESaIS1_EE11_M_allocateEm.exit.i.i.i
	sarq	$4, %r12
	movq	%rcx, 8(%r15)
	shlq	$4, %r12
	addq	%rcx, %r12
	movq	%r12, 24(%r15)
	cmpq	%r13, %rbx
	je	.LBB50_9
	.p2align	4, 0x90
.LBB50_8:                               # %for.body.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movups	(%rbx), %xmm0
	movups	%xmm0, (%rcx)
	addq	$16, %rbx
	addq	$16, %rcx
	cmpq	%rbx, %r13
	jne	.LBB50_8
.LBB50_9:                               # %_ZN7testing8ValuesInIN9__gnu_cxx17__normal_iteratorIPKSt4pairIllESt6vectorIS4_SaIS4_EEEEEENS_8internal14ParamGeneratorINSt15iterator_traitsIT_E10value_typeEEESE_SE_.exit
	movq	%rcx, 16(%r15)
	movq	%r15, (%r14)
	movq	$0, 8(%r14)
.Ltmp380:
	movl	$24, %edi
	callq	_Znwm
.Ltmp381:
# %bb.10:                               # %_ZN7testing8internal14ParamGeneratorISt4pairIllEEC2EPNS0_23ParamGeneratorInterfaceIS3_EE.exit
	movabsq	$4294967297, %rcx               # imm = 0x100000001
	movq	%rcx, 8(%rax)
	movq	$_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE+16, (%rax)
	movq	%r15, 16(%rax)
	movq	%rax, 8(%r14)
	movq	%r14, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB50_3:                               # %if.then.i.i.i.i.i.i
	.cfi_def_cfa_offset 64
.Ltmp377:
	callq	_ZSt17__throw_bad_allocv
.Ltmp378:
# %bb.4:                                # %.noexc.i
.LBB50_17:                              # %lpad.i.i.i.i.i
.Ltmp382:
	movq	%rax, %rdi
	callq	__cxa_begin_catch
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*8(%rax)
.Ltmp383:
	callq	__cxa_rethrow
.Ltmp384:
# %bb.18:                               # %unreachable.i.i.i.i.i
.LBB50_15:                              # %lpad3.i.i.i.i.i
.Ltmp385:
	movq	%rax, %rbx
.Ltmp386:
	callq	__cxa_end_catch
.Ltmp387:
	jmp	.LBB50_14
.LBB50_16:                              # %terminate.lpad.i.i.i.i.i
.Ltmp388:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB50_11:                              # %lpad.i7
.Ltmp379:
	movq	%rax, %rbx
	movq	(%rbp), %rdi
	testq	%rdi, %rdi
	je	.LBB50_13
# %bb.12:                               # %if.then.i.i.i
	callq	_ZdlPv
.LBB50_13:                              # %lpad.i.body
	movq	%r15, %rdi
	callq	_ZdlPv
.LBB50_14:                              # %unwind_resume
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end50:
	.size	_ZN7testing8ValuesInISt6vectorISt4pairIllESaIS3_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS8_, .Lfunc_end50-_ZN7testing8ValuesInISt6vectorISt4pairIllESaIS3_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS8_
	.cfi_endproc
	.section	.gcc_except_table._ZN7testing8ValuesInISt6vectorISt4pairIllESaIS3_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS8_,"aG",@progbits,_ZN7testing8ValuesInISt6vectorISt4pairIllESaIS3_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS8_,comdat
	.p2align	2
GCC_except_table50:
.Lexception17:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase5-.Lttbaseref5
.Lttbaseref5:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end17-.Lcst_begin17
.Lcst_begin17:
	.uleb128 .Lfunc_begin17-.Lfunc_begin17  # >> Call Site 1 <<
	.uleb128 .Ltmp375-.Lfunc_begin17        #   Call between .Lfunc_begin17 and .Ltmp375
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp375-.Lfunc_begin17        # >> Call Site 2 <<
	.uleb128 .Ltmp376-.Ltmp375              #   Call between .Ltmp375 and .Ltmp376
	.uleb128 .Ltmp379-.Lfunc_begin17        #     jumps to .Ltmp379
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp380-.Lfunc_begin17        # >> Call Site 3 <<
	.uleb128 .Ltmp381-.Ltmp380              #   Call between .Ltmp380 and .Ltmp381
	.uleb128 .Ltmp382-.Lfunc_begin17        #     jumps to .Ltmp382
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp377-.Lfunc_begin17        # >> Call Site 4 <<
	.uleb128 .Ltmp378-.Ltmp377              #   Call between .Ltmp377 and .Ltmp378
	.uleb128 .Ltmp379-.Lfunc_begin17        #     jumps to .Ltmp379
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp378-.Lfunc_begin17        # >> Call Site 5 <<
	.uleb128 .Ltmp383-.Ltmp378              #   Call between .Ltmp378 and .Ltmp383
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp383-.Lfunc_begin17        # >> Call Site 6 <<
	.uleb128 .Ltmp384-.Ltmp383              #   Call between .Ltmp383 and .Ltmp384
	.uleb128 .Ltmp385-.Lfunc_begin17        #     jumps to .Ltmp385
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp386-.Lfunc_begin17        # >> Call Site 7 <<
	.uleb128 .Ltmp387-.Ltmp386              #   Call between .Ltmp386 and .Ltmp387
	.uleb128 .Ltmp388-.Lfunc_begin17        #     jumps to .Ltmp388
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp387-.Lfunc_begin17        # >> Call Site 8 <<
	.uleb128 .Lfunc_end50-.Ltmp387          #   Call between .Ltmp387 and .Lfunc_end50
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end17:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase5:
	.p2align	2
                                        # -- End function
	.section	.text._ZN7testing8ValuesInISt6vectorISt5tupleIJlllEESaIS3_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS8_,"axG",@progbits,_ZN7testing8ValuesInISt6vectorISt5tupleIJlllEESaIS3_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS8_,comdat
	.weak	_ZN7testing8ValuesInISt6vectorISt5tupleIJlllEESaIS3_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS8_ # -- Begin function _ZN7testing8ValuesInISt6vectorISt5tupleIJlllEESaIS3_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS8_
	.p2align	4, 0x90
	.type	_ZN7testing8ValuesInISt6vectorISt5tupleIJlllEESaIS3_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS8_,@function
_ZN7testing8ValuesInISt6vectorISt5tupleIJlllEESaIS3_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS8_: # @_ZN7testing8ValuesInISt6vectorISt5tupleIJlllEESaIS3_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS8_
.Lfunc_begin18:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception18
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r14
	movq	(%rsi), %rbx
	movq	8(%rsi), %r13
	movl	$32, %edi
	callq	_Znwm
	movq	%rax, %r12
	movq	%rax, %r15
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE+16, (%rax)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rax)
	movq	$0, 24(%rax)
	movq	%r13, %rdi
	subq	%rbx, %rdi
	movq	%rdi, %rax
	sarq	$3, %rax
	movabsq	$-6148914691236517205, %rbp     # imm = 0xAAAAAAAAAAAAAAAB
	imulq	%rax, %rbp
	testq	%rdi, %rdi
	je	.LBB51_1
# %bb.2:                                # %cond.true.i.i.i.i
	addq	$8, %r12
	movabsq	$768614336404564651, %rax       # imm = 0xAAAAAAAAAAAAAAB
	cmpq	%rax, %rbp
	jae	.LBB51_3
# %bb.5:                                # %_ZNSt16allocator_traitsISaISt5tupleIJlllEEEE8allocateERS2_m.exit.i.i.i.i
.Ltmp389:
	callq	_Znwm
.Ltmp390:
# %bb.6:                                # %call2.i.i.i.i.i.noexc.i
	movq	%rax, %rcx
	jmp	.LBB51_7
.LBB51_1:
	xorl	%ecx, %ecx
.LBB51_7:                               # %_ZNSt12_Vector_baseISt5tupleIJlllEESaIS1_EE11_M_allocateEm.exit.i.i.i
	movq	%rcx, 8(%r15)
	leaq	(,%rbp,2), %rax
	addq	%rbp, %rax
	leaq	(%rcx,%rax,8), %rax
	movq	%rax, 24(%r15)
	cmpq	%r13, %rbx
	je	.LBB51_9
	.p2align	4, 0x90
.LBB51_8:                               # %for.body.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	16(%rbx), %rax
	movq	%rax, 16(%rcx)
	movups	(%rbx), %xmm0
	movups	%xmm0, (%rcx)
	addq	$24, %rbx
	addq	$24, %rcx
	cmpq	%rbx, %r13
	jne	.LBB51_8
.LBB51_9:                               # %_ZN7testing8ValuesInIN9__gnu_cxx17__normal_iteratorIPKSt5tupleIJlllEESt6vectorIS4_SaIS4_EEEEEENS_8internal14ParamGeneratorINSt15iterator_traitsIT_E10value_typeEEESE_SE_.exit
	movq	%rcx, 16(%r15)
	movq	%r15, (%r14)
	movq	$0, 8(%r14)
.Ltmp394:
	movl	$24, %edi
	callq	_Znwm
.Ltmp395:
# %bb.10:                               # %_ZN7testing8internal14ParamGeneratorISt5tupleIJlllEEEC2EPNS0_23ParamGeneratorInterfaceIS3_EE.exit
	movabsq	$4294967297, %rcx               # imm = 0x100000001
	movq	%rcx, 8(%rax)
	movq	$_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE+16, (%rax)
	movq	%r15, 16(%rax)
	movq	%rax, 8(%r14)
	movq	%r14, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB51_3:                               # %if.then.i.i.i.i.i.i
	.cfi_def_cfa_offset 64
.Ltmp391:
	callq	_ZSt17__throw_bad_allocv
.Ltmp392:
# %bb.4:                                # %.noexc.i
.LBB51_17:                              # %lpad.i.i.i.i.i
.Ltmp396:
	movq	%rax, %rdi
	callq	__cxa_begin_catch
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*8(%rax)
.Ltmp397:
	callq	__cxa_rethrow
.Ltmp398:
# %bb.18:                               # %unreachable.i.i.i.i.i
.LBB51_15:                              # %lpad3.i.i.i.i.i
.Ltmp399:
	movq	%rax, %r14
.Ltmp400:
	callq	__cxa_end_catch
.Ltmp401:
	jmp	.LBB51_14
.LBB51_16:                              # %terminate.lpad.i.i.i.i.i
.Ltmp402:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB51_11:                              # %lpad.i7
.Ltmp393:
	movq	%rax, %r14
	movq	(%r12), %rdi
	testq	%rdi, %rdi
	je	.LBB51_13
# %bb.12:                               # %if.then.i.i.i
	callq	_ZdlPv
.LBB51_13:                              # %lpad.i.body
	movq	%r15, %rdi
	callq	_ZdlPv
.LBB51_14:                              # %unwind_resume
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end51:
	.size	_ZN7testing8ValuesInISt6vectorISt5tupleIJlllEESaIS3_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS8_, .Lfunc_end51-_ZN7testing8ValuesInISt6vectorISt5tupleIJlllEESaIS3_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS8_
	.cfi_endproc
	.section	.gcc_except_table._ZN7testing8ValuesInISt6vectorISt5tupleIJlllEESaIS3_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS8_,"aG",@progbits,_ZN7testing8ValuesInISt6vectorISt5tupleIJlllEESaIS3_EEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS8_,comdat
	.p2align	2
GCC_except_table51:
.Lexception18:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase6-.Lttbaseref6
.Lttbaseref6:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end18-.Lcst_begin18
.Lcst_begin18:
	.uleb128 .Lfunc_begin18-.Lfunc_begin18  # >> Call Site 1 <<
	.uleb128 .Ltmp389-.Lfunc_begin18        #   Call between .Lfunc_begin18 and .Ltmp389
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp389-.Lfunc_begin18        # >> Call Site 2 <<
	.uleb128 .Ltmp390-.Ltmp389              #   Call between .Ltmp389 and .Ltmp390
	.uleb128 .Ltmp393-.Lfunc_begin18        #     jumps to .Ltmp393
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp394-.Lfunc_begin18        # >> Call Site 3 <<
	.uleb128 .Ltmp395-.Ltmp394              #   Call between .Ltmp394 and .Ltmp395
	.uleb128 .Ltmp396-.Lfunc_begin18        #     jumps to .Ltmp396
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp391-.Lfunc_begin18        # >> Call Site 4 <<
	.uleb128 .Ltmp392-.Ltmp391              #   Call between .Ltmp391 and .Ltmp392
	.uleb128 .Ltmp393-.Lfunc_begin18        #     jumps to .Ltmp393
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp392-.Lfunc_begin18        # >> Call Site 5 <<
	.uleb128 .Ltmp397-.Ltmp392              #   Call between .Ltmp392 and .Ltmp397
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp397-.Lfunc_begin18        # >> Call Site 6 <<
	.uleb128 .Ltmp398-.Ltmp397              #   Call between .Ltmp397 and .Ltmp398
	.uleb128 .Ltmp399-.Lfunc_begin18        #     jumps to .Ltmp399
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp400-.Lfunc_begin18        # >> Call Site 7 <<
	.uleb128 .Ltmp401-.Ltmp400              #   Call between .Ltmp400 and .Ltmp401
	.uleb128 .Ltmp402-.Lfunc_begin18        #     jumps to .Ltmp402
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp401-.Lfunc_begin18        # >> Call Site 8 <<
	.uleb128 .Lfunc_end51-.Ltmp401          #   Call between .Ltmp401 and .Lfunc_end51
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end18:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase6:
	.p2align	2
                                        # -- End function
	.section	.text._ZN7testing8ValuesInISt6vectorIdSaIdEEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS6_,"axG",@progbits,_ZN7testing8ValuesInISt6vectorIdSaIdEEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS6_,comdat
	.weak	_ZN7testing8ValuesInISt6vectorIdSaIdEEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS6_ # -- Begin function _ZN7testing8ValuesInISt6vectorIdSaIdEEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS6_
	.p2align	4, 0x90
	.type	_ZN7testing8ValuesInISt6vectorIdSaIdEEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS6_,@function
_ZN7testing8ValuesInISt6vectorIdSaIdEEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS6_: # @_ZN7testing8ValuesInISt6vectorIdSaIdEEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS6_
.Lfunc_begin19:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception19
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r14
	movq	(%rsi), %r15
	movq	8(%rsi), %r13
	movl	$32, %edi
	callq	_Znwm
	movq	%rax, %r12
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorIdEE+16, (%rax)
	leaq	8(%rax), %rbp
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rax)
	movq	$0, 24(%rax)
	subq	%r15, %r13
	movq	%r13, %rbx
	sarq	$3, %rbx
	testq	%r13, %r13
	je	.LBB52_1
# %bb.2:                                # %cond.true.i.i.i.i
	js	.LBB52_3
# %bb.5:                                # %if.then.i.i.i.i.i.i.i.i.i.i
.Ltmp403:
	movq	%r13, %rdi
	callq	_Znwm
.Ltmp404:
# %bb.6:                                # %call2.i.i.i.i.i.noexc.i
	movq	%rax, 8(%r12)
	leaq	(%rax,%rbx,8), %rbx
	movq	%rbx, 24(%r12)
	movq	%rax, %rdi
	movq	%r15, %rsi
	movq	%r13, %rdx
	callq	memcpy@PLT
	jmp	.LBB52_7
.LBB52_1:                               # %_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm.exit.thread.i.i.i
	movq	$0, 8(%r12)
	shlq	$3, %rbx
	movq	%rbx, 24(%r12)
.LBB52_7:                               # %_ZN7testing8ValuesInIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEEENS_8internal14ParamGeneratorINSt15iterator_traitsIT_E10value_typeEEESC_SC_.exit
	movq	%rbx, 16(%r12)
	movq	%r12, (%r14)
	movq	$0, 8(%r14)
.Ltmp408:
	movl	$24, %edi
	callq	_Znwm
.Ltmp409:
# %bb.8:                                # %_ZN7testing8internal14ParamGeneratorIdEC2EPNS0_23ParamGeneratorInterfaceIdEE.exit
	movabsq	$4294967297, %rcx               # imm = 0x100000001
	movq	%rcx, 8(%rax)
	movq	$_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE+16, (%rax)
	movq	%r12, 16(%rax)
	movq	%rax, 8(%r14)
	movq	%r14, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB52_3:                               # %if.then.i.i.i.i.i.i
	.cfi_def_cfa_offset 64
.Ltmp405:
	callq	_ZSt17__throw_bad_allocv
.Ltmp406:
# %bb.4:                                # %.noexc.i
.LBB52_15:                              # %lpad.i.i.i.i.i
.Ltmp410:
	movq	%rax, %rdi
	callq	__cxa_begin_catch
	movq	(%r12), %rax
	movq	%r12, %rdi
	callq	*8(%rax)
.Ltmp411:
	callq	__cxa_rethrow
.Ltmp412:
# %bb.16:                               # %unreachable.i.i.i.i.i
.LBB52_13:                              # %lpad3.i.i.i.i.i
.Ltmp413:
	movq	%rax, %rbx
.Ltmp414:
	callq	__cxa_end_catch
.Ltmp415:
	jmp	.LBB52_12
.LBB52_14:                              # %terminate.lpad.i.i.i.i.i
.Ltmp416:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB52_9:                               # %lpad.i7
.Ltmp407:
	movq	%rax, %rbx
	movq	(%rbp), %rdi
	testq	%rdi, %rdi
	je	.LBB52_11
# %bb.10:                               # %if.then.i.i.i
	callq	_ZdlPv
.LBB52_11:                              # %lpad.i.body
	movq	%r12, %rdi
	callq	_ZdlPv
.LBB52_12:                              # %unwind_resume
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end52:
	.size	_ZN7testing8ValuesInISt6vectorIdSaIdEEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS6_, .Lfunc_end52-_ZN7testing8ValuesInISt6vectorIdSaIdEEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS6_
	.cfi_endproc
	.section	.gcc_except_table._ZN7testing8ValuesInISt6vectorIdSaIdEEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS6_,"aG",@progbits,_ZN7testing8ValuesInISt6vectorIdSaIdEEEENS_8internal14ParamGeneratorINT_10value_typeEEERKS6_,comdat
	.p2align	2
GCC_except_table52:
.Lexception19:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase7-.Lttbaseref7
.Lttbaseref7:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end19-.Lcst_begin19
.Lcst_begin19:
	.uleb128 .Lfunc_begin19-.Lfunc_begin19  # >> Call Site 1 <<
	.uleb128 .Ltmp403-.Lfunc_begin19        #   Call between .Lfunc_begin19 and .Ltmp403
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp403-.Lfunc_begin19        # >> Call Site 2 <<
	.uleb128 .Ltmp404-.Ltmp403              #   Call between .Ltmp403 and .Ltmp404
	.uleb128 .Ltmp407-.Lfunc_begin19        #     jumps to .Ltmp407
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp404-.Lfunc_begin19        # >> Call Site 3 <<
	.uleb128 .Ltmp408-.Ltmp404              #   Call between .Ltmp404 and .Ltmp408
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp408-.Lfunc_begin19        # >> Call Site 4 <<
	.uleb128 .Ltmp409-.Ltmp408              #   Call between .Ltmp408 and .Ltmp409
	.uleb128 .Ltmp410-.Lfunc_begin19        #     jumps to .Ltmp410
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp405-.Lfunc_begin19        # >> Call Site 5 <<
	.uleb128 .Ltmp406-.Ltmp405              #   Call between .Ltmp405 and .Ltmp406
	.uleb128 .Ltmp407-.Lfunc_begin19        #     jumps to .Ltmp407
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp406-.Lfunc_begin19        # >> Call Site 6 <<
	.uleb128 .Ltmp411-.Ltmp406              #   Call between .Ltmp406 and .Ltmp411
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp411-.Lfunc_begin19        # >> Call Site 7 <<
	.uleb128 .Ltmp412-.Ltmp411              #   Call between .Ltmp411 and .Ltmp412
	.uleb128 .Ltmp413-.Lfunc_begin19        #     jumps to .Ltmp413
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp414-.Lfunc_begin19        # >> Call Site 8 <<
	.uleb128 .Ltmp415-.Ltmp414              #   Call between .Ltmp414 and .Ltmp415
	.uleb128 .Ltmp416-.Lfunc_begin19        #     jumps to .Ltmp416
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp415-.Lfunc_begin19        # >> Call Site 9 <<
	.uleb128 .Lfunc_end52-.Ltmp415          #   Call between .Ltmp415 and .Lfunc_end52
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end19:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase7:
	.p2align	2
                                        # -- End function
	.section	.text._ZN7testing8internal22CartesianProductHolderIJNS0_14ParamGeneratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev,"axG",@progbits,_ZN7testing8internal22CartesianProductHolderIJNS0_14ParamGeneratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev,comdat
	.weak	_ZN7testing8internal22CartesianProductHolderIJNS0_14ParamGeneratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev # -- Begin function _ZN7testing8internal22CartesianProductHolderIJNS0_14ParamGeneratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal22CartesianProductHolderIJNS0_14ParamGeneratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev,@function
_ZN7testing8internal22CartesianProductHolderIJNS0_14ParamGeneratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev: # @_ZN7testing8internal22CartesianProductHolderIJNS0_14ParamGeneratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
	movq	72(%rdi), %rbx
	testq	%rbx, %rbx
	je	.LBB53_10
# %bb.1:                                # %if.then.i.i.i.i.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB53_3
# %bb.2:                                # %if.then.i.i.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB53_5
	jmp	.LBB53_10
.LBB53_3:                               # %if.else.i.i.i.i.i.i.i
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB53_10
.LBB53_5:                               # %if.then.i.i.i.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB53_7
# %bb.6:                                # %if.then.i9.i.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB53_9
	jmp	.LBB53_10
.LBB53_7:                               # %if.else.i11.i.i.i.i.i.i
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB53_10
.LBB53_9:                               # %if.then5.i.i.i.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
.LBB53_10:                              # %_ZNSt11_Tuple_implILm0EJN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev.exit
	movq	%r14, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	_ZNSt11_Tuple_implILm1EJN7testing8internal14ParamGeneratorISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEES9_EED2Ev # TAILCALL
.Lfunc_end53:
	.size	_ZN7testing8internal22CartesianProductHolderIJNS0_14ParamGeneratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev, .Lfunc_end53-_ZN7testing8internal22CartesianProductHolderIJNS0_14ParamGeneratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal14ParamGeneratorIdED2Ev,"axG",@progbits,_ZN7testing8internal14ParamGeneratorIdED2Ev,comdat
	.weak	_ZN7testing8internal14ParamGeneratorIdED2Ev # -- Begin function _ZN7testing8internal14ParamGeneratorIdED2Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal14ParamGeneratorIdED2Ev,@function
_ZN7testing8internal14ParamGeneratorIdED2Ev: # @_ZN7testing8internal14ParamGeneratorIdED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	8(%rdi), %rbx
	testq	%rbx, %rbx
	je	.LBB54_9
# %bb.1:                                # %if.then.i.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB54_3
# %bb.2:                                # %if.then.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB54_5
	jmp	.LBB54_9
.LBB54_3:                               # %if.else.i.i.i.i
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB54_9
.LBB54_5:                               # %if.then.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB54_7
# %bb.6:                                # %if.then.i9.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB54_10
.LBB54_9:                               # %_ZNSt12__shared_ptrIKN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EED2Ev.exit
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB54_7:                               # %if.else.i11.i.i.i
	.cfi_def_cfa_offset 16
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB54_9
.LBB54_10:                              # %if.then5.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmpq	*24(%rax)                       # TAILCALL
.Lfunc_end54:
	.size	_ZN7testing8internal14ParamGeneratorIdED2Ev, .Lfunc_end54-_ZN7testing8internal14ParamGeneratorIdED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal14ParamGeneratorISt5tupleIJlllEEED2Ev,"axG",@progbits,_ZN7testing8internal14ParamGeneratorISt5tupleIJlllEEED2Ev,comdat
	.weak	_ZN7testing8internal14ParamGeneratorISt5tupleIJlllEEED2Ev # -- Begin function _ZN7testing8internal14ParamGeneratorISt5tupleIJlllEEED2Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal14ParamGeneratorISt5tupleIJlllEEED2Ev,@function
_ZN7testing8internal14ParamGeneratorISt5tupleIJlllEEED2Ev: # @_ZN7testing8internal14ParamGeneratorISt5tupleIJlllEEED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	8(%rdi), %rbx
	testq	%rbx, %rbx
	je	.LBB55_9
# %bb.1:                                # %if.then.i.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB55_3
# %bb.2:                                # %if.then.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB55_5
	jmp	.LBB55_9
.LBB55_3:                               # %if.else.i.i.i.i
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB55_9
.LBB55_5:                               # %if.then.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB55_7
# %bb.6:                                # %if.then.i9.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB55_10
.LBB55_9:                               # %_ZNSt12__shared_ptrIKN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EED2Ev.exit
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB55_7:                               # %if.else.i11.i.i.i
	.cfi_def_cfa_offset 16
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB55_9
.LBB55_10:                              # %if.then5.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmpq	*24(%rax)                       # TAILCALL
.Lfunc_end55:
	.size	_ZN7testing8internal14ParamGeneratorISt5tupleIJlllEEED2Ev, .Lfunc_end55-_ZN7testing8internal14ParamGeneratorISt5tupleIJlllEEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal14ParamGeneratorISt4pairIllEED2Ev,"axG",@progbits,_ZN7testing8internal14ParamGeneratorISt4pairIllEED2Ev,comdat
	.weak	_ZN7testing8internal14ParamGeneratorISt4pairIllEED2Ev # -- Begin function _ZN7testing8internal14ParamGeneratorISt4pairIllEED2Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal14ParamGeneratorISt4pairIllEED2Ev,@function
_ZN7testing8internal14ParamGeneratorISt4pairIllEED2Ev: # @_ZN7testing8internal14ParamGeneratorISt4pairIllEED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	8(%rdi), %rbx
	testq	%rbx, %rbx
	je	.LBB56_9
# %bb.1:                                # %if.then.i.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB56_3
# %bb.2:                                # %if.then.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB56_5
	jmp	.LBB56_9
.LBB56_3:                               # %if.else.i.i.i.i
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB56_9
.LBB56_5:                               # %if.then.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB56_7
# %bb.6:                                # %if.then.i9.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB56_10
.LBB56_9:                               # %_ZNSt12__shared_ptrIKN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EED2Ev.exit
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB56_7:                               # %if.else.i11.i.i.i
	.cfi_def_cfa_offset 16
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB56_9
.LBB56_10:                              # %if.then5.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmpq	*24(%rax)                       # TAILCALL
.Lfunc_end56:
	.size	_ZN7testing8internal14ParamGeneratorISt4pairIllEED2Ev, .Lfunc_end56-_ZN7testing8internal14ParamGeneratorISt4pairIllEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEED2Ev,"axG",@progbits,_ZN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEED2Ev,comdat
	.weak	_ZN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEED2Ev # -- Begin function _ZN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEED2Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEED2Ev,@function
_ZN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEED2Ev: # @_ZN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	8(%rdi), %rbx
	testq	%rbx, %rbx
	je	.LBB57_9
# %bb.1:                                # %if.then.i.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB57_3
# %bb.2:                                # %if.then.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB57_5
	jmp	.LBB57_9
.LBB57_3:                               # %if.else.i.i.i.i
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB57_9
.LBB57_5:                               # %if.then.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB57_7
# %bb.6:                                # %if.then.i9.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB57_10
.LBB57_9:                               # %_ZNSt12__shared_ptrIKN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EED2Ev.exit
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB57_7:                               # %if.else.i11.i.i.i
	.cfi_def_cfa_offset 16
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB57_9
.LBB57_10:                              # %if.then5.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmpq	*24(%rax)                       # TAILCALL
.Lfunc_end57:
	.size	_ZN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEED2Ev, .Lfunc_end57-_ZN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EED2Ev,"axG",@progbits,_ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EED2Ev,comdat
	.weak	_ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EED2Ev # -- Begin function _ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EED2Ev,@function
_ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EED2Ev: # @_ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	(%rdi), %rbx
	movq	8(%rdi), %r12
	cmpq	%r12, %rbx
	je	.LBB58_14
# %bb.1:                                # %for.body.i.preheader
	movq	%rdi, %r14
	movl	$__pthread_key_create, %r13d
	jmp	.LBB58_2
	.p2align	4, 0x90
.LBB58_12:                              # %_ZSt8_DestroyISt10shared_ptrI7KernelIEEvPT_.exit.i
                                        #   in Loop: Header=BB58_2 Depth=1
	addq	$16, %rbx
	cmpq	%rbx, %r12
	je	.LBB58_13
.LBB58_2:                               # %for.body.i
                                        # =>This Inner Loop Header: Depth=1
	movq	8(%rbx), %r15
	testq	%r15, %r15
	je	.LBB58_12
# %bb.3:                                # %if.then.i.i.i.i
                                        #   in Loop: Header=BB58_2 Depth=1
	testq	%r13, %r13
	je	.LBB58_5
# %bb.4:                                # %if.then.i.i.i.i.i.i
                                        #   in Loop: Header=BB58_2 Depth=1
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%r15)
	cmpl	$1, %eax
	jne	.LBB58_12
	jmp	.LBB58_7
	.p2align	4, 0x90
.LBB58_5:                               # %if.else.i.i.i.i.i.i
                                        #   in Loop: Header=BB58_2 Depth=1
	movl	8(%r15), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%r15)
	cmpl	$1, %eax
	jne	.LBB58_12
.LBB58_7:                               # %if.then.i.i.i.i.i
                                        #   in Loop: Header=BB58_2 Depth=1
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*16(%rax)
	testq	%r13, %r13
	je	.LBB58_9
# %bb.8:                                # %if.then.i9.i.i.i.i.i
                                        #   in Loop: Header=BB58_2 Depth=1
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%r15)
	cmpl	$1, %eax
	jne	.LBB58_12
	jmp	.LBB58_11
.LBB58_9:                               # %if.else.i11.i.i.i.i.i
                                        #   in Loop: Header=BB58_2 Depth=1
	movl	12(%r15), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%r15)
	cmpl	$1, %eax
	jne	.LBB58_12
.LBB58_11:                              # %if.then5.i.i.i.i.i
                                        #   in Loop: Header=BB58_2 Depth=1
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*24(%rax)
	jmp	.LBB58_12
.LBB58_13:                              # %invoke.cont.loopexit
	movq	(%r14), %rbx
.LBB58_14:                              # %invoke.cont
	testq	%rbx, %rbx
	je	.LBB58_15
# %bb.16:                               # %if.then.i.i
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.LBB58_15:                              # %_ZNSt12_Vector_baseISt10shared_ptrI7KernelIESaIS2_EED2Ev.exit
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end58:
	.size	_ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EED2Ev, .Lfunc_end58-_ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11_Tuple_implILm1EJN7testing8internal14ParamGeneratorISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEES9_EED2Ev,"axG",@progbits,_ZNSt11_Tuple_implILm1EJN7testing8internal14ParamGeneratorISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEES9_EED2Ev,comdat
	.weak	_ZNSt11_Tuple_implILm1EJN7testing8internal14ParamGeneratorISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEES9_EED2Ev # -- Begin function _ZNSt11_Tuple_implILm1EJN7testing8internal14ParamGeneratorISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEES9_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm1EJN7testing8internal14ParamGeneratorISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEES9_EED2Ev,@function
_ZNSt11_Tuple_implILm1EJN7testing8internal14ParamGeneratorISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEES9_EED2Ev: # @_ZNSt11_Tuple_implILm1EJN7testing8internal14ParamGeneratorISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEES9_EED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
	movq	56(%rdi), %rbx
	testq	%rbx, %rbx
	je	.LBB59_10
# %bb.1:                                # %if.then.i.i.i.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB59_3
# %bb.2:                                # %if.then.i.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB59_5
	jmp	.LBB59_10
.LBB59_3:                               # %if.else.i.i.i.i.i.i
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB59_10
.LBB59_5:                               # %if.then.i.i.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB59_7
# %bb.6:                                # %if.then.i9.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB59_9
	jmp	.LBB59_10
.LBB59_7:                               # %if.else.i11.i.i.i.i.i
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB59_10
.LBB59_9:                               # %if.then5.i.i.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
.LBB59_10:                              # %_ZNSt10_Head_baseILm1EN7testing8internal14ParamGeneratorISt4pairIllEEELb0EED2Ev.exit
	movq	40(%r14), %rbx
	testq	%rbx, %rbx
	je	.LBB59_20
# %bb.11:                               # %if.then.i.i.i.i.i2
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB59_13
# %bb.12:                               # %if.then.i.i.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB59_15
	jmp	.LBB59_20
.LBB59_13:                              # %if.else.i.i.i.i.i.i.i
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB59_20
.LBB59_15:                              # %if.then.i.i.i.i.i.i3
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB59_17
# %bb.16:                               # %if.then.i9.i.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB59_19
	jmp	.LBB59_20
.LBB59_17:                              # %if.else.i11.i.i.i.i.i.i
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB59_20
.LBB59_19:                              # %if.then5.i.i.i.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
.LBB59_20:                              # %_ZNSt11_Tuple_implILm2EJN7testing8internal14ParamGeneratorISt5tupleIJlllEEEENS2_IdEES6_EED2Ev.exit
	movq	24(%r14), %rbx
	testq	%rbx, %rbx
	je	.LBB59_30
# %bb.21:                               # %if.then.i.i.i.i.i7
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB59_23
# %bb.22:                               # %if.then.i.i.i.i.i.i.i8
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB59_25
	jmp	.LBB59_30
.LBB59_23:                              # %if.else.i.i.i.i.i.i.i10
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB59_30
.LBB59_25:                              # %if.then.i.i.i.i.i.i17
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB59_27
# %bb.26:                               # %if.then.i9.i.i.i.i.i.i18
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB59_29
	jmp	.LBB59_30
.LBB59_27:                              # %if.else.i11.i.i.i.i.i.i20
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB59_30
.LBB59_29:                              # %if.then5.i.i.i.i.i.i26
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
.LBB59_30:                              # %_ZNSt10_Head_baseILm3EN7testing8internal14ParamGeneratorIdEELb0EED2Ev.exit.i
	movq	8(%r14), %rbx
	testq	%rbx, %rbx
	je	.LBB59_39
# %bb.31:                               # %if.then.i.i.i.i5.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB59_33
# %bb.32:                               # %if.then.i.i.i.i.i.i6.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB59_35
	jmp	.LBB59_39
.LBB59_33:                              # %if.else.i.i.i.i.i.i8.i
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB59_39
.LBB59_35:                              # %if.then.i.i.i.i.i15.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB59_37
# %bb.36:                               # %if.then.i9.i.i.i.i.i16.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB59_40
.LBB59_39:                              # %_ZNSt11_Tuple_implILm3EJN7testing8internal14ParamGeneratorIdEES3_EED2Ev.exit
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB59_37:                              # %if.else.i11.i.i.i.i.i18.i
	.cfi_def_cfa_offset 32
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB59_39
.LBB59_40:                              # %if.then5.i.i.i.i.i24.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmpq	*24(%rax)                       # TAILCALL
.Lfunc_end59:
	.size	_ZNSt11_Tuple_implILm1EJN7testing8internal14ParamGeneratorISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEES9_EED2Ev, .Lfunc_end59-_ZNSt11_Tuple_implILm1EJN7testing8internal14ParamGeneratorISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEES9_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEED2Ev,"axG",@progbits,_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEED2Ev,comdat
	.weak	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEED2Ev # -- Begin function _ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEED2Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEED2Ev,@function
_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEED2Ev: # @_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE+16, (%rdi)
	movq	8(%rdi), %rbx
	movq	16(%rdi), %r12
	cmpq	%r12, %rbx
	je	.LBB60_14
# %bb.1:                                # %for.body.i.i.preheader
	movq	%rdi, %r14
	movl	$__pthread_key_create, %r13d
	jmp	.LBB60_2
	.p2align	4, 0x90
.LBB60_12:                              # %_ZSt8_DestroyISt10shared_ptrI7KernelIEEvPT_.exit.i.i
                                        #   in Loop: Header=BB60_2 Depth=1
	addq	$16, %rbx
	cmpq	%rbx, %r12
	je	.LBB60_13
.LBB60_2:                               # %for.body.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	8(%rbx), %r15
	testq	%r15, %r15
	je	.LBB60_12
# %bb.3:                                # %if.then.i.i.i.i.i
                                        #   in Loop: Header=BB60_2 Depth=1
	testq	%r13, %r13
	je	.LBB60_5
# %bb.4:                                # %if.then.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB60_2 Depth=1
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%r15)
	cmpl	$1, %eax
	jne	.LBB60_12
	jmp	.LBB60_7
	.p2align	4, 0x90
.LBB60_5:                               # %if.else.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB60_2 Depth=1
	movl	8(%r15), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%r15)
	cmpl	$1, %eax
	jne	.LBB60_12
.LBB60_7:                               # %if.then.i.i.i.i.i.i
                                        #   in Loop: Header=BB60_2 Depth=1
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*16(%rax)
	testq	%r13, %r13
	je	.LBB60_9
# %bb.8:                                # %if.then.i9.i.i.i.i.i.i
                                        #   in Loop: Header=BB60_2 Depth=1
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%r15)
	cmpl	$1, %eax
	jne	.LBB60_12
	jmp	.LBB60_11
.LBB60_9:                               # %if.else.i11.i.i.i.i.i.i
                                        #   in Loop: Header=BB60_2 Depth=1
	movl	12(%r15), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%r15)
	cmpl	$1, %eax
	jne	.LBB60_12
.LBB60_11:                              # %if.then5.i.i.i.i.i.i
                                        #   in Loop: Header=BB60_2 Depth=1
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*24(%rax)
	jmp	.LBB60_12
.LBB60_13:                              # %invoke.cont.loopexit.i
	movq	8(%r14), %rbx
.LBB60_14:                              # %invoke.cont.i
	testq	%rbx, %rbx
	je	.LBB60_15
# %bb.16:                               # %if.then.i.i.i
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.LBB60_15:                              # %_ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EED2Ev.exit
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end60:
	.size	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEED2Ev, .Lfunc_end60-_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEED0Ev,"axG",@progbits,_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEED0Ev,comdat
	.weak	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEED0Ev # -- Begin function _ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEED0Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEED0Ev,@function
_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEED0Ev: # @_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEED0Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE+16, (%rdi)
	movq	8(%rdi), %rbx
	movq	16(%rdi), %r12
	cmpq	%r12, %rbx
	je	.LBB61_14
# %bb.1:                                # %for.body.i.i.i.preheader
	movl	$__pthread_key_create, %r13d
	jmp	.LBB61_2
	.p2align	4, 0x90
.LBB61_12:                              # %_ZSt8_DestroyISt10shared_ptrI7KernelIEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB61_2 Depth=1
	addq	$16, %rbx
	cmpq	%rbx, %r12
	je	.LBB61_13
.LBB61_2:                               # %for.body.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	8(%rbx), %r15
	testq	%r15, %r15
	je	.LBB61_12
# %bb.3:                                # %if.then.i.i.i.i.i.i
                                        #   in Loop: Header=BB61_2 Depth=1
	testq	%r13, %r13
	je	.LBB61_5
# %bb.4:                                # %if.then.i.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB61_2 Depth=1
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%r15)
	cmpl	$1, %eax
	jne	.LBB61_12
	jmp	.LBB61_7
	.p2align	4, 0x90
.LBB61_5:                               # %if.else.i.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB61_2 Depth=1
	movl	8(%r15), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%r15)
	cmpl	$1, %eax
	jne	.LBB61_12
.LBB61_7:                               # %if.then.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB61_2 Depth=1
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*16(%rax)
	testq	%r13, %r13
	je	.LBB61_9
# %bb.8:                                # %if.then.i9.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB61_2 Depth=1
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%r15)
	cmpl	$1, %eax
	jne	.LBB61_12
	jmp	.LBB61_11
.LBB61_9:                               # %if.else.i11.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB61_2 Depth=1
	movl	12(%r15), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%r15)
	cmpl	$1, %eax
	jne	.LBB61_12
.LBB61_11:                              # %if.then5.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB61_2 Depth=1
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*24(%rax)
	jmp	.LBB61_12
.LBB61_13:                              # %invoke.cont.loopexit.i.i
	movq	8(%r14), %rbx
.LBB61_14:                              # %invoke.cont.i.i
	testq	%rbx, %rbx
	je	.LBB61_16
# %bb.15:                               # %if.then.i.i.i.i
	movq	%rbx, %rdi
	callq	_ZdlPv
.LBB61_16:                              # %_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEED2Ev.exit
	movq	%r14, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end61:
	.size	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEED0Ev, .Lfunc_end61-_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE5BeginEv,"axG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE5BeginEv,comdat
	.weak	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE5BeginEv # -- Begin function _ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE5BeginEv
	.p2align	4, 0x90
	.type	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE5BeginEv,@function
_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE5BeginEv: # @_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE5BeginEv
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movl	$32, %edi
	callq	_Znwm
	movq	8(%rbx), %rcx
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE+16, (%rax)
	movq	%rbx, 8(%rax)
	movq	%rcx, 16(%rax)
	movq	$0, 24(%rax)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end62:
	.size	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE5BeginEv, .Lfunc_end62-_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE5BeginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE3EndEv,"axG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE3EndEv,comdat
	.weak	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE3EndEv # -- Begin function _ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE3EndEv
	.p2align	4, 0x90
	.type	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE3EndEv,@function
_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE3EndEv: # @_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE3EndEv
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movl	$32, %edi
	callq	_Znwm
	movq	16(%rbx), %rcx
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE+16, (%rax)
	movq	%rbx, 8(%rax)
	movq	%rcx, 16(%rax)
	movq	$0, 24(%rax)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end63:
	.size	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE3EndEv, .Lfunc_end63-_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE3EndEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorD2Ev,"axG",@progbits,_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorD2Ev,comdat
	.weak	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorD2Ev # -- Begin function _ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorD2Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorD2Ev,@function
_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorD2Ev: # @_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorD2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE+16, (%rdi)
	movq	24(%rdi), %r14
	testq	%r14, %r14
	je	.LBB64_12
# %bb.1:                                # %delete.notnull.i.i
	movq	8(%r14), %r15
	testq	%r15, %r15
	je	.LBB64_11
# %bb.2:                                # %if.then.i.i.i.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB64_4
# %bb.3:                                # %if.then.i.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%r15)
	cmpl	$1, %eax
	je	.LBB64_6
	jmp	.LBB64_11
.LBB64_4:                               # %if.else.i.i.i.i.i.i
	movl	8(%r15), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%r15)
	cmpl	$1, %eax
	jne	.LBB64_11
.LBB64_6:                               # %if.then.i.i.i.i.i
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB64_8
# %bb.7:                                # %if.then.i9.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%r15)
	cmpl	$1, %eax
	je	.LBB64_10
	jmp	.LBB64_11
.LBB64_8:                               # %if.else.i11.i.i.i.i.i
	movl	12(%r15), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%r15)
	cmpl	$1, %eax
	jne	.LBB64_11
.LBB64_10:                              # %if.then5.i.i.i.i.i
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*24(%rax)
.LBB64_11:                              # %_ZNKSt14default_deleteIKSt10shared_ptrI7KernelIEEclEPS3_.exit.i
	movq	%r14, %rdi
	callq	_ZdlPv
.LBB64_12:                              # %_ZNSt10unique_ptrIKSt10shared_ptrI7KernelIESt14default_deleteIS3_EED2Ev.exit
	movq	$0, 24(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end64:
	.size	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorD2Ev, .Lfunc_end64-_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorD0Ev,"axG",@progbits,_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorD0Ev,comdat
	.weak	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorD0Ev # -- Begin function _ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorD0Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorD0Ev,@function
_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorD0Ev: # @_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorD0Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE+16, (%rdi)
	movq	24(%rdi), %r14
	testq	%r14, %r14
	je	.LBB65_12
# %bb.1:                                # %delete.notnull.i.i.i
	movq	8(%r14), %r15
	testq	%r15, %r15
	je	.LBB65_11
# %bb.2:                                # %if.then.i.i.i.i.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB65_4
# %bb.3:                                # %if.then.i.i.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%r15)
	cmpl	$1, %eax
	je	.LBB65_6
	jmp	.LBB65_11
.LBB65_4:                               # %if.else.i.i.i.i.i.i.i
	movl	8(%r15), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%r15)
	cmpl	$1, %eax
	jne	.LBB65_11
.LBB65_6:                               # %if.then.i.i.i.i.i.i
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB65_8
# %bb.7:                                # %if.then.i9.i.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%r15)
	cmpl	$1, %eax
	je	.LBB65_10
	jmp	.LBB65_11
.LBB65_8:                               # %if.else.i11.i.i.i.i.i.i
	movl	12(%r15), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%r15)
	cmpl	$1, %eax
	jne	.LBB65_11
.LBB65_10:                              # %if.then5.i.i.i.i.i.i
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*24(%rax)
.LBB65_11:                              # %_ZNKSt14default_deleteIKSt10shared_ptrI7KernelIEEclEPS3_.exit.i.i
	movq	%r14, %rdi
	callq	_ZdlPv
.LBB65_12:                              # %_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorD2Ev.exit
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end65:
	.size	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorD0Ev, .Lfunc_end65-_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorD0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator13BaseGeneratorEv,"axG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator13BaseGeneratorEv,comdat
	.weak	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator13BaseGeneratorEv # -- Begin function _ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator13BaseGeneratorEv
	.p2align	4, 0x90
	.type	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator13BaseGeneratorEv,@function
_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator13BaseGeneratorEv: # @_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator13BaseGeneratorEv
	.cfi_startproc
# %bb.0:                                # %entry
	movq	8(%rdi), %rax
	retq
.Lfunc_end66:
	.size	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator13BaseGeneratorEv, .Lfunc_end66-_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator13BaseGeneratorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator7AdvanceEv,"axG",@progbits,_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator7AdvanceEv,comdat
	.weak	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator7AdvanceEv # -- Begin function _ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator7AdvanceEv
	.p2align	4, 0x90
	.type	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator7AdvanceEv,@function
_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator7AdvanceEv: # @_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator7AdvanceEv
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	addq	$16, 16(%rdi)
	movq	24(%rdi), %rbx
	movq	$0, 24(%rdi)
	testq	%rbx, %rbx
	je	.LBB67_12
# %bb.1:                                # %delete.notnull.i.i
	movq	8(%rbx), %r14
	testq	%r14, %r14
	je	.LBB67_11
# %bb.2:                                # %if.then.i.i.i.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB67_4
# %bb.3:                                # %if.then.i.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%r14)
	cmpl	$1, %eax
	je	.LBB67_6
	jmp	.LBB67_11
.LBB67_12:                              # %_ZNSt10unique_ptrIKSt10shared_ptrI7KernelIESt14default_deleteIS3_EE5resetEPS3_.exit
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB67_4:                               # %if.else.i.i.i.i.i.i
	.cfi_def_cfa_offset 32
	movl	8(%r14), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%r14)
	cmpl	$1, %eax
	jne	.LBB67_11
.LBB67_6:                               # %if.then.i.i.i.i.i
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB67_8
# %bb.7:                                # %if.then.i9.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%r14)
	cmpl	$1, %eax
	je	.LBB67_10
	jmp	.LBB67_11
.LBB67_8:                               # %if.else.i11.i.i.i.i.i
	movl	12(%r14), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%r14)
	cmpl	$1, %eax
	jne	.LBB67_11
.LBB67_10:                              # %if.then5.i.i.i.i.i
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*24(%rax)
.LBB67_11:                              # %_ZNKSt14default_deleteIKSt10shared_ptrI7KernelIEEclEPS3_.exit.i
	movq	%rbx, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end67:
	.size	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator7AdvanceEv, .Lfunc_end67-_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator7AdvanceEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator5CloneEv,"axG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator5CloneEv,comdat
	.weak	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator5CloneEv # -- Begin function _ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator5CloneEv
	.p2align	4, 0x90
	.type	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator5CloneEv,@function
_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator5CloneEv: # @_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator5CloneEv
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movl	$32, %edi
	callq	_Znwm
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE+16, (%rax)
	movq	8(%rbx), %rcx
	movq	%rcx, 8(%rax)
	movq	16(%rbx), %rcx
	movq	%rcx, 16(%rax)
	movq	$0, 24(%rax)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end68:
	.size	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator5CloneEv, .Lfunc_end68-_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator5CloneEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator7CurrentEv,"axG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator7CurrentEv,comdat
	.weak	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator7CurrentEv # -- Begin function _ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator7CurrentEv
	.p2align	4, 0x90
	.type	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator7CurrentEv,@function
_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator7CurrentEv: # @_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator7CurrentEv
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	24(%rdi), %rax
	testq	%rax, %rax
	je	.LBB69_1
.LBB69_17:                              # %if.end
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB69_1:                               # %if.then
	.cfi_def_cfa_offset 32
	movq	%rdi, %rbx
	movl	$16, %edi
	callq	_Znwm
	movq	16(%rbx), %rcx
	movq	(%rcx), %rdx
	movq	%rdx, (%rax)
	movq	8(%rcx), %rcx
	movq	%rcx, 8(%rax)
	testq	%rcx, %rcx
	je	.LBB69_4
# %bb.2:                                # %if.then.i.i.i
	movl	$__pthread_key_create, %edx
	testq	%rdx, %rdx
	je	.LBB69_3
# %bb.5:                                # %_ZNSt10shared_ptrI7KernelIEC2ERKS1_.exit
	lock		addl	$1, 8(%rcx)
	movq	24(%rbx), %r14
	movq	%rax, 24(%rbx)
	testq	%r14, %r14
	je	.LBB69_17
# %bb.6:                                # %delete.notnull.i.i
	movq	8(%r14), %r15
	testq	%r15, %r15
	je	.LBB69_16
# %bb.7:                                # %if.then.i.i.i.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB69_9
# %bb.8:                                # %if.then.i.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%r15)
	jmp	.LBB69_10
.LBB69_3:                               # %if.else.i.i.i.i.i
	addl	$1, 8(%rcx)
.LBB69_4:                               # %_ZNSt10shared_ptrI7KernelIEC2ERKS1_.exit.thread
	movq	%rax, 24(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB69_9:                               # %if.else.i.i.i.i.i.i
	.cfi_def_cfa_offset 32
	movl	8(%r15), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%r15)
.LBB69_10:                              # %invoke.cont.i.i.i.i.i
	cmpl	$1, %eax
	jne	.LBB69_16
# %bb.11:                               # %if.then.i.i.i.i.i8
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB69_13
# %bb.12:                               # %if.then.i9.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%r15)
	jmp	.LBB69_14
.LBB69_13:                              # %if.else.i11.i.i.i.i.i
	movl	12(%r15), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%r15)
.LBB69_14:                              # %invoke.cont2.i.i.i.i.i
	cmpl	$1, %eax
	jne	.LBB69_16
# %bb.15:                               # %if.then5.i.i.i.i.i
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*24(%rax)
.LBB69_16:                              # %_ZNKSt14default_deleteIKSt10shared_ptrI7KernelIEEclEPS3_.exit.i
	movq	%r14, %rdi
	callq	_ZdlPv
	movq	24(%rbx), %rax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end69:
	.size	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator7CurrentEv, .Lfunc_end69-_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator7CurrentEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS4_EE,"axG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS4_EE,comdat
	.weak	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS4_EE # -- Begin function _ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS4_EE
	.p2align	4, 0x90
	.type	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS4_EE,@function
_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS4_EE: # @_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS4_EE
.Lfunc_begin20:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception20
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r15
	movq	%rdi, %r14
	movq	(%rdi), %rax
	callq	*16(%rax)
	movq	%rax, %rbx
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*16(%rax)
	xorl	%edi, %edi
	cmpq	%rax, %rbx
	sete	%dil
	callq	_ZN7testing8internal6IsTrueEb
	testb	%al, %al
	jne	.LBB70_14
# %bb.1:                                # %if.else
	leaq	8(%rsp), %rdi
	movl	$.L.str.8, %edx
	movl	$3, %esi
	movl	$340, %ecx                      # imm = 0x154
	callq	_ZN7testing8internal8GTestLogC1ENS0_16GTestLogSeverityEPKci
.Ltmp417:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.31, %esi
	movl	$59, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp418:
# %bb.2:                                # %invoke.cont
.Ltmp419:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.32, %esi
	movl	$43, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp420:
# %bb.3:                                # %invoke.cont8
.Ltmp421:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.33, %esi
	movl	$26, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp422:
# %bb.4:                                # %invoke.cont10
	movq	_ZSt4cerr(%rip), %rax
	movq	-24(%rax), %rax
	movq	_ZSt4cerr+240(%rax), %rbx
	testq	%rbx, %rbx
	je	.LBB70_5
# %bb.7:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	cmpb	$0, 56(%rbx)
	je	.LBB70_9
# %bb.8:                                # %if.then.i4.i.i
	movb	67(%rbx), %al
	jmp	.LBB70_11
.LBB70_9:                               # %if.end.i.i.i
.Ltmp423:
	movq	%rbx, %rdi
	callq	_ZNKSt5ctypeIcE13_M_widen_initEv
.Ltmp424:
# %bb.10:                               # %.noexc28
	movq	(%rbx), %rax
.Ltmp425:
	movq	%rbx, %rdi
	movl	$10, %esi
	callq	*48(%rax)
.Ltmp426:
.LBB70_11:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp427:
	movsbl	%al, %esi
	movl	$_ZSt4cerr, %edi
	callq	_ZNSo3putEc
.Ltmp428:
# %bb.12:                               # %call1.i.noexc
.Ltmp429:
	movq	%rax, %rdi
	callq	_ZNSo5flushEv
.Ltmp430:
# %bb.13:                               # %invoke.cont12
	leaq	8(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
.LBB70_14:                              # %if.end
	movq	%r15, %rdi
	callq	_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorEKNS0_22ParamIteratorInterfaceIS5_EEEEPT_PT0_
	movq	16(%r14), %rcx
	cmpq	16(%rax), %rcx
	sete	%al
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB70_5:                               # %if.then.i.i.i
	.cfi_def_cfa_offset 48
.Ltmp431:
	callq	_ZSt16__throw_bad_castv
.Ltmp432:
# %bb.6:                                # %.noexc
.LBB70_15:                              # %lpad
.Ltmp433:
	movq	%rax, %rbx
	leaq	8(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end70:
	.size	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS4_EE, .Lfunc_end70-_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS4_EE
	.cfi_endproc
	.section	.gcc_except_table._ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS4_EE,"aG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS4_EE,comdat
	.p2align	2
GCC_except_table70:
.Lexception20:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end20-.Lcst_begin20
.Lcst_begin20:
	.uleb128 .Lfunc_begin20-.Lfunc_begin20  # >> Call Site 1 <<
	.uleb128 .Ltmp417-.Lfunc_begin20        #   Call between .Lfunc_begin20 and .Ltmp417
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp417-.Lfunc_begin20        # >> Call Site 2 <<
	.uleb128 .Ltmp430-.Ltmp417              #   Call between .Ltmp417 and .Ltmp430
	.uleb128 .Ltmp433-.Lfunc_begin20        #     jumps to .Ltmp433
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp430-.Lfunc_begin20        # >> Call Site 3 <<
	.uleb128 .Ltmp431-.Ltmp430              #   Call between .Ltmp430 and .Ltmp431
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp431-.Lfunc_begin20        # >> Call Site 4 <<
	.uleb128 .Ltmp432-.Ltmp431              #   Call between .Ltmp431 and .Ltmp432
	.uleb128 .Ltmp433-.Lfunc_begin20        #     jumps to .Ltmp433
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp432-.Lfunc_begin20        # >> Call Site 5 <<
	.uleb128 .Lfunc_end70-.Ltmp432          #   Call between .Ltmp432 and .Lfunc_end70
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end20:
	.p2align	2
                                        # -- End function
	.section	.text._ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorEKNS0_22ParamIteratorInterfaceIS5_EEEEPT_PT0_,"axG",@progbits,_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorEKNS0_22ParamIteratorInterfaceIS5_EEEEPT_PT0_,comdat
	.weak	_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorEKNS0_22ParamIteratorInterfaceIS5_EEEEPT_PT0_ # -- Begin function _ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorEKNS0_22ParamIteratorInterfaceIS5_EEEEPT_PT0_
	.p2align	4, 0x90
	.type	_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorEKNS0_22ParamIteratorInterfaceIS5_EEEEPT_PT0_,@function
_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorEKNS0_22ParamIteratorInterfaceIS5_EEEEPT_PT0_: # @_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorEKNS0_22ParamIteratorInterfaceIS5_EEEEPT_PT0_
.Lfunc_begin21:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception21
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -16
	testq	%rdi, %rdi
	je	.LBB71_10
# %bb.1:                                # %typeid.end
	movq	%rdi, %rbx
	movq	(%rdi), %rax
	movq	-8(%rax), %rax
	movq	8(%rax), %rdi
	cmpq	$_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE, %rdi
	je	.LBB71_2
# %bb.3:                                # %lor.rhs.i
	cmpb	$42, (%rdi)
	jne	.LBB71_5
# %bb.4:
	xorl	%eax, %eax
	movzbl	%al, %edi
	callq	_ZN7testing8internal6IsTrueEb
	testb	%al, %al
	je	.LBB71_7
	jmp	.LBB71_9
.LBB71_2:
	movb	$1, %al
	movzbl	%al, %edi
	callq	_ZN7testing8internal6IsTrueEb
	testb	%al, %al
	je	.LBB71_7
	jmp	.LBB71_9
.LBB71_5:                               # %land.rhs.i
	movl	$_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE, %esi
	callq	strcmp
	testl	%eax, %eax
	sete	%al
	movzbl	%al, %edi
	callq	_ZN7testing8internal6IsTrueEb
	testb	%al, %al
	jne	.LBB71_9
.LBB71_7:                               # %if.else
	leaq	8(%rsp), %rdi
	movl	$.L.str.5, %edx
	movl	$3, %esi
	movl	$1114, %ecx                     # imm = 0x45A
	callq	_ZN7testing8internal8GTestLogC1ENS0_16GTestLogSeverityEPKci
.Ltmp434:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.6, %esi
	movl	$51, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp435:
# %bb.8:                                # %invoke.cont
	leaq	8(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
.LBB71_9:                               # %dynamic_cast.end
	movl	$_ZTIN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEE, %esi
	movl	$_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE, %edx
	movq	%rbx, %rdi
	xorl	%ecx, %ecx
	callq	__dynamic_cast
	addq	$16, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB71_10:                              # %typeid.bad_typeid
	.cfi_def_cfa_offset 32
	callq	__cxa_bad_typeid
.LBB71_11:                              # %lpad
.Ltmp436:
	movq	%rax, %rbx
	leaq	8(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end71:
	.size	_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorEKNS0_22ParamIteratorInterfaceIS5_EEEEPT_PT0_, .Lfunc_end71-_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorEKNS0_22ParamIteratorInterfaceIS5_EEEEPT_PT0_
	.cfi_endproc
	.section	.gcc_except_table._ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorEKNS0_22ParamIteratorInterfaceIS5_EEEEPT_PT0_,"aG",@progbits,_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorEKNS0_22ParamIteratorInterfaceIS5_EEEEPT_PT0_,comdat
	.p2align	2
GCC_except_table71:
.Lexception21:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end21-.Lcst_begin21
.Lcst_begin21:
	.uleb128 .Lfunc_begin21-.Lfunc_begin21  # >> Call Site 1 <<
	.uleb128 .Ltmp434-.Lfunc_begin21        #   Call between .Lfunc_begin21 and .Ltmp434
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp434-.Lfunc_begin21        # >> Call Site 2 <<
	.uleb128 .Ltmp435-.Ltmp434              #   Call between .Ltmp434 and .Ltmp435
	.uleb128 .Ltmp436-.Lfunc_begin21        #     jumps to .Ltmp436
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp435-.Lfunc_begin21        # >> Call Site 3 <<
	.uleb128 .Lfunc_end71-.Ltmp435          #   Call between .Ltmp435 and .Lfunc_end71
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end21:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EED0Ev,"axG",@progbits,_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EED0Ev,comdat
	.weak	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EED0Ev # -- Begin function _ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.p2align	4, 0x90
	.type	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EED0Ev,@function
_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EED0Ev: # @_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.cfi_startproc
# %bb.0:                                # %entry
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end72:
	.size	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EED0Ev, .Lfunc_end72-_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,"axG",@progbits,_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,comdat
	.weak	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv # -- Begin function _ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.p2align	4, 0x90
	.type	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,@function
_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv: # @_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.cfi_startproc
# %bb.0:                                # %entry
	movq	16(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB73_1
# %bb.2:                                # %delete.notnull
	movq	(%rdi), %rax
	jmpq	*8(%rax)                        # TAILCALL
.LBB73_1:                               # %delete.end
	retq
.Lfunc_end73:
	.size	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv, .Lfunc_end73-_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,"axG",@progbits,_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,comdat
	.weak	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv # -- Begin function _ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.p2align	4, 0x90
	.type	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,@function
_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv: # @_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_startproc
# %bb.0:                                # %entry
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end74:
	.size	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv, .Lfunc_end74-_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,"axG",@progbits,_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,comdat
	.weak	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info # -- Begin function _ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.p2align	4, 0x90
	.type	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,@function
_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info: # @_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.cfi_startproc
# %bb.0:                                # %entry
	xorl	%eax, %eax
	retq
.Lfunc_end75:
	.size	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info, .Lfunc_end75-_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4                               # -- Begin function _ZN15KernelGeneratorISt5tupleIJS0_IJDF16_ffSt17integral_constantIjLj32EES2_S1_IjLj8EE9col_major9row_majorS4_S4_5LdsRFS1_IjLj2EES1_IjLj1EEEEEE24MmaSyncMultiLdsGeneratorE8generateERSt6vectorISt10shared_ptrI7KernelIESaISG_EE
.LCPI76_0:
	.quad	0xbff0000000000000              # double -1
	.quad	0xbff0000000000000              # double -1
	.section	.text._ZN15KernelGeneratorISt5tupleIJS0_IJDF16_ffSt17integral_constantIjLj32EES2_S1_IjLj8EE9col_major9row_majorS4_S4_5LdsRFS1_IjLj2EES1_IjLj1EEEEEE24MmaSyncMultiLdsGeneratorE8generateERSt6vectorISt10shared_ptrI7KernelIESaISG_EE,"axG",@progbits,_ZN15KernelGeneratorISt5tupleIJS0_IJDF16_ffSt17integral_constantIjLj32EES2_S1_IjLj8EE9col_major9row_majorS4_S4_5LdsRFS1_IjLj2EES1_IjLj1EEEEEE24MmaSyncMultiLdsGeneratorE8generateERSt6vectorISt10shared_ptrI7KernelIESaISG_EE,comdat
	.weak	_ZN15KernelGeneratorISt5tupleIJS0_IJDF16_ffSt17integral_constantIjLj32EES2_S1_IjLj8EE9col_major9row_majorS4_S4_5LdsRFS1_IjLj2EES1_IjLj1EEEEEE24MmaSyncMultiLdsGeneratorE8generateERSt6vectorISt10shared_ptrI7KernelIESaISG_EE
	.p2align	4, 0x90
	.type	_ZN15KernelGeneratorISt5tupleIJS0_IJDF16_ffSt17integral_constantIjLj32EES2_S1_IjLj8EE9col_major9row_majorS4_S4_5LdsRFS1_IjLj2EES1_IjLj1EEEEEE24MmaSyncMultiLdsGeneratorE8generateERSt6vectorISt10shared_ptrI7KernelIESaISG_EE,@function
_ZN15KernelGeneratorISt5tupleIJS0_IJDF16_ffSt17integral_constantIjLj32EES2_S1_IjLj8EE9col_major9row_majorS4_S4_5LdsRFS1_IjLj2EES1_IjLj1EEEEEE24MmaSyncMultiLdsGeneratorE8generateERSt6vectorISt10shared_ptrI7KernelIESaISG_EE: # @_ZN15KernelGeneratorISt5tupleIJS0_IJDF16_ffSt17integral_constantIjLj32EES2_S1_IjLj8EE9col_major9row_majorS4_S4_5LdsRFS1_IjLj2EES1_IjLj1EEEEEE24MmaSyncMultiLdsGeneratorE8generateERSt6vectorISt10shared_ptrI7KernelIESaISG_EE
.Lfunc_begin22:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception22
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$16, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r15
	movl	$128, %edi
	callq	_Znwm
	movabsq	$4294967297, %rcx               # imm = 0x100000001
	movq	%rcx, 8(%rax)
	movq	$_ZTVSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE+16, (%rax)
	leaq	16(%rax), %rcx
	xorps	%xmm0, %xmm0
	movups	%xmm0, 24(%rax)
	movups	%xmm0, 40(%rax)
	movups	%xmm0, 52(%rax)
	movl	$1, 68(%rax)
	movw	$1, 72(%rax)
	movups	%xmm0, 80(%rax)
	movups	%xmm0, 96(%rax)
	movaps	.LCPI76_0(%rip), %xmm0          # xmm0 = [-1.0E+0,-1.0E+0]
	movups	%xmm0, 112(%rax)
	movq	$_ZTV21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE+16, 16(%rax)
	movq	%rcx, (%rsp)
	movq	%rax, 8(%rsp)
	movq	8(%r15), %rsi
	cmpq	16(%r15), %rsi
	je	.LBB76_2
# %bb.1:                                # %if.then.i.i
	movq	%rcx, (%rsi)
	movq	$0, 8(%rsi)
	movq	8(%rsp), %rax
	movq	$0, 8(%rsp)
	movq	%rax, 8(%rsi)
	movq	$0, (%rsp)
	addq	$16, %rsi
	movq	%rsi, 8(%r15)
	jmp	.LBB76_3
.LBB76_2:                               # %if.else.i.i
.Ltmp437:
	movq	%rsp, %rdx
	movq	%r15, %rdi
	callq	_ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_
.Ltmp438:
.LBB76_3:                               # %invoke.cont
	movq	8(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB76_13
# %bb.4:                                # %if.then.i.i7
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB76_6
# %bb.5:                                # %if.then.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB76_8
	jmp	.LBB76_13
.LBB76_6:                               # %if.else.i.i.i.i
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB76_13
.LBB76_8:                               # %if.then.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB76_10
# %bb.9:                                # %if.then.i9.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB76_12
	jmp	.LBB76_13
.LBB76_10:                              # %if.else.i11.i.i.i
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB76_13
.LBB76_12:                              # %if.then5.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
.LBB76_13:                              # %_ZNSt12__shared_ptrI7KernelILN9__gnu_cxx12_Lock_policyE2EED2Ev.exit
	movq	(%r15), %rax
	movq	8(%r15), %rcx
	movq	%rcx, %rdi
	subq	%rax, %rdi
	je	.LBB76_14
# %bb.15:                               # %cond.true.i.i.i.i
	testq	%rdi, %rdi
	js	.LBB76_41
# %bb.16:                               # %_ZNSt16allocator_traitsISaISt10shared_ptrI7KernelIEEE8allocateERS3_m.exit.i.i.i.i
	callq	_Znwm
	movq	%rax, %r14
	movq	(%r15), %rax
	movq	8(%r15), %rcx
	movq	%r14, %r13
	cmpq	%rcx, %rax
	jne	.LBB76_18
	jmp	.LBB76_24
.LBB76_14:
	xorl	%r14d, %r14d
	movq	%r14, %r13
	cmpq	%rcx, %rax
	je	.LBB76_24
.LBB76_18:                              # %for.body.i.i.i.i.preheader
	movl	$__pthread_key_create, %edx
	movq	%r14, %r13
	jmp	.LBB76_19
	.p2align	4, 0x90
.LBB76_22:                              # %if.else.i.i.i.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB76_19 Depth=1
	addl	$1, 8(%rsi)
.LBB76_23:                              # %_ZSt10_ConstructISt10shared_ptrI7KernelIEJRKS2_EEvPT_DpOT0_.exit.i.i.i.i
                                        #   in Loop: Header=BB76_19 Depth=1
	addq	$16, %r13
	addq	$16, %rax
	cmpq	%rcx, %rax
	je	.LBB76_24
.LBB76_19:                              # %for.body.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rax), %rsi
	movq	%rsi, (%r13)
	movq	8(%rax), %rsi
	movq	%rsi, 8(%r13)
	testq	%rsi, %rsi
	je	.LBB76_23
# %bb.20:                               # %if.then.i.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB76_19 Depth=1
	testq	%rdx, %rdx
	je	.LBB76_22
# %bb.21:                               # %if.then.i.i.i.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB76_19 Depth=1
	lock		addl	$1, 8(%rsi)
	jmp	.LBB76_23
.LBB76_24:                              # %_ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EEC2ERKS4_.exit
	cmpq	%r13, %r14
	je	.LBB76_37
# %bb.25:                               # %for.body.i.i.preheader
	movl	$__pthread_key_create, %r12d
	movq	%r14, %rbx
	jmp	.LBB76_26
	.p2align	4, 0x90
.LBB76_36:                              # %_ZSt8_DestroyISt10shared_ptrI7KernelIEEvPT_.exit.i.i
                                        #   in Loop: Header=BB76_26 Depth=1
	addq	$16, %rbx
	cmpq	%rbx, %r13
	je	.LBB76_37
.LBB76_26:                              # %for.body.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	8(%rbx), %r15
	testq	%r15, %r15
	je	.LBB76_36
# %bb.27:                               # %if.then.i.i.i.i.i
                                        #   in Loop: Header=BB76_26 Depth=1
	testq	%r12, %r12
	je	.LBB76_29
# %bb.28:                               # %if.then.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB76_26 Depth=1
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%r15)
	cmpl	$1, %eax
	jne	.LBB76_36
	jmp	.LBB76_31
	.p2align	4, 0x90
.LBB76_29:                              # %if.else.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB76_26 Depth=1
	movl	8(%r15), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%r15)
	cmpl	$1, %eax
	jne	.LBB76_36
.LBB76_31:                              # %if.then.i.i.i.i.i.i10
                                        #   in Loop: Header=BB76_26 Depth=1
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*16(%rax)
	testq	%r12, %r12
	je	.LBB76_33
# %bb.32:                               # %if.then.i9.i.i.i.i.i.i
                                        #   in Loop: Header=BB76_26 Depth=1
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%r15)
	cmpl	$1, %eax
	jne	.LBB76_36
	jmp	.LBB76_35
.LBB76_33:                              # %if.else.i11.i.i.i.i.i.i
                                        #   in Loop: Header=BB76_26 Depth=1
	movl	12(%r15), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%r15)
	cmpl	$1, %eax
	jne	.LBB76_36
.LBB76_35:                              # %if.then5.i.i.i.i.i.i
                                        #   in Loop: Header=BB76_26 Depth=1
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*24(%rax)
	jmp	.LBB76_36
.LBB76_37:                              # %invoke.cont.i13
	testq	%r14, %r14
	je	.LBB76_39
# %bb.38:                               # %if.then.i.i.i14
	movq	%r14, %rdi
	callq	_ZdlPv
.LBB76_39:                              # %_ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EED2Ev.exit
	addq	$16, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB76_41:                              # %if.then.i.i.i.i.i.i
	.cfi_def_cfa_offset 64
	callq	_ZSt17__throw_bad_allocv
.LBB76_40:                              # %lpad
.Ltmp439:
	movq	%rax, %rbx
	movq	%rsp, %rdi
	callq	_ZNSt12__shared_ptrI7KernelILN9__gnu_cxx12_Lock_policyE2EED2Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end76:
	.size	_ZN15KernelGeneratorISt5tupleIJS0_IJDF16_ffSt17integral_constantIjLj32EES2_S1_IjLj8EE9col_major9row_majorS4_S4_5LdsRFS1_IjLj2EES1_IjLj1EEEEEE24MmaSyncMultiLdsGeneratorE8generateERSt6vectorISt10shared_ptrI7KernelIESaISG_EE, .Lfunc_end76-_ZN15KernelGeneratorISt5tupleIJS0_IJDF16_ffSt17integral_constantIjLj32EES2_S1_IjLj8EE9col_major9row_majorS4_S4_5LdsRFS1_IjLj2EES1_IjLj1EEEEEE24MmaSyncMultiLdsGeneratorE8generateERSt6vectorISt10shared_ptrI7KernelIESaISG_EE
	.cfi_endproc
	.section	.gcc_except_table._ZN15KernelGeneratorISt5tupleIJS0_IJDF16_ffSt17integral_constantIjLj32EES2_S1_IjLj8EE9col_major9row_majorS4_S4_5LdsRFS1_IjLj2EES1_IjLj1EEEEEE24MmaSyncMultiLdsGeneratorE8generateERSt6vectorISt10shared_ptrI7KernelIESaISG_EE,"aG",@progbits,_ZN15KernelGeneratorISt5tupleIJS0_IJDF16_ffSt17integral_constantIjLj32EES2_S1_IjLj8EE9col_major9row_majorS4_S4_5LdsRFS1_IjLj2EES1_IjLj1EEEEEE24MmaSyncMultiLdsGeneratorE8generateERSt6vectorISt10shared_ptrI7KernelIESaISG_EE,comdat
	.p2align	2
GCC_except_table76:
.Lexception22:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end22-.Lcst_begin22
.Lcst_begin22:
	.uleb128 .Lfunc_begin22-.Lfunc_begin22  # >> Call Site 1 <<
	.uleb128 .Ltmp437-.Lfunc_begin22        #   Call between .Lfunc_begin22 and .Ltmp437
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp437-.Lfunc_begin22        # >> Call Site 2 <<
	.uleb128 .Ltmp438-.Ltmp437              #   Call between .Ltmp437 and .Ltmp438
	.uleb128 .Ltmp439-.Lfunc_begin22        #     jumps to .Ltmp439
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp438-.Lfunc_begin22        # >> Call Site 3 <<
	.uleb128 .Lfunc_end76-.Ltmp438          #   Call between .Ltmp438 and .Lfunc_end76
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end22:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_,"axG",@progbits,_ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_,comdat
	.weak	_ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_ # -- Begin function _ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_,@function
_ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_: # @_ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r13
	movq	%rsi, %rbx
	movq	%rdi, %r15
	movq	(%rdi), %rax
	movq	8(%rdi), %rcx
	subq	%rax, %rcx
	movq	%rcx, %rdx
	sarq	$4, %rdx
	testq	%rcx, %rcx
	movl	$1, %ecx
	cmovneq	%rdx, %rcx
	leaq	(%rcx,%rdx), %r12
	movq	%r12, %rsi
	shrq	$60, %rsi
	movabsq	$1152921504606846975, %rsi      # imm = 0xFFFFFFFFFFFFFFF
	cmovneq	%rsi, %r12
	addq	%rdx, %rcx
	cmovbq	%rsi, %r12
	movq	%rbx, %rbp
	subq	%rax, %rbp
	shlq	$4, %r12
	movq	%r12, %rdi
	callq	_Znwm
	movq	(%r13), %rcx
	movq	%rcx, (%rax,%rbp)
	movq	8(%r13), %rcx
	movq	$0, 8(%r13)
	movq	%rcx, 8(%rax,%rbp)
	movq	$0, (%r13)
	movq	(%r15), %r13
	cmpq	%rbx, %r13
	movq	%rax, 16(%rsp)                  # 8-byte Spill
	movq	%rax, %rbp
	je	.LBB77_3
# %bb.1:                                # %for.body.i.i.i.i.preheader
	movq	%r13, %rdx
	.p2align	4, 0x90
.LBB77_2:                               # %for.body.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdx), %rcx
	movq	%rcx, (%rbp)
	movq	$0, 8(%rbp)
	movq	8(%rdx), %rcx
	movq	$0, 8(%rdx)
	movq	%rcx, 8(%rbp)
	movq	$0, (%rdx)
	addq	$16, %rbp
	addq	$16, %rdx
	cmpq	%rbx, %rdx
	jne	.LBB77_2
.LBB77_3:                               # %invoke.cont10
	addq	$16, %rbp
	movq	8(%r15), %r14
	cmpq	%rbx, %r14
	je	.LBB77_5
	.p2align	4, 0x90
.LBB77_4:                               # %for.body.i.i.i.i78
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rbx), %rax
	movq	%rax, (%rbp)
	movq	$0, 8(%rbp)
	movq	8(%rbx), %rax
	movq	$0, 8(%rbx)
	movq	%rax, 8(%rbp)
	movq	$0, (%rbx)
	addq	$16, %rbp
	addq	$16, %rbx
	cmpq	%r14, %rbx
	jne	.LBB77_4
.LBB77_5:                               # %invoke.cont15
	cmpq	%r14, %r13
	je	.LBB77_19
# %bb.6:                                # %for.body.i.preheader
	movq	%r15, 8(%rsp)                   # 8-byte Spill
	movl	$__pthread_key_create, %r15d
	jmp	.LBB77_7
	.p2align	4, 0x90
.LBB77_17:                              # %_ZSt8_DestroyISt10shared_ptrI7KernelIEEvPT_.exit.i
                                        #   in Loop: Header=BB77_7 Depth=1
	addq	$16, %r13
	cmpq	%r13, %r14
	je	.LBB77_18
.LBB77_7:                               # %for.body.i
                                        # =>This Inner Loop Header: Depth=1
	movq	8(%r13), %rbx
	testq	%rbx, %rbx
	je	.LBB77_17
# %bb.8:                                # %if.then.i.i.i.i
                                        #   in Loop: Header=BB77_7 Depth=1
	testq	%r15, %r15
	je	.LBB77_10
# %bb.9:                                # %if.then.i.i.i.i.i.i
                                        #   in Loop: Header=BB77_7 Depth=1
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB77_17
	jmp	.LBB77_12
	.p2align	4, 0x90
.LBB77_10:                              # %if.else.i.i.i.i.i.i
                                        #   in Loop: Header=BB77_7 Depth=1
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB77_17
.LBB77_12:                              # %if.then.i.i.i.i.i
                                        #   in Loop: Header=BB77_7 Depth=1
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	testq	%r15, %r15
	je	.LBB77_14
# %bb.13:                               # %if.then.i9.i.i.i.i.i
                                        #   in Loop: Header=BB77_7 Depth=1
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB77_17
	jmp	.LBB77_16
.LBB77_14:                              # %if.else.i11.i.i.i.i.i
                                        #   in Loop: Header=BB77_7 Depth=1
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB77_17
.LBB77_16:                              # %if.then5.i.i.i.i.i
                                        #   in Loop: Header=BB77_7 Depth=1
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
	jmp	.LBB77_17
.LBB77_18:                              # %_ZNSt12_Destroy_auxILb0EE9__destroyIPSt10shared_ptrI7KernelIEEEvT_S6_.exit.loopexit
	movq	8(%rsp), %r15                   # 8-byte Reload
	movq	(%r15), %r13
.LBB77_19:                              # %_ZNSt12_Destroy_auxILb0EE9__destroyIPSt10shared_ptrI7KernelIEEEvT_S6_.exit
	testq	%r13, %r13
	movq	16(%rsp), %rbx                  # 8-byte Reload
	je	.LBB77_21
# %bb.20:                               # %if.then.i81
	movq	%r13, %rdi
	callq	_ZdlPv
.LBB77_21:                              # %_ZNSt12_Vector_baseISt10shared_ptrI7KernelIESaIS2_EE13_M_deallocateEPS2_m.exit
	movq	%rbx, (%r15)
	movq	%rbp, 8(%r15)
	addq	%r12, %rbx
	movq	%rbx, 16(%r15)
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end77:
	.size	_ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_, .Lfunc_end77-_ZNSt6vectorISt10shared_ptrI7KernelIESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EED2Ev,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EED2Ev,comdat
	.weak	_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EED2Ev # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EED2Ev,@function
_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EED2Ev: # @_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	retq
.Lfunc_end78:
	.size	_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EED2Ev, .Lfunc_end78-_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EED0Ev,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EED0Ev,comdat
	.weak	_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EED0Ev # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.p2align	4, 0x90
	.type	_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EED0Ev,@function
_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EED0Ev: # @_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.cfi_startproc
# %bb.0:                                # %entry
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end79:
	.size	_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EED0Ev, .Lfunc_end79-_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,comdat
	.weak	_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.p2align	4, 0x90
	.type	_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,@function
_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv: # @_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.cfi_startproc
# %bb.0:                                # %invoke.cont
	retq
.Lfunc_end80:
	.size	_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv, .Lfunc_end80-_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,comdat
	.weak	_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.p2align	4, 0x90
	.type	_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,@function
_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv: # @_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_startproc
# %bb.0:                                # %_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_S2_5LdsRFLj2ELj1EESaIS5_ELN9__gnu_cxx12_Lock_policyE2EEEED2Ev.exit
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end81:
	.size	_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv, .Lfunc_end81-_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,comdat
	.weak	_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.p2align	4, 0x90
	.type	_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,@function
_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info: # @_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	8(%rsi), %rdi
	cmpq	$_ZTSSt19_Sp_make_shared_tag, %rdi
	je	.LBB82_5
# %bb.1:                                # %lor.rhs.i
	cmpb	$42, (%rdi)
	jne	.LBB82_3
# %bb.2:
	xorl	%ebx, %ebx
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB82_3:                               # %_ZNKSt9type_infoeqERKS_.exit
	.cfi_def_cfa_offset 16
	movl	$_ZTSSt19_Sp_make_shared_tag, %esi
	callq	strcmp
	testl	%eax, %eax
	je	.LBB82_5
# %bb.4:
	xorl	%ebx, %ebx
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB82_5:                               # %if.then
	.cfi_def_cfa_offset 16
	addq	$16, %rbx
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end82:
	.size	_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info, .Lfunc_end82-_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EED0Ev,"axG",@progbits,_ZN21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EED0Ev,comdat
	.weak	_ZN21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EED0Ev # -- Begin function _ZN21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EED0Ev
	.p2align	4, 0x90
	.type	_ZN21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EED0Ev,@function
_ZN21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EED0Ev: # @_ZN21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EED0Ev
	.cfi_startproc
# %bb.0:                                # %entry
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end83:
	.size	_ZN21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EED0Ev, .Lfunc_end83-_ZN21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E5setupERK13ProblemParams,"axG",@progbits,_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E5setupERK13ProblemParams,comdat
	.weak	_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E5setupERK13ProblemParams # -- Begin function _ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E5setupERK13ProblemParams
	.p2align	4, 0x90
	.type	_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E5setupERK13ProblemParams,@function
_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E5setupERK13ProblemParams: # @_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E5setupERK13ProblemParams
.Lfunc_begin23:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception23
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$40, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movw	$1, 56(%rdi)
	movdqu	(%rsi), %xmm0
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	movq	%xmm0, 8(%rdi)
	movl	32(%rsi), %eax
	movl	16(%rsi), %ecx
	movl	24(%rsi), %edx
	movl	%eax, 16(%rdi)
	movl	%edx, 20(%rdi)
	movl	%ecx, 24(%rdi)
	movsd	40(%rsi), %xmm0                 # xmm0 = mem[0],zero
	movsd	48(%rsi), %xmm1                 # xmm1 = mem[0],zero
	cvtsd2ss	%xmm0, %xmm0
	cvtsd2ss	%xmm1, %xmm1
	movss	%xmm0, 44(%rdi)
	movss	%xmm1, 48(%rdi)
	movl	%eax, 28(%rdi)
	movl	%edx, 32(%rdi)
	movl	%eax, 36(%rdi)
	movl	%eax, 40(%rdi)
	movq	(%rdi), %rax
	.cfi_escape 0x2e, 0x00
	callq	*104(%rax)
	andb	%al, 56(%rbx)
	movq	(%rbx), %rax
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	callq	*112(%rax)
	andb	%al, 56(%rbx)
	movq	(%rbx), %rax
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	callq	*120(%rax)
	andb	%al, 56(%rbx)
	movq	(%rbx), %rax
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	callq	*128(%rax)
	movzbl	%al, %eax
	movzbl	56(%rbx), %ecx
	andl	%eax, %ecx
	movb	%cl, 56(%rbx)
	je	.LBB84_6
# %bb.1:                                # %if.then
	movb	_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance(%rip), %al
	testb	%al, %al
	je	.LBB84_2
.LBB84_5:                               # %_ZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEv.exit
	addq	$16, %r14
	movq	_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance(%rip), %rdi
	.cfi_escape 0x2e, 0x00
	movq	%r14, %rsi
	callq	_ZN12GemmResourceIDF16_fE13resizeStorageERKSt5tupleIJlllEE
	movq	_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance(%rip), %rax
	movq	64(%rax), %rax
	movl	16(%rbx), %ecx
	movl	24(%rbx), %edx
	movq	%rax, 32(%rsp)
	movl	%ecx, 8(%rsp)
	movl	%edx, 12(%rsp)
	movq	$_ZZN10MatrixUtilI9col_majorE4fillIDF16_EEvPT_jjENUljjjE0_8__invokeEjjj, 16(%rsp)
	movl	%ecx, 28(%rsp)
	.cfi_escape 0x2e, 0x10
	leaq	32(%rsp), %r12
	leaq	28(%rsp), %r15
	leaq	8(%rsp), %rcx
	leaq	12(%rsp), %r8
	leaq	16(%rsp), %r9
	movl	$.L__unnamed_1, %edi
	movl	$.omp_outlined., %edx
	movl	$5, %esi
	xorl	%eax, %eax
	pushq	%r12
	.cfi_adjust_cfa_offset 8
	pushq	%r15
	.cfi_adjust_cfa_offset 8
	callq	__kmpc_fork_call@PLT
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movq	_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance(%rip), %rax
	movq	72(%rax), %rax
	movl	20(%rbx), %ecx
	movl	24(%rbx), %edx
	movq	%rax, 32(%rsp)
	movl	%edx, 8(%rsp)
	movl	%ecx, 12(%rsp)
	movq	$_ZZN10MatrixUtilI9row_majorE4fillIDF16_EEvPT_jjENUljjjE_8__invokeEjjj, 16(%rsp)
	movl	%ecx, 28(%rsp)
	.cfi_escape 0x2e, 0x10
	leaq	8(%rsp), %rcx
	leaq	12(%rsp), %r8
	leaq	16(%rsp), %r9
	movl	$.L__unnamed_1, %edi
	movl	$.omp_outlined..57, %edx
	movl	$5, %esi
	xorl	%eax, %eax
	pushq	%r12
	.cfi_adjust_cfa_offset 8
	pushq	%r15
	.cfi_adjust_cfa_offset 8
	callq	__kmpc_fork_call@PLT
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movq	_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance(%rip), %rax
	movq	80(%rax), %rax
	movl	16(%rbx), %ecx
	movl	20(%rbx), %edx
	movq	%rax, 32(%rsp)
	movl	%ecx, 8(%rsp)
	movl	%edx, 12(%rsp)
	movq	$_ZZN10MatrixUtilI9col_majorE4fillIfEEvPT_jjENUljjjE0_8__invokeEjjj, 16(%rsp)
	movl	%ecx, 28(%rsp)
	.cfi_escape 0x2e, 0x10
	leaq	8(%rsp), %rcx
	leaq	12(%rsp), %r14
	leaq	16(%rsp), %r9
	movl	$.L__unnamed_1, %edi
	movl	$.omp_outlined..59, %edx
	movl	$5, %esi
	movq	%r14, %r8
	xorl	%eax, %eax
	pushq	%r12
	.cfi_adjust_cfa_offset 8
	pushq	%r15
	.cfi_adjust_cfa_offset 8
	callq	__kmpc_fork_call@PLT
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movq	_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance(%rip), %rax
	movq	88(%rax), %rax
	movl	16(%rbx), %ecx
	movl	20(%rbx), %edx
	movq	%rax, 32(%rsp)
	movl	%ecx, 16(%rsp)
	movl	%edx, 8(%rsp)
	movl	$2141192192, 12(%rsp)           # imm = 0x7FA00000
	.cfi_escape 0x2e, 0x10
	subq	$8, %rsp
	.cfi_adjust_cfa_offset 8
	leaq	24(%rsp), %rcx
	leaq	16(%rsp), %r8
	leaq	40(%rsp), %r9
	movl	$.L__unnamed_1, %edi
	movl	$.omp_outlined..61, %edx
	movl	$4, %esi
	xorl	%eax, %eax
	pushq	%r14
	.cfi_adjust_cfa_offset 8
	callq	__kmpc_fork_call@PLT
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	movq	_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance(%rip), %rbx
	leaq	64(%rbx), %rsi
	movq	136(%rbx), %rdx
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	callq	_ZN11HipResource8copyDataIDF16_EEvRSt10unique_ptrIT_PFvPS2_EERKS1_IA_S2_St14default_deleteIS8_EEl
	leaq	16(%rbx), %rdi
	leaq	72(%rbx), %rsi
	movq	128(%rbx), %rdx
	.cfi_escape 0x2e, 0x00
	callq	_ZN11HipResource8copyDataIDF16_EEvRSt10unique_ptrIT_PFvPS2_EERKS1_IA_S2_St14default_deleteIS8_EEl
	leaq	32(%rbx), %rdi
	leaq	80(%rbx), %rsi
	movq	120(%rbx), %rdx
	.cfi_escape 0x2e, 0x00
	callq	_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIT_PFvPS2_EERKS1_IA_S2_St14default_deleteIS8_EEl
	leaq	48(%rbx), %rdi
	movq	120(%rbx), %rdx
	addq	$88, %rbx
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rsi
	callq	_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIT_PFvPS2_EERKS1_IA_S2_St14default_deleteIS8_EEl
.LBB84_6:                               # %if.end
	addq	$40, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB84_2:                               # %init.check.i
	.cfi_def_cfa_offset 80
	.cfi_escape 0x2e, 0x00
	movl	$_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %edi
	callq	__cxa_guard_acquire
	testl	%eax, %eax
	je	.LBB84_5
# %bb.3:                                # %init.i
.Ltmp440:
	.cfi_escape 0x2e, 0x00
	movl	$144, %edi
	callq	_Znwm
.Ltmp441:
# %bb.4:                                # %invoke.cont.i
	movq	$_ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E_8__invokeES7_, (%rax)
	movq	$0, 8(%rax)
	movq	$_ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E_8__invokeES7_, 16(%rax)
	movq	$0, 24(%rax)
	movq	$_ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE_8__invokeES7_, 32(%rax)
	movq	$0, 40(%rax)
	movq	$_ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE_8__invokeES7_, 48(%rax)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 56(%rax)
	movups	%xmm0, 72(%rax)
	movups	%xmm0, 88(%rax)
	movups	%xmm0, 104(%rax)
	movups	%xmm0, 120(%rax)
	movq	$0, 136(%rax)
	movq	%rax, _ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance(%rip)
	.cfi_escape 0x2e, 0x00
	movl	$_ZNSt10unique_ptrI12GemmResourceIDF16_fESt14default_deleteIS1_EED2Ev, %edi
	movl	$_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %esi
	movl	$__dso_handle, %edx
	callq	__cxa_atexit
	.cfi_escape 0x2e, 0x00
	movl	$_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %edi
	callq	__cxa_guard_release
	jmp	.LBB84_5
.LBB84_7:                               # %lpad.i
.Ltmp442:
	movq	%rax, %rbx
	.cfi_escape 0x2e, 0x00
	movl	$_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %edi
	callq	__cxa_guard_abort
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end84:
	.size	_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E5setupERK13ProblemParams, .Lfunc_end84-_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E5setupERK13ProblemParams
	.cfi_endproc
	.section	.gcc_except_table._ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E5setupERK13ProblemParams,"aG",@progbits,_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E5setupERK13ProblemParams,comdat
	.p2align	2
GCC_except_table84:
.Lexception23:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end23-.Lcst_begin23
.Lcst_begin23:
	.uleb128 .Lfunc_begin23-.Lfunc_begin23  # >> Call Site 1 <<
	.uleb128 .Ltmp440-.Lfunc_begin23        #   Call between .Lfunc_begin23 and .Ltmp440
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp440-.Lfunc_begin23        # >> Call Site 2 <<
	.uleb128 .Ltmp441-.Ltmp440              #   Call between .Ltmp440 and .Ltmp441
	.uleb128 .Ltmp442-.Lfunc_begin23        #     jumps to .Ltmp442
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp441-.Lfunc_begin23        # >> Call Site 3 <<
	.uleb128 .Lfunc_end84-.Ltmp441          #   Call between .Ltmp441 and .Lfunc_end84
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end23:
	.p2align	2
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	3                               # -- Begin function _ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEv
.LCPI85_0:
	.quad	0xbff0000000000000              # double -1
	.quad	0x40fb166666666667              # double 110950.40000000001
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI85_1:
	.quad	0x41004e147ae147ae              # double 133570.56
.LCPI85_2:
	.quad	0x3e112e0be826d695              # double 1.0000000000000001E-9
.LCPI85_3:
	.quad	0x408f400000000000              # double 1000
.LCPI85_4:
	.quad	0x4059000000000000              # double 100
	.section	.text._ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEv,"axG",@progbits,_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEv,comdat
	.weak	_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEv
	.p2align	4, 0x90
	.type	_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEv,@function
_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEv: # @_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEv
.Lfunc_begin24:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception24
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$136, %rsp
	.cfi_def_cfa_offset 176
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	cmpb	$0, 56(%rdi)
	je	.LBB85_63
# %bb.1:                                # %if.then
	movq	%rdi, %r15
	movq	%rdi, 104(%rsp)
	leaq	32(%rsp), %rdi
	callq	hipEventCreate
	testl	%eax, %eax
	jne	.LBB85_66
# %bb.2:                                # %if.end
	leaq	64(%rsp), %rdi
	callq	hipEventCreate
	testl	%eax, %eax
	jne	.LBB85_67
# %bb.3:                                # %if.end14
	movq	32(%rsp), %rdi
	xorl	%esi, %esi
	callq	hipEventRecord
	testl	%eax, %eax
	jne	.LBB85_68
# %bb.4:                                # %for.cond.preheader
	cmpl	$0, 52(%r15)
	je	.LBB85_7
# %bb.5:                                # %for.body.preheader
	xorl	%ebp, %ebp
	leaq	104(%rsp), %rbx
	.p2align	4, 0x90
.LBB85_6:                               # %for.body
                                        # =>This Inner Loop Header: Depth=1
	movq	%rbx, %rdi
	callq	_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE_clEv
	addl	$1, %ebp
	cmpl	52(%r15), %ebp
	jb	.LBB85_6
.LBB85_7:                               # %for.cond.cleanup
	movq	64(%rsp), %rdi
	xorl	%esi, %esi
	callq	hipEventRecord
	testl	%eax, %eax
	jne	.LBB85_69
# %bb.8:                                # %if.end31
	movq	64(%rsp), %rdi
	callq	hipEventSynchronize
	testl	%eax, %eax
	jne	.LBB85_70
# %bb.9:                                # %if.end39
	movl	$0, 16(%rsp)
	movq	32(%rsp), %rsi
	movq	64(%rsp), %rdx
	leaq	16(%rsp), %rdi
	callq	hipEventElapsedTime
	testl	%eax, %eax
	jne	.LBB85_71
# %bb.10:                               # %if.end47
	movb	_ZGVZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance(%rip), %al
	testb	%al, %al
	je	.LBB85_72
.LBB85_11:                              # %_ZN13LazySingletonI9HipDeviceE8instanceEv.exit
	movq	_ZZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance(%rip), %rax
	movl	804(%rax), %edx
	xorl	%eax, %eax
	cmpl	$2314, %edx                     # imm = 0x90A
	sete	%cl
	cmpl	$2312, %edx                     # imm = 0x908
	je	.LBB85_13
# %bb.12:                               # %_ZN13LazySingletonI9HipDeviceE8instanceEv.exit
	movb	%cl, %al
	movsd	.LCPI85_0(,%rax,8), %xmm0       # xmm0 = mem[0],zero
	jmp	.LBB85_14
.LBB85_13:
	movsd	.LCPI85_1(%rip), %xmm0          # xmm0 = mem[0],zero
.LBB85_14:                              # %_ZN13LazySingletonI9HipDeviceE8instanceEv.exit
	movss	16(%rsp), %xmm1                 # xmm1 = mem[0],zero,zero,zero
	cvtss2sd	%xmm1, %xmm1
	movsd	%xmm1, 72(%r15)
	movl	16(%r15), %eax
	movl	20(%r15), %ecx
	movl	24(%r15), %edx
	cvtsi2sd	%rax, %xmm2
	addsd	%xmm2, %xmm2
	cvtsi2sd	%rcx, %xmm3
	cvtsi2sd	%rdx, %xmm4
	mulsd	%xmm2, %xmm3
	mulsd	%xmm3, %xmm4
	mulsd	.LCPI85_2(%rip), %xmm4
	movsd	%xmm4, 80(%r15)
	divsd	%xmm1, %xmm4
	mulsd	.LCPI85_3(%rip), %xmm4
	movl	52(%r15), %eax
	xorps	%xmm1, %xmm1
	cvtsi2sd	%rax, %xmm1
	mulsd	%xmm4, %xmm1
	movsd	%xmm1, 88(%r15)
	divsd	%xmm0, %xmm1
	mulsd	.LCPI85_4(%rip), %xmm1
	movsd	%xmm1, 96(%r15)
	movq	32(%rsp), %rdi
	callq	hipEventDestroy
	testl	%eax, %eax
	jne	.LBB85_75
# %bb.15:                               # %if.end68
	movq	64(%rsp), %rdi
	callq	hipEventDestroy
	testl	%eax, %eax
	jne	.LBB85_76
# %bb.16:                               # %if.end76
	movq	$0, 80(%rsp)
.Ltmp446:
	leaq	16(%rsp), %r14
	movq	%r14, %rdi
	callq	rocblas_create_handle
.Ltmp447:
# %bb.17:                               # %invoke.cont
	testl	%eax, %eax
	jne	.LBB85_77
# %bb.18:                               # %if.end88
	movb	_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance(%rip), %al
	testb	%al, %al
	je	.LBB85_81
.LBB85_19:                              # %invoke.cont92
	movq	%r15, 32(%rsp)
	movq	%r14, 40(%rsp)
	movq	32(%rsp), %rax
	movq	40(%rsp), %rcx
	movapd	64(%rsp), %xmm0
	movapd	%xmm0, 32(%rsp)
	movq	%rax, 64(%rsp)
	movq	%rcx, 72(%rsp)
	movq	80(%rsp), %rax
	movq	%rax, 48(%rsp)
	movq	$_ZNSt14_Function_base13_Base_managerIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE0_E10_M_managerERSt9_Any_dataRKS7_St18_Manager_operation, 80(%rsp)
	movq	88(%rsp), %rcx
	movq	%rcx, 56(%rsp)
	movq	$_ZNSt17_Function_handlerIFvvEZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE0_E9_M_invokeERKSt9_Any_data, 88(%rsp)
	testq	%rax, %rax
	je	.LBB85_21
# %bb.20:                               # %if.then.i.i
.Ltmp458:
	leaq	32(%rsp), %rdi
	movq	%rdi, %rsi
	movl	$3, %edx
	callq	*%rax
.Ltmp459:
.LBB85_21:                              # %invoke.cont94
	movl	20(%r15), %r14d
	imull	16(%r15), %r14d
	testl	%r14d, %r14d
	je	.LBB85_24
# %bb.22:                               # %if.else.i
	leaq	(,%r14,4), %rdi
.Ltmp461:
	callq	_Znam
.Ltmp462:
# %bb.23:                               # %call.i.noexc
	movq	%rax, 32(%rsp)
	jmp	.LBB85_25
.LBB85_24:                              # %if.then.i
	movq	$0, 32(%rsp)
.LBB85_25:                              # %invoke.cont102
	movq	_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance(%rip), %rsi
	addq	$48, %rsi
.Ltmp464:
	leaq	32(%rsp), %rdi
	movq	%r14, %rdx
	callq	_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIA_T_St14default_deleteIS3_EERKS1_IS2_PFvPS2_EEl
.Ltmp465:
# %bb.26:                               # %invoke.cont112
	movq	_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance(%rip), %rsi
	leaq	48(%rsi), %rdi
	addq	$88, %rsi
	movl	20(%r15), %edx
	imull	16(%r15), %edx
.Ltmp466:
	callq	_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIT_PFvPS2_EERKS1_IA_S2_St14default_deleteIS8_EEl
.Ltmp467:
# %bb.27:                               # %invoke.cont123
	movq	_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance(%rip), %rdi
	addq	$88, %rdi
	movl	20(%r15), %edx
	imull	16(%r15), %edx
.Ltmp468:
	leaq	32(%rsp), %rsi
	callq	_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIA_T_St14default_deleteIS3_EERKS6_l
.Ltmp469:
# %bb.28:                               # %invoke.cont131
	movq	32(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB85_30
# %bb.29:                               # %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i
	callq	_ZdaPv
.LBB85_30:                              # %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit
	movq	80(%rsp), %r14
	testq	%r14, %r14
	jne	.LBB85_32
# %bb.31:                               # %_ZNSt8functionIFvvEEaSIRZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS4_S4_E4execEvEUlvE1_EENSt9enable_ifIXsrNS1_9_CallableINSt5decayIT_E4typeENSt9result_ofIFRSE_vEE4typeEEE5valueERS1_E4typeEOSC_.exit
	movq	%r15, 64(%rsp)
	movq	$_ZNSt14_Function_base13_Base_managerIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE1_E10_M_managerERSt9_Any_dataRKS7_St18_Manager_operation, 80(%rsp)
	movq	$_ZNSt17_Function_handlerIFvvEZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE1_E9_M_invokeERKSt9_Any_data, 88(%rsp)
.LBB85_32:                              # %if.then140
.Ltmp471:
	leaq	32(%rsp), %rdi
	callq	hipEventCreate
.Ltmp472:
# %bb.33:                               # %invoke.cont144
	testl	%eax, %eax
	jne	.LBB85_84
# %bb.34:                               # %if.end156
.Ltmp479:
	leaq	8(%rsp), %rdi
	callq	hipEventCreate
.Ltmp480:
# %bb.35:                               # %invoke.cont157
	testl	%eax, %eax
	jne	.LBB85_88
# %bb.36:                               # %if.end169
	movq	32(%rsp), %rdi
.Ltmp487:
	xorl	%esi, %esi
	callq	hipEventRecord
.Ltmp488:
# %bb.37:                               # %invoke.cont170
	testl	%eax, %eax
	jne	.LBB85_92
# %bb.38:                               # %for.cond184.preheader
	cmpl	$0, 52(%r15)
	je	.LBB85_43
# %bb.39:                               # %for.body188.preheader
	xorl	%ebp, %ebp
	leaq	64(%rsp), %rbx
	.p2align	4, 0x90
.LBB85_40:                              # %for.body188
                                        # =>This Inner Loop Header: Depth=1
	cmpq	$0, 80(%rsp)
	je	.LBB85_64
# %bb.41:                               # %if.end.i
                                        #   in Loop: Header=BB85_40 Depth=1
.Ltmp495:
	movq	%rbx, %rdi
	callq	*88(%rsp)
.Ltmp496:
# %bb.42:                               # %for.inc191
                                        #   in Loop: Header=BB85_40 Depth=1
	addl	$1, %ebp
	cmpl	52(%r15), %ebp
	jb	.LBB85_40
.LBB85_43:                              # %for.cond.cleanup187
	movq	8(%rsp), %rdi
.Ltmp501:
	xorl	%esi, %esi
	callq	hipEventRecord
.Ltmp502:
# %bb.44:                               # %invoke.cont195
	testl	%eax, %eax
	jne	.LBB85_96
# %bb.45:                               # %if.end207
	movq	8(%rsp), %rdi
.Ltmp509:
	callq	hipEventSynchronize
.Ltmp510:
# %bb.46:                               # %invoke.cont208
	testl	%eax, %eax
	jne	.LBB85_100
# %bb.47:                               # %if.end220
	movl	$0, 28(%rsp)
	movq	32(%rsp), %rsi
	movq	8(%rsp), %rdx
.Ltmp518:
	leaq	28(%rsp), %rdi
	callq	hipEventElapsedTime
.Ltmp519:
# %bb.48:                               # %invoke.cont223
	testl	%eax, %eax
	jne	.LBB85_104
# %bb.49:                               # %if.end235
	testq	%r14, %r14
	je	.LBB85_55
# %bb.50:                               # %if.then237
	movb	_ZGVZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance(%rip), %al
	testb	%al, %al
	je	.LBB85_120
.LBB85_51:                              # %invoke.cont245
	movq	_ZZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance(%rip), %rax
	movl	804(%rax), %edx
	xorl	%eax, %eax
	cmpl	$2314, %edx                     # imm = 0x90A
	sete	%cl
	cmpl	$2312, %edx                     # imm = 0x908
	je	.LBB85_53
# %bb.52:                               # %invoke.cont245
	movb	%cl, %al
	movsd	.LCPI85_0(,%rax,8), %xmm0       # xmm0 = mem[0],zero
	jmp	.LBB85_54
.LBB85_53:
	movsd	.LCPI85_1(%rip), %xmm0          # xmm0 = mem[0],zero
.LBB85_54:                              # %invoke.cont245
	movl	16(%r15), %eax
	movl	20(%r15), %ecx
	movl	24(%r15), %edx
	cvtsi2sd	%rax, %xmm1
	cvtsi2sd	%rcx, %xmm2
	addsd	%xmm1, %xmm1
	mulsd	%xmm1, %xmm2
	xorps	%xmm1, %xmm1
	cvtsi2sd	%rdx, %xmm1
	movss	28(%rsp), %xmm3                 # xmm3 = mem[0],zero,zero,zero
	mulsd	%xmm2, %xmm1
	mulsd	.LCPI85_2(%rip), %xmm1
	xorps	%xmm2, %xmm2
	cvtss2sd	%xmm3, %xmm2
	divsd	%xmm2, %xmm1
	mulsd	.LCPI85_3(%rip), %xmm1
	movl	52(%r15), %eax
	xorps	%xmm2, %xmm2
	cvtsi2sd	%rax, %xmm2
	mulsd	%xmm1, %xmm2
	divsd	%xmm0, %xmm2
	mulsd	.LCPI85_4(%rip), %xmm2
	movsd	%xmm2, 104(%r15)
.LBB85_55:                              # %if.end263
	movq	32(%rsp), %rdi
.Ltmp529:
	callq	hipEventDestroy
.Ltmp530:
# %bb.56:                               # %invoke.cont264
	testl	%eax, %eax
	jne	.LBB85_108
# %bb.57:                               # %if.end276
	movq	8(%rsp), %rdi
.Ltmp537:
	callq	hipEventDestroy
.Ltmp538:
# %bb.58:                               # %invoke.cont277
	testl	%eax, %eax
	jne	.LBB85_112
# %bb.59:                               # %if.then.i402
	movq	16(%rsp), %rdi
.Ltmp549:
	callq	rocblas_destroy_handle
.Ltmp550:
# %bb.60:                               # %call.i.i448.noexc
	testl	%eax, %eax
	jne	.LBB85_116
# %bb.61:                               # %_ZNSt10unique_ptrIP15_rocblas_handlePFvPS1_EED2Ev.exit
	movq	80(%rsp), %rax
	testq	%rax, %rax
	je	.LBB85_63
# %bb.62:                               # %if.then.i407
.Ltmp558:
	leaq	64(%rsp), %rdi
	movq	%rdi, %rsi
	movl	$3, %edx
	callq	*%rax
.Ltmp559:
.LBB85_63:                              # %if.end303
	addq	$136, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB85_64:                              # %if.then.i376
	.cfi_def_cfa_offset 176
.Ltmp498:
	callq	_ZSt25__throw_bad_function_callv
.Ltmp499:
# %bb.65:                               # %.noexc
.LBB85_66:                              # %if.then2
	movq	stderr(%rip), %r14
	leaq	32(%rsp), %r15
	movq	%r15, %rdi
	callq	hipEventCreate
	movl	%eax, %edi
	callq	hipGetErrorString
	movq	%rax, %rbx
	movq	%r15, %rdi
	callq	hipEventCreate
	movl	$.L.str.54, %esi
	movl	$.L.str.62, %r8d
	movq	%r14, %rdi
	movq	%rbx, %rdx
	movl	%eax, %ecx
	movl	$541, %r9d                      # imm = 0x21D
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.LBB85_67:                              # %if.then9
	movq	stderr(%rip), %r14
	leaq	64(%rsp), %r15
	movq	%r15, %rdi
	callq	hipEventCreate
	movl	%eax, %edi
	callq	hipGetErrorString
	movq	%rax, %rbx
	movq	%r15, %rdi
	callq	hipEventCreate
	movl	$.L.str.54, %esi
	movl	$.L.str.62, %r8d
	movq	%r14, %rdi
	movq	%rbx, %rdx
	movl	%eax, %ecx
	movl	$542, %r9d                      # imm = 0x21E
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.LBB85_68:                              # %if.then17
	movq	stderr(%rip), %r14
	movq	32(%rsp), %rdi
	xorl	%esi, %esi
	callq	hipEventRecord
	movl	%eax, %edi
	callq	hipGetErrorString
	movq	%rax, %rbx
	movq	32(%rsp), %rdi
	xorl	%esi, %esi
	callq	hipEventRecord
	movl	$.L.str.54, %esi
	movl	$.L.str.62, %r8d
	movq	%r14, %rdi
	movq	%rbx, %rdx
	movl	%eax, %ecx
	movl	$544, %r9d                      # imm = 0x220
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.LBB85_69:                              # %if.then26
	movq	stderr(%rip), %r14
	movq	64(%rsp), %rdi
	xorl	%esi, %esi
	callq	hipEventRecord
	movl	%eax, %edi
	callq	hipGetErrorString
	movq	%rax, %rbx
	movq	64(%rsp), %rdi
	xorl	%esi, %esi
	callq	hipEventRecord
	movl	$.L.str.54, %esi
	movl	$.L.str.62, %r8d
	movq	%r14, %rdi
	movq	%rbx, %rdx
	movl	%eax, %ecx
	movl	$549, %r9d                      # imm = 0x225
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.LBB85_70:                              # %if.then34
	movq	stderr(%rip), %r14
	movq	64(%rsp), %rdi
	callq	hipEventSynchronize
	movl	%eax, %edi
	callq	hipGetErrorString
	movq	%rax, %rbx
	movq	64(%rsp), %rdi
	callq	hipEventSynchronize
	movl	$.L.str.54, %esi
	movl	$.L.str.62, %r8d
	movq	%r14, %rdi
	movq	%rbx, %rdx
	movl	%eax, %ecx
	movl	$550, %r9d                      # imm = 0x226
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.LBB85_71:                              # %if.then42
	movq	stderr(%rip), %r14
	movq	32(%rsp), %rsi
	movq	64(%rsp), %rdx
	leaq	16(%rsp), %r15
	movq	%r15, %rdi
	callq	hipEventElapsedTime
	movl	%eax, %edi
	callq	hipGetErrorString
	movq	%rax, %rbx
	movq	32(%rsp), %rsi
	movq	64(%rsp), %rdx
	movq	%r15, %rdi
	callq	hipEventElapsedTime
	movl	$.L.str.54, %esi
	movl	$.L.str.62, %r8d
	movq	%r14, %rdi
	movq	%rbx, %rdx
	movl	%eax, %ecx
	movl	$553, %r9d                      # imm = 0x229
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.LBB85_72:                              # %init.check.i
	movl	$_ZGVZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance, %edi
	callq	__cxa_guard_acquire
	testl	%eax, %eax
	je	.LBB85_11
# %bb.73:                               # %init.i
.Ltmp443:
	movl	$_ZZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance, %edi
	callq	_ZSt11make_uniqueI9HipDeviceJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_
.Ltmp444:
# %bb.74:                               # %invoke.cont.i
	movl	$_ZNSt10unique_ptrI9HipDeviceSt14default_deleteIS0_EED2Ev, %edi
	movl	$_ZZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance, %esi
	movl	$__dso_handle, %edx
	callq	__cxa_atexit
	movl	$_ZGVZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance, %edi
	callq	__cxa_guard_release
	jmp	.LBB85_11
.LBB85_75:                              # %if.then63
	movq	stderr(%rip), %r14
	movq	32(%rsp), %rdi
	callq	hipEventDestroy
	movl	%eax, %edi
	callq	hipGetErrorString
	movq	%rax, %rbx
	movq	32(%rsp), %rdi
	callq	hipEventDestroy
	movl	$.L.str.54, %esi
	movl	$.L.str.62, %r8d
	movq	%r14, %rdi
	movq	%rbx, %rdx
	movl	%eax, %ecx
	movl	$565, %r9d                      # imm = 0x235
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.LBB85_76:                              # %if.then71
	movq	stderr(%rip), %r14
	movq	64(%rsp), %rdi
	callq	hipEventDestroy
	movl	%eax, %edi
	callq	hipGetErrorString
	movq	%rax, %rbx
	movq	64(%rsp), %rdi
	callq	hipEventDestroy
	movl	$.L.str.54, %esi
	movl	$.L.str.62, %r8d
	movq	%r14, %rdi
	movq	%rbx, %rdx
	movl	%eax, %ecx
	movl	$566, %r9d                      # imm = 0x236
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.LBB85_77:                              # %if.then79
	movq	stderr(%rip), %rbx
.Ltmp448:
	leaq	16(%rsp), %rdi
	callq	rocblas_create_handle
.Ltmp449:
# %bb.78:                               # %invoke.cont80
.Ltmp450:
	movl	%eax, %edi
	callq	rocblas_status_to_string
.Ltmp451:
# %bb.79:                               # %invoke.cont82
	movq	%rax, %r14
.Ltmp452:
	leaq	16(%rsp), %rdi
	callq	rocblas_create_handle
.Ltmp453:
# %bb.80:                               # %invoke.cont84
	movl	$.L.str.63, %esi
	movl	$.L.str.62, %r8d
	movq	%rbx, %rdi
	movq	%r14, %rdx
	movl	%eax, %ecx
	movl	$580, %r9d                      # imm = 0x244
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.LBB85_81:                              # %init.check.i343
	movl	$_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %edi
	callq	__cxa_guard_acquire
	testl	%eax, %eax
	je	.LBB85_19
# %bb.82:                               # %init.i344
.Ltmp455:
	movl	$_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %edi
	callq	_ZSt11make_uniqueI12GemmResourceIDF16_fEJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_
.Ltmp456:
# %bb.83:                               # %invoke.cont.i345
	movl	$_ZNSt10unique_ptrI12GemmResourceIDF16_fESt14default_deleteIS1_EED2Ev, %edi
	movl	$_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %esi
	movl	$__dso_handle, %edx
	callq	__cxa_atexit
	movl	$_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %edi
	callq	__cxa_guard_release
	jmp	.LBB85_19
.LBB85_84:                              # %if.then147
	movq	stderr(%rip), %rbx
.Ltmp473:
	leaq	32(%rsp), %rdi
	callq	hipEventCreate
.Ltmp474:
# %bb.85:                               # %invoke.cont148
.Ltmp475:
	movl	%eax, %edi
	callq	hipGetErrorString
.Ltmp476:
# %bb.86:                               # %invoke.cont150
	movq	%rax, %r14
.Ltmp477:
	leaq	32(%rsp), %rdi
	callq	hipEventCreate
.Ltmp478:
# %bb.87:                               # %invoke.cont152
	movl	$.L.str.54, %esi
	movl	$.L.str.62, %r8d
	movq	%rbx, %rdi
	movq	%r14, %rdx
	movl	%eax, %ecx
	movl	$673, %r9d                      # imm = 0x2A1
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.LBB85_88:                              # %if.then160
	movq	stderr(%rip), %rbx
.Ltmp481:
	leaq	8(%rsp), %rdi
	callq	hipEventCreate
.Ltmp482:
# %bb.89:                               # %invoke.cont161
.Ltmp483:
	movl	%eax, %edi
	callq	hipGetErrorString
.Ltmp484:
# %bb.90:                               # %invoke.cont163
	movq	%rax, %r14
.Ltmp485:
	leaq	8(%rsp), %rdi
	callq	hipEventCreate
.Ltmp486:
# %bb.91:                               # %invoke.cont165
	movl	$.L.str.54, %esi
	movl	$.L.str.62, %r8d
	movq	%rbx, %rdi
	movq	%r14, %rdx
	movl	%eax, %ecx
	movl	$674, %r9d                      # imm = 0x2A2
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.LBB85_92:                              # %if.then173
	movq	stderr(%rip), %rbx
	movq	32(%rsp), %rdi
.Ltmp489:
	xorl	%esi, %esi
	callq	hipEventRecord
.Ltmp490:
# %bb.93:                               # %invoke.cont174
.Ltmp491:
	movl	%eax, %edi
	callq	hipGetErrorString
.Ltmp492:
# %bb.94:                               # %invoke.cont176
	movq	%rax, %r14
	movq	32(%rsp), %rdi
.Ltmp493:
	xorl	%esi, %esi
	callq	hipEventRecord
.Ltmp494:
# %bb.95:                               # %invoke.cont178
	movl	$.L.str.54, %esi
	movl	$.L.str.62, %r8d
	movq	%rbx, %rdi
	movq	%r14, %rdx
	movl	%eax, %ecx
	movl	$676, %r9d                      # imm = 0x2A4
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.LBB85_96:                              # %if.then198
	movq	stderr(%rip), %rbx
	movq	8(%rsp), %rdi
.Ltmp503:
	xorl	%esi, %esi
	callq	hipEventRecord
.Ltmp504:
# %bb.97:                               # %invoke.cont199
.Ltmp505:
	movl	%eax, %edi
	callq	hipGetErrorString
.Ltmp506:
# %bb.98:                               # %invoke.cont201
	movq	%rax, %r14
	movq	8(%rsp), %rdi
.Ltmp507:
	xorl	%esi, %esi
	callq	hipEventRecord
.Ltmp508:
# %bb.99:                               # %invoke.cont203
	movl	$.L.str.54, %esi
	movl	$.L.str.62, %r8d
	movq	%rbx, %rdi
	movq	%r14, %rdx
	movl	%eax, %ecx
	movl	$681, %r9d                      # imm = 0x2A9
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.LBB85_100:                             # %if.then211
	movq	stderr(%rip), %rbx
	movq	8(%rsp), %rdi
.Ltmp511:
	callq	hipEventSynchronize
.Ltmp512:
# %bb.101:                              # %invoke.cont212
.Ltmp513:
	movl	%eax, %edi
	callq	hipGetErrorString
.Ltmp514:
# %bb.102:                              # %invoke.cont214
	movq	%rax, %r14
	movq	8(%rsp), %rdi
.Ltmp515:
	callq	hipEventSynchronize
.Ltmp516:
# %bb.103:                              # %invoke.cont216
	movl	$.L.str.54, %esi
	movl	$.L.str.62, %r8d
	movq	%rbx, %rdi
	movq	%r14, %rdx
	movl	%eax, %ecx
	movl	$682, %r9d                      # imm = 0x2AA
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.LBB85_104:                             # %if.then226
	movq	stderr(%rip), %rbx
	movq	32(%rsp), %rsi
	movq	8(%rsp), %rdx
.Ltmp520:
	leaq	28(%rsp), %rdi
	callq	hipEventElapsedTime
.Ltmp521:
# %bb.105:                              # %invoke.cont227
.Ltmp522:
	movl	%eax, %edi
	callq	hipGetErrorString
.Ltmp523:
# %bb.106:                              # %invoke.cont229
	movq	%rax, %r14
	movq	32(%rsp), %rsi
	movq	8(%rsp), %rdx
.Ltmp524:
	leaq	28(%rsp), %rdi
	callq	hipEventElapsedTime
.Ltmp525:
# %bb.107:                              # %invoke.cont231
	movl	$.L.str.54, %esi
	movl	$.L.str.62, %r8d
	movq	%rbx, %rdi
	movq	%r14, %rdx
	movl	%eax, %ecx
	movl	$685, %r9d                      # imm = 0x2AD
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.LBB85_108:                             # %if.then267
	movq	stderr(%rip), %rbx
	movq	32(%rsp), %rdi
.Ltmp531:
	callq	hipEventDestroy
.Ltmp532:
# %bb.109:                              # %invoke.cont268
.Ltmp533:
	movl	%eax, %edi
	callq	hipGetErrorString
.Ltmp534:
# %bb.110:                              # %invoke.cont270
	movq	%rax, %r14
	movq	32(%rsp), %rdi
.Ltmp535:
	callq	hipEventDestroy
.Ltmp536:
# %bb.111:                              # %invoke.cont272
	movl	$.L.str.54, %esi
	movl	$.L.str.62, %r8d
	movq	%rbx, %rdi
	movq	%r14, %rdx
	movl	%eax, %ecx
	movl	$699, %r9d                      # imm = 0x2BB
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.LBB85_112:                             # %if.then280
	movq	stderr(%rip), %rbx
	movq	8(%rsp), %rdi
.Ltmp539:
	callq	hipEventDestroy
.Ltmp540:
# %bb.113:                              # %invoke.cont281
.Ltmp541:
	movl	%eax, %edi
	callq	hipGetErrorString
.Ltmp542:
# %bb.114:                              # %invoke.cont283
	movq	%rax, %r14
	movq	8(%rsp), %rdi
.Ltmp543:
	callq	hipEventDestroy
.Ltmp544:
# %bb.115:                              # %invoke.cont285
	movl	$.L.str.54, %esi
	movl	$.L.str.62, %r8d
	movq	%rbx, %rdi
	movq	%r14, %rdx
	movl	%eax, %ecx
	movl	$700, %r9d                      # imm = 0x2BC
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.LBB85_116:                             # %if.then.i.i449
	movq	stderr(%rip), %rbx
	movq	16(%rsp), %rdi
.Ltmp551:
	callq	rocblas_destroy_handle
.Ltmp552:
# %bb.117:                              # %call2.i.i.noexc
.Ltmp553:
	movl	%eax, %edi
	callq	rocblas_status_to_string
.Ltmp554:
# %bb.118:                              # %call3.i.i.noexc
	movq	%rax, %r14
	movq	16(%rsp), %rdi
.Ltmp555:
	callq	rocblas_destroy_handle
.Ltmp556:
# %bb.119:                              # %call4.i.i.noexc
	movl	$.L.str.63, %esi
	movl	$.L.str.62, %r8d
	movq	%rbx, %rdi
	movq	%r14, %rdx
	movl	%eax, %ecx
	movl	$585, %r9d                      # imm = 0x249
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.LBB85_120:                             # %init.check.i380
	movl	$_ZGVZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance, %edi
	callq	__cxa_guard_acquire
	testl	%eax, %eax
	je	.LBB85_51
# %bb.121:                              # %init.i381
.Ltmp526:
	movl	$_ZZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance, %edi
	callq	_ZSt11make_uniqueI9HipDeviceJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_
.Ltmp527:
# %bb.122:                              # %invoke.cont.i382
	movl	$_ZNSt10unique_ptrI9HipDeviceSt14default_deleteIS0_EED2Ev, %edi
	movl	$_ZZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance, %esi
	movl	$__dso_handle, %edx
	callq	__cxa_atexit
	movl	$_ZGVZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance, %edi
	callq	__cxa_guard_release
	jmp	.LBB85_51
.LBB85_123:                             # %lpad.i383
.Ltmp528:
	movq	%rax, %rbx
	movl	$_ZGVZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance, %edi
	jmp	.LBB85_125
.LBB85_124:                             # %lpad.i346
.Ltmp457:
	movq	%rax, %rbx
	movl	$_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %edi
.LBB85_125:                             # %if.then.i412
	callq	__cxa_guard_abort
	jmp	.LBB85_139
.LBB85_126:                             # %lpad.i
.Ltmp445:
	movq	%rax, %rbx
	movl	$_ZGVZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance, %edi
	callq	__cxa_guard_abort
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB85_127:                             # %terminate.lpad.i
.Ltmp560:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB85_128:                             # %lpad101
.Ltmp463:
	jmp	.LBB85_138
.LBB85_129:                             # %terminate.lpad.i.i
.Ltmp460:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB85_130:                             # %lpad.i403
.Ltmp557:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB85_131:                             # %lpad
.Ltmp454:
	movq	%rax, %rbx
	jmp	.LBB85_140
.LBB85_132:                             # %lpad105
.Ltmp470:
	movq	%rax, %rbx
	movq	32(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB85_139
# %bb.133:                              # %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i370
	callq	_ZdaPv
	jmp	.LBB85_139
.LBB85_134:                             # %lpad222
.Ltmp545:
	jmp	.LBB85_138
.LBB85_135:                             # %lpad143
.Ltmp517:
	jmp	.LBB85_138
.LBB85_136:                             # %lpad189.loopexit
.Ltmp497:
	jmp	.LBB85_138
.LBB85_137:                             # %lpad189.loopexit.split-lp
.Ltmp500:
.LBB85_138:                             # %if.then.i412
	movq	%rax, %rbx
.LBB85_139:                             # %if.then.i412
.Ltmp546:
	leaq	16(%rsp), %rdi
	callq	_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENUlPP15_rocblas_handleE_8__invokeES5_
.Ltmp547:
.LBB85_140:                             # %ehcleanup298
	leaq	64(%rsp), %rdi
	callq	_ZNSt14_Function_baseD2Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB85_141:                             # %lpad.i413
.Ltmp548:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end85:
	.size	_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEv, .Lfunc_end85-_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEv
	.cfi_endproc
	.section	.gcc_except_table._ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEv,"aG",@progbits,_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEv,comdat
	.p2align	2
GCC_except_table85:
.Lexception24:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase8-.Lttbaseref8
.Lttbaseref8:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end24-.Lcst_begin24
.Lcst_begin24:
	.uleb128 .Lfunc_begin24-.Lfunc_begin24  # >> Call Site 1 <<
	.uleb128 .Ltmp446-.Lfunc_begin24        #   Call between .Lfunc_begin24 and .Ltmp446
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp446-.Lfunc_begin24        # >> Call Site 2 <<
	.uleb128 .Ltmp447-.Ltmp446              #   Call between .Ltmp446 and .Ltmp447
	.uleb128 .Ltmp454-.Lfunc_begin24        #     jumps to .Ltmp454
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp458-.Lfunc_begin24        # >> Call Site 3 <<
	.uleb128 .Ltmp459-.Ltmp458              #   Call between .Ltmp458 and .Ltmp459
	.uleb128 .Ltmp460-.Lfunc_begin24        #     jumps to .Ltmp460
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp461-.Lfunc_begin24        # >> Call Site 4 <<
	.uleb128 .Ltmp462-.Ltmp461              #   Call between .Ltmp461 and .Ltmp462
	.uleb128 .Ltmp463-.Lfunc_begin24        #     jumps to .Ltmp463
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp464-.Lfunc_begin24        # >> Call Site 5 <<
	.uleb128 .Ltmp469-.Ltmp464              #   Call between .Ltmp464 and .Ltmp469
	.uleb128 .Ltmp470-.Lfunc_begin24        #     jumps to .Ltmp470
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp471-.Lfunc_begin24        # >> Call Site 6 <<
	.uleb128 .Ltmp488-.Ltmp471              #   Call between .Ltmp471 and .Ltmp488
	.uleb128 .Ltmp517-.Lfunc_begin24        #     jumps to .Ltmp517
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp495-.Lfunc_begin24        # >> Call Site 7 <<
	.uleb128 .Ltmp496-.Ltmp495              #   Call between .Ltmp495 and .Ltmp496
	.uleb128 .Ltmp497-.Lfunc_begin24        #     jumps to .Ltmp497
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp501-.Lfunc_begin24        # >> Call Site 8 <<
	.uleb128 .Ltmp510-.Ltmp501              #   Call between .Ltmp501 and .Ltmp510
	.uleb128 .Ltmp517-.Lfunc_begin24        #     jumps to .Ltmp517
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp518-.Lfunc_begin24        # >> Call Site 9 <<
	.uleb128 .Ltmp538-.Ltmp518              #   Call between .Ltmp518 and .Ltmp538
	.uleb128 .Ltmp545-.Lfunc_begin24        #     jumps to .Ltmp545
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp549-.Lfunc_begin24        # >> Call Site 10 <<
	.uleb128 .Ltmp550-.Ltmp549              #   Call between .Ltmp549 and .Ltmp550
	.uleb128 .Ltmp557-.Lfunc_begin24        #     jumps to .Ltmp557
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp558-.Lfunc_begin24        # >> Call Site 11 <<
	.uleb128 .Ltmp559-.Ltmp558              #   Call between .Ltmp558 and .Ltmp559
	.uleb128 .Ltmp560-.Lfunc_begin24        #     jumps to .Ltmp560
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp498-.Lfunc_begin24        # >> Call Site 12 <<
	.uleb128 .Ltmp499-.Ltmp498              #   Call between .Ltmp498 and .Ltmp499
	.uleb128 .Ltmp500-.Lfunc_begin24        #     jumps to .Ltmp500
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp499-.Lfunc_begin24        # >> Call Site 13 <<
	.uleb128 .Ltmp443-.Ltmp499              #   Call between .Ltmp499 and .Ltmp443
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp443-.Lfunc_begin24        # >> Call Site 14 <<
	.uleb128 .Ltmp444-.Ltmp443              #   Call between .Ltmp443 and .Ltmp444
	.uleb128 .Ltmp445-.Lfunc_begin24        #     jumps to .Ltmp445
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp444-.Lfunc_begin24        # >> Call Site 15 <<
	.uleb128 .Ltmp448-.Ltmp444              #   Call between .Ltmp444 and .Ltmp448
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp448-.Lfunc_begin24        # >> Call Site 16 <<
	.uleb128 .Ltmp453-.Ltmp448              #   Call between .Ltmp448 and .Ltmp453
	.uleb128 .Ltmp454-.Lfunc_begin24        #     jumps to .Ltmp454
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp455-.Lfunc_begin24        # >> Call Site 17 <<
	.uleb128 .Ltmp456-.Ltmp455              #   Call between .Ltmp455 and .Ltmp456
	.uleb128 .Ltmp457-.Lfunc_begin24        #     jumps to .Ltmp457
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp473-.Lfunc_begin24        # >> Call Site 18 <<
	.uleb128 .Ltmp516-.Ltmp473              #   Call between .Ltmp473 and .Ltmp516
	.uleb128 .Ltmp517-.Lfunc_begin24        #     jumps to .Ltmp517
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp520-.Lfunc_begin24        # >> Call Site 19 <<
	.uleb128 .Ltmp544-.Ltmp520              #   Call between .Ltmp520 and .Ltmp544
	.uleb128 .Ltmp545-.Lfunc_begin24        #     jumps to .Ltmp545
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp551-.Lfunc_begin24        # >> Call Site 20 <<
	.uleb128 .Ltmp556-.Ltmp551              #   Call between .Ltmp551 and .Ltmp556
	.uleb128 .Ltmp557-.Lfunc_begin24        #     jumps to .Ltmp557
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp526-.Lfunc_begin24        # >> Call Site 21 <<
	.uleb128 .Ltmp527-.Ltmp526              #   Call between .Ltmp526 and .Ltmp527
	.uleb128 .Ltmp528-.Lfunc_begin24        #     jumps to .Ltmp528
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp527-.Lfunc_begin24        # >> Call Site 22 <<
	.uleb128 .Ltmp546-.Ltmp527              #   Call between .Ltmp527 and .Ltmp546
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp546-.Lfunc_begin24        # >> Call Site 23 <<
	.uleb128 .Ltmp547-.Ltmp546              #   Call between .Ltmp546 and .Ltmp547
	.uleb128 .Ltmp548-.Lfunc_begin24        #     jumps to .Ltmp548
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp547-.Lfunc_begin24        # >> Call Site 24 <<
	.uleb128 .Lfunc_end85-.Ltmp547          #   Call between .Ltmp547 and .Lfunc_end85
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end24:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase8:
	.p2align	2
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3                               # -- Begin function _ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E15validateResultsEv
.LCPI86_0:
	.quad	0x3eb4000000000000              # double 1.1920928955078125E-6
	.section	.text._ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E15validateResultsEv,"axG",@progbits,_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E15validateResultsEv,comdat
	.weak	_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E15validateResultsEv
	.p2align	4, 0x90
	.type	_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E15validateResultsEv,@function
_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E15validateResultsEv: # @_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E15validateResultsEv
.Lfunc_begin25:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception25
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$112, %rsp
	.cfi_def_cfa_offset 160
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	cmpb	$0, 56(%rdi)
	je	.LBB86_23
# %bb.1:                                # %if.then
	movq	%rdi, %r14
	movb	_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance(%rip), %al
	testb	%al, %al
	je	.LBB86_24
.LBB86_2:                               # %_ZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEv.exit
	movl	20(%r14), %ebx
	imull	16(%r14), %ebx
	testl	%ebx, %ebx
	je	.LBB86_4
# %bb.3:                                # %if.else.i
	leaq	(,%rbx,4), %rdi
	.cfi_escape 0x2e, 0x00
	callq	_Znam
	movq	%rax, 40(%rsp)
	jmp	.LBB86_5
.LBB86_4:                               # %if.then.i
	movq	$0, 40(%rsp)
.LBB86_5:                               # %_ZN11HipResource9allocHostIfEESt10unique_ptrIA_T_St14default_deleteIS3_EEl.exit
	movq	_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance(%rip), %rsi
	addq	$48, %rsi
.Ltmp564:
	.cfi_escape 0x2e, 0x00
	leaq	40(%rsp), %rdi
	movq	%rbx, %rdx
	callq	_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIA_T_St14default_deleteIS3_EERKS1_IS2_PFvPS2_EEl
.Ltmp565:
# %bb.6:                                # %invoke.cont13
	movq	_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance(%rip), %rax
	movq	40(%rsp), %rcx
	movq	88(%rax), %rax
	movl	16(%r14), %edx
	movl	20(%r14), %esi
	movq	%rcx, 80(%rsp)
	movq	%rax, 64(%rsp)
	movl	%edx, 32(%rsp)
	movl	%esi, 60(%rsp)
	movl	%edx, 56(%rsp)
	movl	%edx, 52(%rsp)
	movq	$0, 8(%rsp)
	.cfi_escape 0x2e, 0x30
	leaq	8(%rsp), %rbx
	leaq	64(%rsp), %r10
	leaq	16(%rsp), %r11
	leaq	80(%rsp), %r15
	leaq	24(%rsp), %r12
	leaq	52(%rsp), %r13
	leaq	32(%rsp), %rcx
	leaq	60(%rsp), %r8
	leaq	56(%rsp), %r9
	movl	$.L__unnamed_1, %edi
	movl	$.omp_outlined..69, %edx
	movl	$9, %esi
	movl	$0, %eax
	pushq	%rbx
	.cfi_adjust_cfa_offset 8
	pushq	%r10
	.cfi_adjust_cfa_offset 8
	pushq	%r11
	.cfi_adjust_cfa_offset 8
	pushq	%r15
	.cfi_adjust_cfa_offset 8
	pushq	%r12
	.cfi_adjust_cfa_offset 8
	pushq	%r13
	.cfi_adjust_cfa_offset 8
	callq	__kmpc_fork_call@PLT
	addq	$48, %rsp
	.cfi_adjust_cfa_offset -48
	movsd	8(%rsp), %xmm0                  # xmm0 = mem[0],zero
	ucomisd	%xmm0, %xmm0
	setnp	%al
	ucomisd	.LCPI86_0(%rip), %xmm0
	setbe	%cl
	andb	%al, %cl
	movb	%cl, 57(%r14)
	movsd	%xmm0, 64(%r14)
	movb	%cl, 64(%rsp)
	movq	$0, 72(%rsp)
	jne	.LBB86_21
# %bb.7:                                # %if.else
.Ltmp567:
	.cfi_escape 0x2e, 0x00
	leaq	8(%rsp), %rdi
	callq	_ZN7testing7MessageC1Ev
.Ltmp568:
# %bb.8:                                # %invoke.cont28
	movq	8(%rsp), %rdi
	addq	$16, %rdi
.Ltmp570:
	.cfi_escape 0x2e, 0x00
	movl	$.L.str.65, %esi
	movl	$20, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp571:
# %bb.9:                                # %invoke.cont30
	movq	8(%rsp), %rdi
	addq	$16, %rdi
	movsd	64(%r14), %xmm0                 # xmm0 = mem[0],zero
.Ltmp572:
	.cfi_escape 0x2e, 0x00
	callq	_ZNSo9_M_insertIdEERSoT_
.Ltmp573:
# %bb.10:                               # %invoke.cont33
.Ltmp575:
	.cfi_escape 0x2e, 0x00
	leaq	80(%rsp), %rdi
	leaq	64(%rsp), %rsi
	movl	$.L.str.66, %edx
	movl	$.L.str.67, %ecx
	movl	$.L.str.68, %r8d
	callq	_ZN7testing8internal30GetBoolAssertionFailureMessageB5cxx11ERKNS_15AssertionResultEPKcS5_S5_
.Ltmp576:
# %bb.11:                               # %invoke.cont38
	movq	80(%rsp), %r8
.Ltmp578:
	.cfi_escape 0x2e, 0x00
	leaq	32(%rsp), %rdi
	movl	$.L.str.62, %edx
	movl	$1, %esi
	movl	$766, %ecx                      # imm = 0x2FE
	callq	_ZN7testing8internal12AssertHelperC1ENS_14TestPartResult4TypeEPKciS5_
.Ltmp579:
# %bb.12:                               # %invoke.cont41
.Ltmp581:
	.cfi_escape 0x2e, 0x00
	leaq	32(%rsp), %rdi
	leaq	8(%rsp), %rsi
	callq	_ZNK7testing8internal12AssertHelperaSERKNS_7MessageE
.Ltmp582:
# %bb.13:                               # %invoke.cont43
	.cfi_escape 0x2e, 0x00
	leaq	32(%rsp), %rdi
	callq	_ZN7testing8internal12AssertHelperD1Ev
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB86_15
# %bb.14:                               # %if.then.i.i
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
.LBB86_15:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	8(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB86_17
# %bb.16:                               # %_ZNKSt14default_deleteINSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEEclEPS5_.exit.i.i
	movq	(%rdi), %rax
	.cfi_escape 0x2e, 0x00
	callq	*8(%rax)
.LBB86_17:                              # %if.end
	movq	72(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB86_21
# %bb.18:                               # %delete.notnull.i.i
	movq	(%rbx), %rdi
	leaq	16(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB86_20
# %bb.19:                               # %if.then.i.i.i.i
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
.LBB86_20:                              # %_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.exit.i
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	callq	_ZdlPv
.LBB86_21:                              # %_ZNSt10unique_ptrINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt14default_deleteIS5_EED2Ev.exit
	movq	40(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB86_23
# %bb.22:                               # %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i
	.cfi_escape 0x2e, 0x00
	callq	_ZdaPv
.LBB86_23:                              # %if.end58
	addq	$112, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB86_24:                              # %init.check.i
	.cfi_def_cfa_offset 160
	.cfi_escape 0x2e, 0x00
	movl	$_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %edi
	callq	__cxa_guard_acquire
	testl	%eax, %eax
	je	.LBB86_2
# %bb.25:                               # %init.i
.Ltmp561:
	.cfi_escape 0x2e, 0x00
	movl	$_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %edi
	callq	_ZSt11make_uniqueI12GemmResourceIDF16_fEJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_
.Ltmp562:
# %bb.26:                               # %invoke.cont.i
	.cfi_escape 0x2e, 0x00
	movl	$_ZNSt10unique_ptrI12GemmResourceIDF16_fESt14default_deleteIS1_EED2Ev, %edi
	movl	$_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %esi
	movl	$__dso_handle, %edx
	callq	__cxa_atexit
	.cfi_escape 0x2e, 0x00
	movl	$_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %edi
	callq	__cxa_guard_release
	jmp	.LBB86_2
.LBB86_27:                              # %lpad.i
.Ltmp563:
	movq	%rax, %rbx
	.cfi_escape 0x2e, 0x00
	movl	$_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %edi
	callq	__cxa_guard_abort
	jmp	.LBB86_41
.LBB86_28:                              # %lpad42
.Ltmp583:
	movq	%rax, %rbx
	.cfi_escape 0x2e, 0x00
	leaq	32(%rsp), %rdi
	callq	_ZN7testing8internal12AssertHelperD1Ev
	jmp	.LBB86_30
.LBB86_29:                              # %lpad40
.Ltmp580:
	movq	%rax, %rbx
.LBB86_30:                              # %ehcleanup45
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB86_36
# %bb.31:                               # %if.then.i.i92
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
	jmp	.LBB86_36
.LBB86_32:                              # %lpad37
.Ltmp577:
	jmp	.LBB86_35
.LBB86_33:                              # %lpad27
.Ltmp569:
	movq	%rax, %rbx
	jmp	.LBB86_38
.LBB86_34:                              # %lpad29
.Ltmp574:
.LBB86_35:                              # %ehcleanup48
	movq	%rax, %rbx
.LBB86_36:                              # %ehcleanup48
	movq	8(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB86_38
# %bb.37:                               # %_ZNKSt14default_deleteINSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEEEclEPS5_.exit.i.i99
	movq	(%rdi), %rax
	.cfi_escape 0x2e, 0x00
	callq	*8(%rax)
.LBB86_38:                              # %ehcleanup49
	leaq	72(%rsp), %rdi
	.cfi_escape 0x2e, 0x00
	callq	_ZNSt10unique_ptrINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt14default_deleteIS5_EED2Ev
	jmp	.LBB86_40
.LBB86_39:                              # %lpad
.Ltmp566:
	movq	%rax, %rbx
.LBB86_40:                              # %ehcleanup54
	movq	40(%rsp), %rdi
	testq	%rdi, %rdi
	jne	.LBB86_42
.LBB86_41:                              # %unwind_resume
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB86_42:                              # %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i105
	.cfi_escape 0x2e, 0x00
	callq	_ZdaPv
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end86:
	.size	_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E15validateResultsEv, .Lfunc_end86-_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E15validateResultsEv
	.cfi_endproc
	.section	.gcc_except_table._ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E15validateResultsEv,"aG",@progbits,_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E15validateResultsEv,comdat
	.p2align	2
GCC_except_table86:
.Lexception25:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end25-.Lcst_begin25
.Lcst_begin25:
	.uleb128 .Lfunc_begin25-.Lfunc_begin25  # >> Call Site 1 <<
	.uleb128 .Ltmp564-.Lfunc_begin25        #   Call between .Lfunc_begin25 and .Ltmp564
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp564-.Lfunc_begin25        # >> Call Site 2 <<
	.uleb128 .Ltmp565-.Ltmp564              #   Call between .Ltmp564 and .Ltmp565
	.uleb128 .Ltmp566-.Lfunc_begin25        #     jumps to .Ltmp566
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp567-.Lfunc_begin25        # >> Call Site 3 <<
	.uleb128 .Ltmp568-.Ltmp567              #   Call between .Ltmp567 and .Ltmp568
	.uleb128 .Ltmp569-.Lfunc_begin25        #     jumps to .Ltmp569
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp570-.Lfunc_begin25        # >> Call Site 4 <<
	.uleb128 .Ltmp573-.Ltmp570              #   Call between .Ltmp570 and .Ltmp573
	.uleb128 .Ltmp574-.Lfunc_begin25        #     jumps to .Ltmp574
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp575-.Lfunc_begin25        # >> Call Site 5 <<
	.uleb128 .Ltmp576-.Ltmp575              #   Call between .Ltmp575 and .Ltmp576
	.uleb128 .Ltmp577-.Lfunc_begin25        #     jumps to .Ltmp577
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp578-.Lfunc_begin25        # >> Call Site 6 <<
	.uleb128 .Ltmp579-.Ltmp578              #   Call between .Ltmp578 and .Ltmp579
	.uleb128 .Ltmp580-.Lfunc_begin25        #     jumps to .Ltmp580
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp581-.Lfunc_begin25        # >> Call Site 7 <<
	.uleb128 .Ltmp582-.Ltmp581              #   Call between .Ltmp581 and .Ltmp582
	.uleb128 .Ltmp583-.Lfunc_begin25        #     jumps to .Ltmp583
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp582-.Lfunc_begin25        # >> Call Site 8 <<
	.uleb128 .Ltmp561-.Ltmp582              #   Call between .Ltmp582 and .Ltmp561
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp561-.Lfunc_begin25        # >> Call Site 9 <<
	.uleb128 .Ltmp562-.Ltmp561              #   Call between .Ltmp561 and .Ltmp562
	.uleb128 .Ltmp563-.Lfunc_begin25        #     jumps to .Ltmp563
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp562-.Lfunc_begin25        # >> Call Site 10 <<
	.uleb128 .Lfunc_end86-.Ltmp562          #   Call between .Ltmp562 and .Lfunc_end86
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end25:
	.p2align	2
                                        # -- End function
	.section	.text._ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E13reportResultsEv,"axG",@progbits,_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E13reportResultsEv,comdat
	.weak	_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E13reportResultsEv # -- Begin function _ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E13reportResultsEv
	.p2align	4, 0x90
	.type	_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E13reportResultsEv,@function
_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E13reportResultsEv: # @_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E13reportResultsEv
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	cmpb	$0, _ZN7KernelI14sHeaderPrintedE(%rip)
	jne	.LBB87_2
# %bb.1:                                # %if.then
	movq	(%rbx), %rax
	movl	$_ZSt4cout, %esi
	movq	%rbx, %rdi
	callq	*56(%rax)
	movb	$1, _ZN7KernelI14sHeaderPrintedE(%rip)
.LBB87_2:                               # %if.end
	movq	(%rbx), %rax
	movq	64(%rax), %rax
	movl	$_ZSt4cout, %esi
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmpq	*%rax                           # TAILCALL
.Lfunc_end87:
	.size	_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E13reportResultsEv, .Lfunc_end87-_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E13reportResultsEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8tearDownEv,"axG",@progbits,_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8tearDownEv,comdat
	.weak	_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8tearDownEv # -- Begin function _ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8tearDownEv
	.p2align	4, 0x90
	.type	_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8tearDownEv,@function
_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8tearDownEv: # @_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8tearDownEv
	.cfi_startproc
# %bb.0:                                # %entry
	retq
.Lfunc_end88:
	.size	_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8tearDownEv, .Lfunc_end88-_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8tearDownEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE11printHeaderERSo,"axG",@progbits,_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE11printHeaderERSo,comdat
	.weak	_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE11printHeaderERSo # -- Begin function _ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE11printHeaderERSo
	.p2align	4, 0x90
	.type	_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE11printHeaderERSo,@function
_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE11printHeaderERSo: # @_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE11printHeaderERSo
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movl	$.L.str.71, %esi
	movl	$38, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movq	%r14, %rdi
	movq	%rbx, %rsi
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11printHeaderERSo # TAILCALL
.Lfunc_end89:
	.size	_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE11printHeaderERSo, .Lfunc_end89-_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE11printHeaderERSo
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE11printKernelERSo,"axG",@progbits,_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE11printKernelERSo,comdat
	.weak	_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE11printKernelERSo # -- Begin function _ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE11printKernelERSo
	.p2align	4, 0x90
	.type	_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE11printKernelERSo,@function
_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE11printKernelERSo: # @_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE11printKernelERSo
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movl	$.L.str.72, %esi
	movl	$5, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.50, %esi
	movl	$1, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$2, %esi
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertImEERSoT_
	movq	%rax, %rbx
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$1, %esi
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertImEERSoT_
	movq	%rax, %rbx
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movq	%r14, %rdi
	movq	%rbx, %rsi
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11printKernelERSo # TAILCALL
.Lfunc_end90:
	.size	_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE11printKernelERSo, .Lfunc_end90-_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE11printKernelERSo
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE10kernelImplEv,"axG",@progbits,_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE10kernelImplEv,comdat
	.weak	_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE10kernelImplEv # -- Begin function _ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE10kernelImplEv
	.p2align	4, 0x90
	.type	_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE10kernelImplEv,@function
_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE10kernelImplEv: # @_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE10kernelImplEv
	.cfi_startproc
# %bb.0:                                # %entry
	movl	$_Z15mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_, %eax
	retq
.Lfunc_end91:
	.size	_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE10kernelImplEv, .Lfunc_end91-_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE10kernelImplEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE8ldsUsageEv,"axG",@progbits,_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE8ldsUsageEv,comdat
	.weak	_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE8ldsUsageEv # -- Begin function _ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE8ldsUsageEv
	.p2align	4, 0x90
	.type	_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE8ldsUsageEv,@function
_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE8ldsUsageEv: # @_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE8ldsUsageEv
	.cfi_startproc
# %bb.0:                                # %entry
	movl	12(%rdi), %eax
	shll	$8, %eax
	movl	$268435392, %ecx                # imm = 0xFFFFFC0
	andl	8(%rdi), %ecx
	leal	(%rax,%rcx,8), %eax
	addl	%eax, %eax
	retq
.Lfunc_end92:
	.size	_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE8ldsUsageEv, .Lfunc_end92-_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE8ldsUsageEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE7gridDimEv,"axG",@progbits,_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE7gridDimEv,comdat
	.weak	_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE7gridDimEv # -- Begin function _ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE7gridDimEv
	.p2align	4, 0x90
	.type	_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE7gridDimEv,@function
_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE7gridDimEv: # @_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE7gridDimEv
	.cfi_startproc
# %bb.0:                                # %entry
	movl	12(%rdi), %esi
	movl	$67108863, %ecx                 # imm = 0x3FFFFFF
	andl	8(%rdi), %ecx
	movl	16(%rdi), %eax
	addl	%ecx, %eax
	addl	$-1, %eax
	xorl	%edx, %edx
	divl	%ecx
	movl	%eax, %ecx
	movl	20(%rdi), %eax
	shll	$5, %esi
	addl	%esi, %eax
	addl	$-1, %eax
	xorl	%edx, %edx
	divl	%esi
                                        # kill: def $eax killed $eax def $rax
	shlq	$32, %rax
	orq	%rax, %rcx
	movq	%rcx, %rax
	movl	$1, %edx
	retq
.Lfunc_end93:
	.size	_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE7gridDimEv, .Lfunc_end93-_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE7gridDimEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8blockDimEv,"axG",@progbits,_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8blockDimEv,comdat
	.weak	_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8blockDimEv # -- Begin function _ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8blockDimEv
	.p2align	4, 0x90
	.type	_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8blockDimEv,@function
_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8blockDimEv: # @_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8blockDimEv
	.cfi_startproc
# %bb.0:                                # %entry
	movq	8(%rdi), %rax
	movl	$1, %edx
	retq
.Lfunc_end94:
	.size	_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8blockDimEv, .Lfunc_end94-_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8blockDimEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11checkDeviceEv,"axG",@progbits,_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11checkDeviceEv,comdat
	.weak	_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11checkDeviceEv # -- Begin function _ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11checkDeviceEv
	.p2align	4, 0x90
	.type	_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11checkDeviceEv,@function
_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11checkDeviceEv: # @_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11checkDeviceEv
.Lfunc_begin26:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception26
# %bb.0:                                # %entry
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movb	_ZGVZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance(%rip), %al
	testb	%al, %al
	je	.LBB95_1
.LBB95_5:                               # %_ZN13LazySingletonI9HipDeviceE8instanceEv.exit
	movq	_ZZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance(%rip), %rdi
	callq	_ZNK9HipDevice10getGcnArchEv
	cmpl	$2315, %eax                     # imm = 0x90B
	setne	%al
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB95_1:                               # %init.check.i
	.cfi_def_cfa_offset 32
	movl	$_ZGVZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance, %edi
	callq	__cxa_guard_acquire
	testl	%eax, %eax
	je	.LBB95_5
# %bb.2:                                # %init.i
.Ltmp584:
	movl	$808, %edi                      # imm = 0x328
	callq	_Znwm
.Ltmp585:
# %bb.3:                                # %call.i.noexc
	movq	%rax, %rbx
.Ltmp587:
	movq	%rax, %rdi
	callq	_ZN9HipDeviceC1Ev
.Ltmp588:
# %bb.4:                                # %invoke.cont.i
	movq	%rbx, _ZZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance(%rip)
	movl	$_ZNSt10unique_ptrI9HipDeviceSt14default_deleteIS0_EED2Ev, %edi
	movl	$_ZZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance, %esi
	movl	$__dso_handle, %edx
	callq	__cxa_atexit
	movl	$_ZGVZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance, %edi
	callq	__cxa_guard_release
	jmp	.LBB95_5
.LBB95_8:                               # %lpad.i10
.Ltmp589:
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	_ZdlPv
	jmp	.LBB95_7
.LBB95_6:                               # %lpad.i
.Ltmp586:
	movq	%rax, %r14
.LBB95_7:                               # %lpad.i.body
	movl	$_ZGVZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance, %edi
	callq	__cxa_guard_abort
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end95:
	.size	_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11checkDeviceEv, .Lfunc_end95-_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11checkDeviceEv
	.cfi_endproc
	.section	.gcc_except_table._ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11checkDeviceEv,"aG",@progbits,_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11checkDeviceEv,comdat
	.p2align	2
GCC_except_table95:
.Lexception26:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end26-.Lcst_begin26
.Lcst_begin26:
	.uleb128 .Lfunc_begin26-.Lfunc_begin26  # >> Call Site 1 <<
	.uleb128 .Ltmp584-.Lfunc_begin26        #   Call between .Lfunc_begin26 and .Ltmp584
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp584-.Lfunc_begin26        # >> Call Site 2 <<
	.uleb128 .Ltmp585-.Ltmp584              #   Call between .Ltmp584 and .Ltmp585
	.uleb128 .Ltmp586-.Lfunc_begin26        #     jumps to .Ltmp586
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp587-.Lfunc_begin26        # >> Call Site 3 <<
	.uleb128 .Ltmp588-.Ltmp587              #   Call between .Ltmp587 and .Ltmp588
	.uleb128 .Ltmp589-.Lfunc_begin26        #     jumps to .Ltmp589
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp588-.Lfunc_begin26        # >> Call Site 4 <<
	.uleb128 .Lfunc_end95-.Ltmp588          #   Call between .Ltmp588 and .Lfunc_end95
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end26:
	.p2align	2
                                        # -- End function
	.section	.text._ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE10checkSizesEv,"axG",@progbits,_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE10checkSizesEv,comdat
	.weak	_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE10checkSizesEv # -- Begin function _ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE10checkSizesEv
	.p2align	4, 0x90
	.type	_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE10checkSizesEv,@function
_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE10checkSizesEv: # @_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE10checkSizesEv
	.cfi_startproc
# %bb.0:                                # %entry
	movl	$67108863, %eax                 # imm = 0x3FFFFFF
	andl	8(%rdi), %eax
	cmpl	16(%rdi), %eax
	jbe	.LBB96_2
# %bb.1:
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	retq
.LBB96_2:                               # %land.lhs.true
	movl	12(%rdi), %eax
	shll	$5, %eax
	cmpl	20(%rdi), %eax
	jbe	.LBB96_4
# %bb.3:
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	retq
.LBB96_4:                               # %land.rhs
	cmpl	$7, 24(%rdi)
	seta	%al
                                        # kill: def $al killed $al killed $eax
	retq
.Lfunc_end96:
	.size	_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE10checkSizesEv, .Lfunc_end96-_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE10checkSizesEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8checkLdsEv,"axG",@progbits,_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8checkLdsEv,comdat
	.weak	_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8checkLdsEv # -- Begin function _ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8checkLdsEv
	.p2align	4, 0x90
	.type	_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8checkLdsEv,@function
_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8checkLdsEv: # @_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8checkLdsEv
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rax
	.cfi_def_cfa_offset 16
	movq	(%rdi), %rax
	callq	*80(%rax)
	cmpl	$65537, %eax                    # imm = 0x10001
	setb	%al
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end97:
	.size	_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8checkLdsEv, .Lfunc_end97-_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8checkLdsEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11checkQuirksEv,"axG",@progbits,_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11checkQuirksEv,comdat
	.weak	_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11checkQuirksEv # -- Begin function _ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11checkQuirksEv
	.p2align	4, 0x90
	.type	_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11checkQuirksEv,@function
_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11checkQuirksEv: # @_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11checkQuirksEv
	.cfi_startproc
# %bb.0:                                # %entry
	movb	$1, %al
	retq
.Lfunc_end98:
	.size	_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11checkQuirksEv, .Lfunc_end98-_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11checkQuirksEv
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4                               # -- Begin function _ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E5resetEv
.LCPI99_0:
	.quad	0xbff0000000000000              # double -1
	.quad	0xbff0000000000000              # double -1
	.section	.text._ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E5resetEv,"axG",@progbits,_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E5resetEv,comdat
	.weak	_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E5resetEv
	.p2align	4, 0x90
	.type	_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E5resetEv,@function
_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E5resetEv: # @_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E5resetEv
	.cfi_startproc
# %bb.0:                                # %entry
	xorps	%xmm0, %xmm0
	movups	%xmm0, 36(%rdi)
	movups	%xmm0, 24(%rdi)
	movups	%xmm0, 8(%rdi)
	movl	$1, 52(%rdi)
	movw	$1, 56(%rdi)
	movups	%xmm0, 64(%rdi)
	movups	%xmm0, 80(%rdi)
	movaps	.LCPI99_0(%rip), %xmm0          # xmm0 = [-1.0E+0,-1.0E+0]
	movups	%xmm0, 96(%rdi)
	retq
.Lfunc_end99:
	.size	_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E5resetEv, .Lfunc_end99-_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E5resetEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7KernelID2Ev,"axG",@progbits,_ZN7KernelID2Ev,comdat
	.weak	_ZN7KernelID2Ev                 # -- Begin function _ZN7KernelID2Ev
	.p2align	4, 0x90
	.type	_ZN7KernelID2Ev,@function
_ZN7KernelID2Ev:                        # @_ZN7KernelID2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	retq
.Lfunc_end100:
	.size	_ZN7KernelID2Ev, .Lfunc_end100-_ZN7KernelID2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11printHeaderERSo,"axG",@progbits,_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11printHeaderERSo,comdat
	.weak	_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11printHeaderERSo # -- Begin function _ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11printHeaderERSo
	.p2align	4, 0x90
	.type	_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11printHeaderERSo,@function
_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11printHeaderERSo: # @_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11printHeaderERSo
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %r14
	movl	$.L.str.34, %esi
	movl	$14, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.35, %esi
	movl	$18, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.36, %esi
	movl	$18, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.37, %esi
	movl	$33, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.38, %esi
	movl	$21, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.39, %esi
	movl	$10, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.40, %esi
	movl	$11, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.41, %esi
	movl	$8, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.42, %esi
	movl	$10, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.43, %esi
	movl	$15, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.44, %esi
	movl	$6, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movq	(%r14), %rax
	movq	-24(%rax), %rax
	movq	240(%r14,%rax), %rbx
	testq	%rbx, %rbx
	je	.LBB101_5
# %bb.1:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	cmpb	$0, 56(%rbx)
	je	.LBB101_3
# %bb.2:                                # %if.then.i4.i.i
	movb	67(%rbx), %al
	jmp	.LBB101_4
.LBB101_3:                              # %if.end.i.i.i
	movq	%rbx, %rdi
	callq	_ZNKSt5ctypeIcE13_M_widen_initEv
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	movl	$10, %esi
	callq	*48(%rax)
.LBB101_4:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
	movsbl	%al, %esi
	movq	%r14, %rdi
	callq	_ZNSo3putEc
	movq	%rax, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	_ZNSo5flushEv                   # TAILCALL
.LBB101_5:                              # %if.then.i.i.i
	.cfi_def_cfa_offset 32
	callq	_ZSt16__throw_bad_castv
.Lfunc_end101:
	.size	_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11printHeaderERSo, .Lfunc_end101-_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11printHeaderERSo
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11printKernelERSo,"axG",@progbits,_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11printKernelERSo,comdat
	.weak	_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11printKernelERSo # -- Begin function _ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11printKernelERSo
	.p2align	4, 0x90
	.type	_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11printKernelERSo,@function
_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11printKernelERSo: # @_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11printKernelERSo
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r14
	movq	%rdi, %r15
	movl	8(%rdi), %esi
	movq	%r14, %rdi
	callq	_ZNSo9_M_insertImEERSoT_
	movq	%rax, %rbx
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	12(%r15), %esi
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertImEERSoT_
	movq	%rax, %rbx
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$32, %esi
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertImEERSoT_
	movq	%rax, %rbx
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$32, %esi
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertImEERSoT_
	movq	%rax, %rbx
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$8, %esi
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertImEERSoT_
	movq	%rax, %rbx
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	16(%r15), %esi
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertImEERSoT_
	movq	%rax, %rbx
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	20(%r15), %esi
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertImEERSoT_
	movq	%rax, %rbx
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	24(%r15), %esi
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertImEERSoT_
	movq	%rax, %rbx
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movss	44(%r15), %xmm0                 # xmm0 = mem[0],zero,zero,zero
	cvtss2sd	%xmm0, %xmm0
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertIdEERSoT_
	movq	%rax, %rbx
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	28(%r15), %esi
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertImEERSoT_
	movq	%rax, %rbx
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	32(%r15), %esi
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertImEERSoT_
	movq	%rax, %rbx
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movss	48(%r15), %xmm0                 # xmm0 = mem[0],zero,zero,zero
	cvtss2sd	%xmm0, %xmm0
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertIdEERSoT_
	movq	%rax, %rbx
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	36(%r15), %esi
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertImEERSoT_
	movq	%rax, %rbx
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	40(%r15), %esi
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertImEERSoT_
	movq	%rax, %rbx
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.50, %esi
	movl	$1, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.45, %esi
	movl	$1, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.51, %esi
	movl	$1, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.45, %esi
	movl	$1, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.50, %esi
	movl	$1, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.45, %esi
	movl	$1, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.50, %esi
	movl	$1, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.52, %esi
	movl	$3, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.45, %esi
	movl	$1, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.53, %esi
	movl	$3, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.45, %esi
	movl	$1, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.53, %esi
	movl	$3, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	cmpb	$0, 56(%r15)
	je	.LBB102_1
# %bb.6:                                # %if.else
	movsd	72(%r15), %xmm0                 # xmm0 = mem[0],zero
	movq	%r14, %rdi
	callq	_ZNSo9_M_insertIdEERSoT_
	movq	%rax, %rbx
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movsd	80(%r15), %xmm0                 # xmm0 = mem[0],zero
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertIdEERSoT_
	movq	%rax, %rbx
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movsd	88(%r15), %xmm0                 # xmm0 = mem[0],zero
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertIdEERSoT_
	movq	%rax, %rbx
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movsd	96(%r15), %xmm0                 # xmm0 = mem[0],zero
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertIdEERSoT_
	movq	%rax, %r12
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	cmpb	$0, 57(%r15)
	movl	$.L.str.49, %eax
	movl	$.L.str.48, %esi
	cmoveq	%rax, %rsi
	movl	$6, %edx
	movq	%r12, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movq	(%r12), %rax
	movq	-24(%rax), %rax
	movq	240(%r12,%rax), %rbx
	testq	%rbx, %rbx
	je	.LBB102_12
# %bb.7:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i196
	cmpb	$0, 56(%rbx)
	je	.LBB102_9
# %bb.8:                                # %if.then.i4.i.i198
	movb	67(%rbx), %al
	jmp	.LBB102_10
.LBB102_1:                              # %if.then
	movl	$.L.str.46, %esi
	movl	$3, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.46, %esi
	movl	$3, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.46, %esi
	movl	$3, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.46, %esi
	movl	$3, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.19, %esi
	movl	$2, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.47, %esi
	movl	$7, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movq	(%r14), %rax
	movq	-24(%rax), %rax
	movq	240(%r14,%rax), %rbx
	testq	%rbx, %rbx
	je	.LBB102_12
# %bb.2:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	cmpb	$0, 56(%rbx)
	je	.LBB102_4
# %bb.3:                                # %if.then.i4.i.i
	movb	67(%rbx), %al
	jmp	.LBB102_5
.LBB102_9:                              # %if.end.i.i.i202
	movq	%rbx, %rdi
	callq	_ZNKSt5ctypeIcE13_M_widen_initEv
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	movl	$10, %esi
	callq	*48(%rax)
.LBB102_10:                             # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit206
	movsbl	%al, %esi
	movq	%r12, %rdi
	jmp	.LBB102_11
.LBB102_4:                              # %if.end.i.i.i
	movq	%rbx, %rdi
	callq	_ZNKSt5ctypeIcE13_M_widen_initEv
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	movl	$10, %esi
	callq	*48(%rax)
.LBB102_5:                              # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
	movsbl	%al, %esi
	movq	%r14, %rdi
.LBB102_11:                             # %if.end
	callq	_ZNSo3putEc
	movq	%rax, %rdi
	callq	_ZNSo5flushEv
	movq	%r14, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB102_12:                             # %if.then.i.i.i
	.cfi_def_cfa_offset 48
	callq	_ZSt16__throw_bad_castv
.Lfunc_end102:
	.size	_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11printKernelERSo, .Lfunc_end102-_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11printKernelERSo
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN12GemmResourceIDF16_fE13resizeStorageERKSt5tupleIJlllEE,"axG",@progbits,_ZN12GemmResourceIDF16_fE13resizeStorageERKSt5tupleIJlllEE,comdat
	.weak	_ZN12GemmResourceIDF16_fE13resizeStorageERKSt5tupleIJlllEE # -- Begin function _ZN12GemmResourceIDF16_fE13resizeStorageERKSt5tupleIJlllEE
	.p2align	4, 0x90
	.type	_ZN12GemmResourceIDF16_fE13resizeStorageERKSt5tupleIJlllEE,@function
_ZN12GemmResourceIDF16_fE13resizeStorageERKSt5tupleIJlllEE: # @_ZN12GemmResourceIDF16_fE13resizeStorageERKSt5tupleIJlllEE
.Lfunc_begin27:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception27
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$16, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	16(%rsi), %r13
	movq	(%rsi), %r14
	movq	8(%rsi), %r15
	movq	%r14, %r12
	imulq	%r13, %r12
	cmpq	%r12, 136(%rdi)
	jge	.LBB103_12
# %bb.1:                                # %if.then.i
	movq	%rsp, %rdi
	movq	%r12, %rsi
	callq	_ZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EEl
	movq	8(%rsp), %rax
	movq	$0, 8(%rsp)
	movq	8(%rbx), %rdi
	movq	%rax, 8(%rbx)
	testq	%rdi, %rdi
	je	.LBB103_2
# %bb.4:                                # %if.then.i.i.i
.Ltmp590:
	callq	*(%rbx)
.Ltmp591:
# %bb.5:                                # %_ZNSt10unique_ptrIDF16_PFvPDF16_EEaSEOS3_.exit.i
	movq	(%rsp), %rax
	movq	8(%rsp), %rdi
	movq	%rax, (%rbx)
	testq	%rdi, %rdi
	je	.LBB103_7
# %bb.6:                                # %if.then.i.i
.Ltmp593:
	callq	*%rax
.Ltmp594:
.LBB103_7:                              # %_ZNSt10unique_ptrIDF16_PFvPDF16_EED2Ev.exit.i
	testq	%r12, %r12
	jle	.LBB103_8
.LBB103_9:                              # %if.else.i.i
	leaq	(%r12,%r12), %rdi
	callq	_Znam
	movq	64(%rbx), %rdi
	movq	%rax, 64(%rbx)
	testq	%rdi, %rdi
	je	.LBB103_12
.LBB103_11:                             # %_ZNKSt14default_deleteIA_DF16_EclIDF16_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i.i.i
	callq	_ZdaPv
.LBB103_12:                             # %_ZZN12GemmResourceIDF16_fE13resizeStorageERKSt5tupleIJlllEEENKUlRT_RT0_llE_clISt10unique_ptrIDF16_PFvPDF16_EESB_IA_DF16_St14default_deleteISG_EEEEDaS6_S8_ll.exit
	imulq	%r15, %r14
	cmpq	%r14, 128(%rbx)
	jge	.LBB103_24
# %bb.13:                               # %if.then.i22
	movq	%rsp, %rdi
	movq	%r14, %rsi
	callq	_ZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EEl
	movq	8(%rsp), %rax
	movq	$0, 8(%rsp)
	movq	24(%rbx), %rdi
	movq	%rax, 24(%rbx)
	testq	%rdi, %rdi
	je	.LBB103_14
# %bb.16:                               # %if.then.i.i.i27
.Ltmp596:
	callq	*16(%rbx)
.Ltmp597:
# %bb.17:                               # %_ZNSt10unique_ptrIDF16_PFvPDF16_EEaSEOS3_.exit.i32
	movq	(%rsp), %rax
	movq	8(%rsp), %rdi
	movq	%rax, 16(%rbx)
	testq	%rdi, %rdi
	je	.LBB103_19
# %bb.18:                               # %if.then.i.i33
.Ltmp599:
	callq	*%rax
.Ltmp600:
.LBB103_19:                             # %_ZNSt10unique_ptrIDF16_PFvPDF16_EED2Ev.exit.i36
	testq	%r14, %r14
	jle	.LBB103_20
.LBB103_21:                             # %if.else.i.i38
	leaq	(%r14,%r14), %rdi
	callq	_Znam
	movq	72(%rbx), %rdi
	movq	%rax, 72(%rbx)
	testq	%rdi, %rdi
	je	.LBB103_24
.LBB103_23:                             # %_ZNKSt14default_deleteIA_DF16_EclIDF16_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i.i.i43
	callq	_ZdaPv
.LBB103_24:                             # %_ZZN12GemmResourceIDF16_fE13resizeStorageERKSt5tupleIJlllEEENKUlRT_RT0_llE_clISt10unique_ptrIDF16_PFvPDF16_EESB_IA_DF16_St14default_deleteISG_EEEEDaS6_S8_ll.exit44
	imulq	%r13, %r15
	cmpq	%r15, 120(%rbx)
	jge	.LBB103_36
# %bb.25:                               # %if.then.i52
	movq	%rsp, %rdi
	movq	%r15, %rsi
	callq	_ZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EEl
	movq	8(%rsp), %rax
	movq	$0, 8(%rsp)
	movq	40(%rbx), %rdi
	movq	%rax, 40(%rbx)
	testq	%rdi, %rdi
	je	.LBB103_26
# %bb.28:                               # %if.then.i.i.i56
.Ltmp602:
	callq	*32(%rbx)
.Ltmp603:
# %bb.29:                               # %_ZNSt10unique_ptrIfPFvPfEEaSEOS3_.exit.i
	movq	(%rsp), %rax
	movq	8(%rsp), %rdi
	movq	%rax, 32(%rbx)
	testq	%rdi, %rdi
	je	.LBB103_31
# %bb.30:                               # %if.then.i.i61
.Ltmp605:
	callq	*%rax
.Ltmp606:
.LBB103_31:                             # %_ZNSt10unique_ptrIfPFvPfEED2Ev.exit.i
	testq	%r15, %r15
	jle	.LBB103_32
.LBB103_33:                             # %if.else.i.i65
	movl	$4, %ecx
	movq	%r15, %rax
	mulq	%rcx
	movq	$-1, %rdi
	cmovnoq	%rax, %rdi
	callq	_Znam
	movq	80(%rbx), %rdi
	movq	%rax, 80(%rbx)
	testq	%rdi, %rdi
	je	.LBB103_36
.LBB103_35:                             # %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i.i.i
	callq	_ZdaPv
.LBB103_36:                             # %_ZZN12GemmResourceIDF16_fE13resizeStorageERKSt5tupleIJlllEEENKUlRT_RT0_llE_clISt10unique_ptrIfPFvPfEESB_IA_fSt14default_deleteISG_EEEEDaS6_S8_ll.exit
	cmpq	%r15, 120(%rbx)
	jge	.LBB103_48
# %bb.37:                               # %if.then.i76
	movq	%rsp, %rdi
	movq	%r15, %rsi
	callq	_ZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EEl
	movq	8(%rsp), %rax
	movq	$0, 8(%rsp)
	movq	56(%rbx), %rdi
	movq	%rax, 56(%rbx)
	testq	%rdi, %rdi
	je	.LBB103_38
# %bb.40:                               # %if.then.i.i.i81
.Ltmp608:
	callq	*48(%rbx)
.Ltmp609:
# %bb.41:                               # %_ZNSt10unique_ptrIfPFvPfEEaSEOS3_.exit.i86
	movq	(%rsp), %rax
	movq	8(%rsp), %rdi
	movq	%rax, 48(%rbx)
	testq	%rdi, %rdi
	je	.LBB103_43
# %bb.42:                               # %if.then.i.i87
.Ltmp611:
	callq	*%rax
.Ltmp612:
.LBB103_43:                             # %_ZNSt10unique_ptrIfPFvPfEED2Ev.exit.i90
	testq	%r15, %r15
	jle	.LBB103_44
.LBB103_45:                             # %if.else.i.i92
	movl	$4, %ecx
	movq	%r15, %rax
	mulq	%rcx
	movq	$-1, %rdi
	cmovnoq	%rax, %rdi
	callq	_Znam
	movq	88(%rbx), %rdi
	movq	%rax, 88(%rbx)
	testq	%rdi, %rdi
	je	.LBB103_48
.LBB103_47:                             # %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i.i.i97
	callq	_ZdaPv
.LBB103_48:                             # %_ZZN12GemmResourceIDF16_fE13resizeStorageERKSt5tupleIJlllEEENKUlRT_RT0_llE_clISt10unique_ptrIfPFvPfEESB_IA_fSt14default_deleteISG_EEEEDaS6_S8_ll.exit98
	movq	%r12, 136(%rbx)
	movq	%r14, 128(%rbx)
	movq	%r15, 120(%rbx)
	addq	$16, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB103_2:                              # %_ZNSt10unique_ptrIDF16_PFvPDF16_EEaSEOS3_.exit.thread.i
	.cfi_def_cfa_offset 64
	movq	(%rsp), %rax
	movq	%rax, (%rbx)
	testq	%r12, %r12
	jg	.LBB103_9
.LBB103_8:
	xorl	%eax, %eax
	movq	64(%rbx), %rdi
	movq	%rax, 64(%rbx)
	testq	%rdi, %rdi
	jne	.LBB103_11
	jmp	.LBB103_12
.LBB103_14:                             # %_ZNSt10unique_ptrIDF16_PFvPDF16_EEaSEOS3_.exit.thread.i25
	movq	(%rsp), %rax
	movq	%rax, 16(%rbx)
	testq	%r14, %r14
	jg	.LBB103_21
.LBB103_20:
	xorl	%eax, %eax
	movq	72(%rbx), %rdi
	movq	%rax, 72(%rbx)
	testq	%rdi, %rdi
	jne	.LBB103_23
	jmp	.LBB103_24
.LBB103_26:                             # %_ZNSt10unique_ptrIfPFvPfEEaSEOS3_.exit.thread.i
	movq	(%rsp), %rax
	movq	%rax, 32(%rbx)
	testq	%r15, %r15
	jg	.LBB103_33
.LBB103_32:
	xorl	%eax, %eax
	movq	80(%rbx), %rdi
	movq	%rax, 80(%rbx)
	testq	%rdi, %rdi
	jne	.LBB103_35
	jmp	.LBB103_36
.LBB103_38:                             # %_ZNSt10unique_ptrIfPFvPfEEaSEOS3_.exit.thread.i79
	movq	(%rsp), %rax
	movq	%rax, 48(%rbx)
	testq	%r15, %r15
	jg	.LBB103_45
.LBB103_44:
	xorl	%eax, %eax
	movq	88(%rbx), %rdi
	movq	%rax, 88(%rbx)
	testq	%rdi, %rdi
	jne	.LBB103_47
	jmp	.LBB103_48
.LBB103_52:                             # %lpad.i.i88
.Ltmp613:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB103_51:                             # %lpad.i.i62
.Ltmp607:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB103_50:                             # %lpad.i.i34
.Ltmp601:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB103_49:                             # %lpad.i.i
.Ltmp595:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB103_39:                             # %terminate.lpad.i.i.i82
.Ltmp610:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB103_27:                             # %terminate.lpad.i.i.i57
.Ltmp604:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB103_15:                             # %terminate.lpad.i.i.i28
.Ltmp598:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB103_3:                              # %terminate.lpad.i.i.i
.Ltmp592:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end103:
	.size	_ZN12GemmResourceIDF16_fE13resizeStorageERKSt5tupleIJlllEE, .Lfunc_end103-_ZN12GemmResourceIDF16_fE13resizeStorageERKSt5tupleIJlllEE
	.cfi_endproc
	.section	.gcc_except_table._ZN12GemmResourceIDF16_fE13resizeStorageERKSt5tupleIJlllEE,"aG",@progbits,_ZN12GemmResourceIDF16_fE13resizeStorageERKSt5tupleIJlllEE,comdat
	.p2align	2
GCC_except_table103:
.Lexception27:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase9-.Lttbaseref9
.Lttbaseref9:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end27-.Lcst_begin27
.Lcst_begin27:
	.uleb128 .Lfunc_begin27-.Lfunc_begin27  # >> Call Site 1 <<
	.uleb128 .Ltmp590-.Lfunc_begin27        #   Call between .Lfunc_begin27 and .Ltmp590
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp590-.Lfunc_begin27        # >> Call Site 2 <<
	.uleb128 .Ltmp591-.Ltmp590              #   Call between .Ltmp590 and .Ltmp591
	.uleb128 .Ltmp592-.Lfunc_begin27        #     jumps to .Ltmp592
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp593-.Lfunc_begin27        # >> Call Site 3 <<
	.uleb128 .Ltmp594-.Ltmp593              #   Call between .Ltmp593 and .Ltmp594
	.uleb128 .Ltmp595-.Lfunc_begin27        #     jumps to .Ltmp595
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp594-.Lfunc_begin27        # >> Call Site 4 <<
	.uleb128 .Ltmp596-.Ltmp594              #   Call between .Ltmp594 and .Ltmp596
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp596-.Lfunc_begin27        # >> Call Site 5 <<
	.uleb128 .Ltmp597-.Ltmp596              #   Call between .Ltmp596 and .Ltmp597
	.uleb128 .Ltmp598-.Lfunc_begin27        #     jumps to .Ltmp598
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp599-.Lfunc_begin27        # >> Call Site 6 <<
	.uleb128 .Ltmp600-.Ltmp599              #   Call between .Ltmp599 and .Ltmp600
	.uleb128 .Ltmp601-.Lfunc_begin27        #     jumps to .Ltmp601
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp600-.Lfunc_begin27        # >> Call Site 7 <<
	.uleb128 .Ltmp602-.Ltmp600              #   Call between .Ltmp600 and .Ltmp602
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp602-.Lfunc_begin27        # >> Call Site 8 <<
	.uleb128 .Ltmp603-.Ltmp602              #   Call between .Ltmp602 and .Ltmp603
	.uleb128 .Ltmp604-.Lfunc_begin27        #     jumps to .Ltmp604
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp605-.Lfunc_begin27        # >> Call Site 9 <<
	.uleb128 .Ltmp606-.Ltmp605              #   Call between .Ltmp605 and .Ltmp606
	.uleb128 .Ltmp607-.Lfunc_begin27        #     jumps to .Ltmp607
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp606-.Lfunc_begin27        # >> Call Site 10 <<
	.uleb128 .Ltmp608-.Ltmp606              #   Call between .Ltmp606 and .Ltmp608
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp608-.Lfunc_begin27        # >> Call Site 11 <<
	.uleb128 .Ltmp609-.Ltmp608              #   Call between .Ltmp608 and .Ltmp609
	.uleb128 .Ltmp610-.Lfunc_begin27        #     jumps to .Ltmp610
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp611-.Lfunc_begin27        # >> Call Site 12 <<
	.uleb128 .Ltmp612-.Ltmp611              #   Call between .Ltmp611 and .Ltmp612
	.uleb128 .Ltmp613-.Lfunc_begin27        #     jumps to .Ltmp613
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp612-.Lfunc_begin27        # >> Call Site 13 <<
	.uleb128 .Lfunc_end103-.Ltmp612         #   Call between .Ltmp612 and .Lfunc_end103
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end27:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase9:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt11make_uniqueI12GemmResourceIDF16_fEJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_,"axG",@progbits,_ZSt11make_uniqueI12GemmResourceIDF16_fEJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_,comdat
	.weak	_ZSt11make_uniqueI12GemmResourceIDF16_fEJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_ # -- Begin function _ZSt11make_uniqueI12GemmResourceIDF16_fEJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_
	.p2align	4, 0x90
	.type	_ZSt11make_uniqueI12GemmResourceIDF16_fEJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_,@function
_ZSt11make_uniqueI12GemmResourceIDF16_fEJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_: # @_ZSt11make_uniqueI12GemmResourceIDF16_fEJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_
	.cfi_startproc
# %bb.0:                                # %invoke.cont
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movl	$144, %edi
	callq	_Znwm
	movq	$_ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E_8__invokeES7_, (%rax)
	movq	$0, 8(%rax)
	movq	$_ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E_8__invokeES7_, 16(%rax)
	movq	$0, 24(%rax)
	movq	$_ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE_8__invokeES7_, 32(%rax)
	movq	$0, 40(%rax)
	movq	$_ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE_8__invokeES7_, 48(%rax)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 56(%rax)
	movups	%xmm0, 72(%rax)
	movups	%xmm0, 88(%rax)
	movups	%xmm0, 104(%rax)
	movups	%xmm0, 120(%rax)
	movq	$0, 136(%rax)
	movq	%rax, (%rbx)
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end104:
	.size	_ZSt11make_uniqueI12GemmResourceIDF16_fEJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_, .Lfunc_end104-_ZSt11make_uniqueI12GemmResourceIDF16_fEJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10unique_ptrI12GemmResourceIDF16_fESt14default_deleteIS1_EED2Ev,"axG",@progbits,_ZNSt10unique_ptrI12GemmResourceIDF16_fESt14default_deleteIS1_EED2Ev,comdat
	.weak	_ZNSt10unique_ptrI12GemmResourceIDF16_fESt14default_deleteIS1_EED2Ev # -- Begin function _ZNSt10unique_ptrI12GemmResourceIDF16_fESt14default_deleteIS1_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt10unique_ptrI12GemmResourceIDF16_fESt14default_deleteIS1_EED2Ev,@function
_ZNSt10unique_ptrI12GemmResourceIDF16_fESt14default_deleteIS1_EED2Ev: # @_ZNSt10unique_ptrI12GemmResourceIDF16_fESt14default_deleteIS1_EED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
	movq	(%rdi), %rbx
	testq	%rbx, %rbx
	je	.LBB105_2
# %bb.1:                                # %_ZNKSt14default_deleteI12GemmResourceIDF16_fEEclEPS1_.exit
	movq	%rbx, %rdi
	callq	_ZN12GemmResourceIDF16_fED2Ev
	movq	%rbx, %rdi
	callq	_ZdlPv
.LBB105_2:                              # %if.end
	movq	$0, (%r14)
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end105:
	.size	_ZNSt10unique_ptrI12GemmResourceIDF16_fESt14default_deleteIS1_EED2Ev, .Lfunc_end105-_ZNSt10unique_ptrI12GemmResourceIDF16_fESt14default_deleteIS1_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EEl,"axG",@progbits,_ZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EEl,comdat
	.weak	_ZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EEl # -- Begin function _ZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EEl
	.p2align	4, 0x90
	.type	_ZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EEl,@function
_ZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EEl: # @_ZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EEl
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	testq	%rsi, %rsi
	jle	.LBB106_1
# %bb.2:                                # %if.else
	movq	%rsi, %r14
	addq	%rsi, %r14
	movq	%rsp, %rdi
	movq	%r14, %rsi
	callq	hipMalloc
	testl	%eax, %eax
	jne	.LBB106_5
# %bb.3:                                # %if.end
	movq	(%rsp), %rax
	movq	$_ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E0_8__invokeES7_, (%rbx)
	movq	%rax, 8(%rbx)
	jmp	.LBB106_4
.LBB106_1:                              # %if.then
	movq	$_ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E_8__invokeES7_, (%rbx)
	movq	$0, 8(%rbx)
.LBB106_4:                              # %return
	movq	%rbx, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB106_5:                              # %if.then4
	.cfi_def_cfa_offset 48
	movq	stderr(%rip), %r15
	movq	%rsp, %r12
	movq	%r12, %rdi
	movq	%r14, %rsi
	callq	_ZL9hipMallocIDF16_E10hipError_tPPT_m
	movl	%eax, %edi
	callq	hipGetErrorString
	movq	%rax, %rbx
	movq	%r12, %rdi
	movq	%r14, %rsi
	callq	_ZL9hipMallocIDF16_E10hipError_tPPT_m
	movl	$.L.str.54, %esi
	movl	$.L.str.55, %r8d
	movq	%r15, %rdi
	movq	%rbx, %rdx
	movl	%eax, %ecx
	movl	$43, %r9d
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.Lfunc_end106:
	.size	_ZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EEl, .Lfunc_end106-_ZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EEl,"axG",@progbits,_ZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EEl,comdat
	.weak	_ZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EEl # -- Begin function _ZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EEl
	.p2align	4, 0x90
	.type	_ZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EEl,@function
_ZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EEl: # @_ZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EEl
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	testq	%rsi, %rsi
	jle	.LBB107_1
# %bb.2:                                # %if.else
	movq	%rsi, %r14
	shlq	$2, %r14
	movq	%rsp, %rdi
	movq	%r14, %rsi
	callq	hipMalloc
	testl	%eax, %eax
	jne	.LBB107_5
# %bb.3:                                # %if.end
	movq	(%rsp), %rax
	movq	$_ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE0_8__invokeES7_, (%rbx)
	movq	%rax, 8(%rbx)
	jmp	.LBB107_4
.LBB107_1:                              # %if.then
	movq	$_ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE_8__invokeES7_, (%rbx)
	movq	$0, 8(%rbx)
.LBB107_4:                              # %return
	movq	%rbx, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB107_5:                              # %if.then4
	.cfi_def_cfa_offset 48
	movq	stderr(%rip), %r15
	movq	%rsp, %r12
	movq	%r12, %rdi
	movq	%r14, %rsi
	callq	_ZL9hipMallocIfE10hipError_tPPT_m
	movl	%eax, %edi
	callq	hipGetErrorString
	movq	%rax, %rbx
	movq	%r12, %rdi
	movq	%r14, %rsi
	callq	_ZL9hipMallocIfE10hipError_tPPT_m
	movl	$.L.str.54, %esi
	movl	$.L.str.55, %r8d
	movq	%r15, %rdi
	movq	%rbx, %rdx
	movl	%eax, %ecx
	movl	$43, %r9d
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.Lfunc_end107:
	.size	_ZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EEl, .Lfunc_end107-_ZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EEl
	.cfi_endproc
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function _ZL9hipMallocIDF16_E10hipError_tPPT_m
	.type	_ZL9hipMallocIDF16_E10hipError_tPPT_m,@function
_ZL9hipMallocIDF16_E10hipError_tPPT_m:  # @_ZL9hipMallocIDF16_E10hipError_tPPT_m
	.cfi_startproc
# %bb.0:                                # %entry
	jmp	hipMalloc                       # TAILCALL
.Lfunc_end108:
	.size	_ZL9hipMallocIDF16_E10hipError_tPPT_m, .Lfunc_end108-_ZL9hipMallocIDF16_E10hipError_tPPT_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E_8__invokeES7_,"axG",@progbits,_ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E_8__invokeES7_,comdat
	.weak	_ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E_8__invokeES7_ # -- Begin function _ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E_8__invokeES7_
	.p2align	4, 0x90
	.type	_ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E_8__invokeES7_,@function
_ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E_8__invokeES7_: # @_ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E_8__invokeES7_
	.cfi_startproc
# %bb.0:                                # %entry
	retq
.Lfunc_end109:
	.size	_ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E_8__invokeES7_, .Lfunc_end109-_ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E_8__invokeES7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E0_8__invokeES7_,"axG",@progbits,_ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E0_8__invokeES7_,comdat
	.weak	_ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E0_8__invokeES7_ # -- Begin function _ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E0_8__invokeES7_
	.p2align	4, 0x90
	.type	_ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E0_8__invokeES7_,@function
_ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E0_8__invokeES7_: # @_ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E0_8__invokeES7_
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	callq	hipFree
	testl	%eax, %eax
	jne	.LBB110_2
# %bb.1:                                # %_ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENKUlPDF16_E0_clES7_.exit
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB110_2:                              # %if.then.i
	.cfi_def_cfa_offset 32
	movq	stderr(%rip), %r14
	movq	%rbx, %rdi
	callq	hipFree
	movl	%eax, %edi
	callq	hipGetErrorString
	movq	%rax, %r15
	movq	%rbx, %rdi
	callq	hipFree
	movl	$.L.str.54, %esi
	movl	$.L.str.55, %r8d
	movq	%r14, %rdi
	movq	%r15, %rdx
	movl	%eax, %ecx
	movl	$44, %r9d
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.Lfunc_end110:
	.size	_ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E0_8__invokeES7_, .Lfunc_end110-_ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E0_8__invokeES7_
	.cfi_endproc
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function _ZL9hipMallocIfE10hipError_tPPT_m
	.type	_ZL9hipMallocIfE10hipError_tPPT_m,@function
_ZL9hipMallocIfE10hipError_tPPT_m:      # @_ZL9hipMallocIfE10hipError_tPPT_m
	.cfi_startproc
# %bb.0:                                # %entry
	jmp	hipMalloc                       # TAILCALL
.Lfunc_end111:
	.size	_ZL9hipMallocIfE10hipError_tPPT_m, .Lfunc_end111-_ZL9hipMallocIfE10hipError_tPPT_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE_8__invokeES7_,"axG",@progbits,_ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE_8__invokeES7_,comdat
	.weak	_ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE_8__invokeES7_ # -- Begin function _ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE_8__invokeES7_
	.p2align	4, 0x90
	.type	_ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE_8__invokeES7_,@function
_ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE_8__invokeES7_: # @_ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE_8__invokeES7_
	.cfi_startproc
# %bb.0:                                # %entry
	retq
.Lfunc_end112:
	.size	_ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE_8__invokeES7_, .Lfunc_end112-_ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE_8__invokeES7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE0_8__invokeES7_,"axG",@progbits,_ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE0_8__invokeES7_,comdat
	.weak	_ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE0_8__invokeES7_ # -- Begin function _ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE0_8__invokeES7_
	.p2align	4, 0x90
	.type	_ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE0_8__invokeES7_,@function
_ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE0_8__invokeES7_: # @_ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE0_8__invokeES7_
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	callq	hipFree
	testl	%eax, %eax
	jne	.LBB113_2
# %bb.1:                                # %_ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENKUlPfE0_clES7_.exit
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB113_2:                              # %if.then.i
	.cfi_def_cfa_offset 32
	movq	stderr(%rip), %r14
	movq	%rbx, %rdi
	callq	hipFree
	movl	%eax, %edi
	callq	hipGetErrorString
	movq	%rax, %r15
	movq	%rbx, %rdi
	callq	hipFree
	movl	$.L.str.54, %esi
	movl	$.L.str.55, %r8d
	movq	%r14, %rdi
	movq	%r15, %rdx
	movl	%eax, %ecx
	movl	$44, %r9d
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.Lfunc_end113:
	.size	_ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE0_8__invokeES7_, .Lfunc_end113-_ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE0_8__invokeES7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN12GemmResourceIDF16_fED2Ev,"axG",@progbits,_ZN12GemmResourceIDF16_fED2Ev,comdat
	.weak	_ZN12GemmResourceIDF16_fED2Ev   # -- Begin function _ZN12GemmResourceIDF16_fED2Ev
	.p2align	4, 0x90
	.type	_ZN12GemmResourceIDF16_fED2Ev,@function
_ZN12GemmResourceIDF16_fED2Ev:          # @_ZN12GemmResourceIDF16_fED2Ev
.Lfunc_begin28:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception28
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	88(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB114_2
# %bb.1:                                # %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i
	callq	_ZdaPv
.LBB114_2:                              # %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit
	movq	$0, 88(%rbx)
	movq	80(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB114_4
# %bb.3:                                # %_ZNKSt14default_deleteIA_fEclIfEENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i4
	callq	_ZdaPv
.LBB114_4:                              # %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit5
	movq	$0, 80(%rbx)
	movq	72(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB114_6
# %bb.5:                                # %_ZNKSt14default_deleteIA_DF16_EclIDF16_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i
	callq	_ZdaPv
.LBB114_6:                              # %_ZNSt10unique_ptrIA_DF16_St14default_deleteIS0_EED2Ev.exit
	movq	$0, 72(%rbx)
	movq	64(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB114_8
# %bb.7:                                # %_ZNKSt14default_deleteIA_DF16_EclIDF16_EENSt9enable_ifIXsr14is_convertibleIPA_T_PS0_EE5valueEvE4typeEPS4_.exit.i10
	callq	_ZdaPv
.LBB114_8:                              # %_ZNSt10unique_ptrIA_DF16_St14default_deleteIS0_EED2Ev.exit11
	movq	$0, 64(%rbx)
	movq	56(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB114_10
# %bb.9:                                # %if.then.i
.Ltmp614:
	callq	*48(%rbx)
.Ltmp615:
.LBB114_10:                             # %_ZNSt10unique_ptrIfPFvPfEED2Ev.exit
	movq	$0, 56(%rbx)
	movq	40(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB114_12
# %bb.11:                               # %if.then.i17
.Ltmp617:
	callq	*32(%rbx)
.Ltmp618:
.LBB114_12:                             # %_ZNSt10unique_ptrIfPFvPfEED2Ev.exit19
	movq	$0, 40(%rbx)
	movq	24(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB114_14
# %bb.13:                               # %if.then.i23
.Ltmp620:
	callq	*16(%rbx)
.Ltmp621:
.LBB114_14:                             # %_ZNSt10unique_ptrIDF16_PFvPDF16_EED2Ev.exit
	movq	$0, 24(%rbx)
	movq	8(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB114_16
# %bb.15:                               # %if.then.i28
.Ltmp623:
	callq	*(%rbx)
.Ltmp624:
.LBB114_16:                             # %_ZNSt10unique_ptrIDF16_PFvPDF16_EED2Ev.exit30
	movq	$0, 8(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB114_20:                             # %lpad.i29
	.cfi_def_cfa_offset 16
.Ltmp625:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB114_19:                             # %lpad.i24
.Ltmp622:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB114_18:                             # %lpad.i18
.Ltmp619:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB114_17:                             # %lpad.i
.Ltmp616:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end114:
	.size	_ZN12GemmResourceIDF16_fED2Ev, .Lfunc_end114-_ZN12GemmResourceIDF16_fED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN12GemmResourceIDF16_fED2Ev,"aG",@progbits,_ZN12GemmResourceIDF16_fED2Ev,comdat
	.p2align	2
GCC_except_table114:
.Lexception28:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase10-.Lttbaseref10
.Lttbaseref10:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end28-.Lcst_begin28
.Lcst_begin28:
	.uleb128 .Ltmp614-.Lfunc_begin28        # >> Call Site 1 <<
	.uleb128 .Ltmp615-.Ltmp614              #   Call between .Ltmp614 and .Ltmp615
	.uleb128 .Ltmp616-.Lfunc_begin28        #     jumps to .Ltmp616
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp617-.Lfunc_begin28        # >> Call Site 2 <<
	.uleb128 .Ltmp618-.Ltmp617              #   Call between .Ltmp617 and .Ltmp618
	.uleb128 .Ltmp619-.Lfunc_begin28        #     jumps to .Ltmp619
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp620-.Lfunc_begin28        # >> Call Site 3 <<
	.uleb128 .Ltmp621-.Ltmp620              #   Call between .Ltmp620 and .Ltmp621
	.uleb128 .Ltmp622-.Lfunc_begin28        #     jumps to .Ltmp622
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp623-.Lfunc_begin28        # >> Call Site 4 <<
	.uleb128 .Ltmp624-.Ltmp623              #   Call between .Ltmp623 and .Ltmp624
	.uleb128 .Ltmp625-.Lfunc_begin28        #     jumps to .Ltmp625
	.byte	1                               #   On action: 1
.Lcst_end28:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase10:
	.p2align	2
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function .omp_outlined.
	.type	.omp_outlined.,@function
.omp_outlined.:                         # @.omp_outlined.
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	(%rdx), %ebp
	subl	$1, %ebp
	jb	.LBB115_5
# %bb.1:                                # %omp.precond.then
	movq	%r9, %r14
	movq	%r8, %r15
	movq	%rcx, %rbx
	movl	$0, 4(%rsp)
	movl	%ebp, (%rsp)
	movl	$1, 20(%rsp)
	movl	$0, 16(%rsp)
	movl	(%rdi), %esi
	subq	$8, %rsp
	.cfi_adjust_cfa_offset 8
	leaq	28(%rsp), %rax
	leaq	24(%rsp), %rcx
	leaq	12(%rsp), %r8
	leaq	8(%rsp), %r9
	movl	$.L__unnamed_2, %edi
	movl	%esi, 16(%rsp)                  # 4-byte Spill
	movl	$34, %edx
	pushq	$1
	.cfi_adjust_cfa_offset 8
	pushq	$1
	.cfi_adjust_cfa_offset 8
	pushq	%rax
	.cfi_adjust_cfa_offset 8
	callq	__kmpc_for_static_init_4u
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	movl	(%rsp), %eax
	cmpl	%ebp, %eax
	cmoval	%ebp, %eax
	movl	%eax, (%rsp)
	movl	4(%rsp), %ebp
	addl	$1, %eax
	cmpl	%eax, %ebp
	jae	.LBB115_4
# %bb.2:                                # %omp.inner.for.body.preheader
	movq	80(%rsp), %r12
	leaq	12(%rsp), %r13
	.p2align	4, 0x90
.LBB115_3:                              # %omp.inner.for.body
                                        # =>This Inner Loop Header: Depth=1
	movl	%ebp, 12(%rsp)
	movl	$.L__unnamed_1, %edi
	movl	$.omp_outlined..56, %edx
	movl	$5, %esi
	movq	%rbx, %rcx
	movq	%r13, %r8
	movq	%r15, %r9
	xorl	%eax, %eax
	pushq	%r12
	.cfi_adjust_cfa_offset 8
	pushq	%r14
	.cfi_adjust_cfa_offset 8
	callq	__kmpc_fork_call@PLT
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	addl	$1, %ebp
	movl	(%rsp), %eax
	addl	$1, %eax
	cmpl	%eax, %ebp
	jb	.LBB115_3
.LBB115_4:                              # %omp.loop.exit
	movl	$.L__unnamed_2, %edi
	movl	8(%rsp), %esi                   # 4-byte Reload
	callq	__kmpc_for_static_fini@PLT
.LBB115_5:                              # %omp.precond.end
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end115:
	.size	.omp_outlined., .Lfunc_end115-.omp_outlined.
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4                               # -- Begin function .omp_outlined..56
.LCPI116_0:
	.long	0x80000000                      # float -0
	.long	0x80000000                      # float -0
	.long	0x80000000                      # float -0
	.long	0x80000000                      # float -0
	.text
	.p2align	4, 0x90
	.type	.omp_outlined..56,@function
.omp_outlined..56:                      # @.omp_outlined..56
.Lfunc_begin29:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception29
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r9, 32(%rsp)                   # 8-byte Spill
	movq	%r8, 24(%rsp)                   # 8-byte Spill
	movl	(%rdx), %ebp
	subl	$1, %ebp
	jb	.LBB116_6
# %bb.1:                                # %omp.precond.then
	movq	%rcx, %r12
	movq	%rdx, %rbx
	movl	$0, 8(%rsp)
	movl	%ebp, 4(%rsp)
	movl	$1, 20(%rsp)
	movl	$0, 16(%rsp)
	movl	(%rdi), %esi
	.cfi_escape 0x2e, 0x20
	subq	$8, %rsp
	.cfi_adjust_cfa_offset 8
	leaq	28(%rsp), %rax
	leaq	24(%rsp), %rcx
	leaq	16(%rsp), %r8
	leaq	12(%rsp), %r9
	movl	$.L__unnamed_2, %edi
	movl	%esi, 20(%rsp)                  # 4-byte Spill
	movl	$34, %edx
	pushq	$1
	.cfi_adjust_cfa_offset 8
	pushq	$1
	.cfi_adjust_cfa_offset 8
	pushq	%rax
	.cfi_adjust_cfa_offset 8
	callq	__kmpc_for_static_init_4u
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	movl	4(%rsp), %eax
	cmpl	%ebp, %eax
	cmoval	%ebp, %eax
	movl	%eax, 4(%rsp)
	movl	8(%rsp), %ebp
	addl	$1, %eax
	cmpl	%eax, %ebp
	jae	.LBB116_5
	.p2align	4, 0x90
.LBB116_3:                              # %omp.inner.for.body
                                        # =>This Inner Loop Header: Depth=1
	movl	(%r12), %edi
	movl	(%rbx), %r15d
	imull	%edi, %r15d
	movq	32(%rsp), %rax                  # 8-byte Reload
	movl	(%rax), %edx
.Ltmp626:
	.cfi_escape 0x2e, 0x00
	movl	%ebp, %esi
	movq	24(%rsp), %rax                  # 8-byte Reload
	callq	*(%rax)
.Ltmp627:
# %bb.4:                                # %invoke.cont
                                        #   in Loop: Header=BB116_3 Depth=1
	movl	%eax, %r13d
	leal	(%r15,%rbp), %eax
	imulq	$1321528399, %rax, %rax         # imm = 0x4EC4EC4F
	shrq	$34, %rax
	leal	(%rax,%rax,2), %ecx
	leal	(%rax,%rcx,4), %eax
	subl	%eax, %r15d
	addl	%ebp, %r15d
	.cfi_escape 0x2e, 0x00
	movl	%r15d, %eax
	xorps	%xmm0, %xmm0
	cvtsi2ss	%rax, %xmm0
	callq	__gnu_f2h_ieee@PLT
	.cfi_escape 0x2e, 0x00
	movzwl	%ax, %r14d
	movl	%r14d, %edi
	callq	__gnu_h2f_ieee@PLT
	.cfi_escape 0x2e, 0x00
	xorps	.LCPI116_0(%rip), %xmm0
	callq	__gnu_f2h_ieee@PLT
                                        # kill: def $ax killed $ax def $eax
	testb	$1, %r15b
	cmovel	%r14d, %eax
	movq	96(%rsp), %rcx
	movq	(%rcx), %rcx
	movl	%r13d, %edx
	movw	%ax, (%rcx,%rdx,2)
	addl	$1, %ebp
	movl	4(%rsp), %eax
	addl	$1, %eax
	cmpl	%eax, %ebp
	jb	.LBB116_3
.LBB116_5:                              # %omp.loop.exit
	.cfi_escape 0x2e, 0x00
	movl	$.L__unnamed_2, %edi
	movl	12(%rsp), %esi                  # 4-byte Reload
	callq	__kmpc_for_static_fini@PLT
.LBB116_6:                              # %omp.precond.end
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB116_7:                              # %lpad
	.cfi_def_cfa_offset 96
.Ltmp628:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end116:
	.size	.omp_outlined..56, .Lfunc_end116-.omp_outlined..56
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table116:
.Lexception29:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase11-.Lttbaseref11
.Lttbaseref11:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end29-.Lcst_begin29
.Lcst_begin29:
	.uleb128 .Ltmp626-.Lfunc_begin29        # >> Call Site 1 <<
	.uleb128 .Ltmp627-.Ltmp626              #   Call between .Ltmp626 and .Ltmp627
	.uleb128 .Ltmp628-.Lfunc_begin29        #     jumps to .Ltmp628
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp627-.Lfunc_begin29        # >> Call Site 2 <<
	.uleb128 .Lfunc_end116-.Ltmp627         #   Call between .Ltmp627 and .Lfunc_end116
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end29:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase11:
	.p2align	2
                                        # -- End function
	.section	.text._ZZN10MatrixUtilI9col_majorE4fillIDF16_EEvPT_jjENUljjjE0_8__invokeEjjj,"axG",@progbits,_ZZN10MatrixUtilI9col_majorE4fillIDF16_EEvPT_jjENUljjjE0_8__invokeEjjj,comdat
	.weak	_ZZN10MatrixUtilI9col_majorE4fillIDF16_EEvPT_jjENUljjjE0_8__invokeEjjj # -- Begin function _ZZN10MatrixUtilI9col_majorE4fillIDF16_EEvPT_jjENUljjjE0_8__invokeEjjj
	.p2align	4, 0x90
	.type	_ZZN10MatrixUtilI9col_majorE4fillIDF16_EEvPT_jjENUljjjE0_8__invokeEjjj,@function
_ZZN10MatrixUtilI9col_majorE4fillIDF16_EEvPT_jjENUljjjE0_8__invokeEjjj: # @_ZZN10MatrixUtilI9col_majorE4fillIDF16_EEvPT_jjENUljjjE0_8__invokeEjjj
	.cfi_startproc
# %bb.0:                                # %entry
                                        # kill: def $esi killed $esi def $rsi
                                        # kill: def $edi killed $edi def $rdi
	imull	%edx, %esi
	leal	(%rsi,%rdi), %eax
	retq
.Lfunc_end117:
	.size	_ZZN10MatrixUtilI9col_majorE4fillIDF16_EEvPT_jjENUljjjE0_8__invokeEjjj, .Lfunc_end117-_ZZN10MatrixUtilI9col_majorE4fillIDF16_EEvPT_jjENUljjjE0_8__invokeEjjj
	.cfi_endproc
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function .omp_outlined..57
	.type	.omp_outlined..57,@function
.omp_outlined..57:                      # @.omp_outlined..57
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	(%rdx), %ebp
	subl	$1, %ebp
	jb	.LBB118_5
# %bb.1:                                # %omp.precond.then
	movq	%r9, %r14
	movq	%r8, %r15
	movq	%rcx, %rbx
	movl	$0, 4(%rsp)
	movl	%ebp, (%rsp)
	movl	$1, 20(%rsp)
	movl	$0, 16(%rsp)
	movl	(%rdi), %esi
	subq	$8, %rsp
	.cfi_adjust_cfa_offset 8
	leaq	28(%rsp), %rax
	leaq	24(%rsp), %rcx
	leaq	12(%rsp), %r8
	leaq	8(%rsp), %r9
	movl	$.L__unnamed_2, %edi
	movl	%esi, 16(%rsp)                  # 4-byte Spill
	movl	$34, %edx
	pushq	$1
	.cfi_adjust_cfa_offset 8
	pushq	$1
	.cfi_adjust_cfa_offset 8
	pushq	%rax
	.cfi_adjust_cfa_offset 8
	callq	__kmpc_for_static_init_4u
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	movl	(%rsp), %eax
	cmpl	%ebp, %eax
	cmoval	%ebp, %eax
	movl	%eax, (%rsp)
	movl	4(%rsp), %ebp
	addl	$1, %eax
	cmpl	%eax, %ebp
	jae	.LBB118_4
# %bb.2:                                # %omp.inner.for.body.preheader
	movq	80(%rsp), %r12
	leaq	12(%rsp), %r13
	.p2align	4, 0x90
.LBB118_3:                              # %omp.inner.for.body
                                        # =>This Inner Loop Header: Depth=1
	movl	%ebp, 12(%rsp)
	movl	$.L__unnamed_1, %edi
	movl	$.omp_outlined..58, %edx
	movl	$5, %esi
	movq	%rbx, %rcx
	movq	%r13, %r8
	movq	%r15, %r9
	xorl	%eax, %eax
	pushq	%r12
	.cfi_adjust_cfa_offset 8
	pushq	%r14
	.cfi_adjust_cfa_offset 8
	callq	__kmpc_fork_call@PLT
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	addl	$1, %ebp
	movl	(%rsp), %eax
	addl	$1, %eax
	cmpl	%eax, %ebp
	jb	.LBB118_3
.LBB118_4:                              # %omp.loop.exit
	movl	$.L__unnamed_2, %edi
	movl	8(%rsp), %esi                   # 4-byte Reload
	callq	__kmpc_for_static_fini@PLT
.LBB118_5:                              # %omp.precond.end
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end118:
	.size	.omp_outlined..57, .Lfunc_end118-.omp_outlined..57
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4                               # -- Begin function .omp_outlined..58
.LCPI119_0:
	.long	0x80000000                      # float -0
	.long	0x80000000                      # float -0
	.long	0x80000000                      # float -0
	.long	0x80000000                      # float -0
	.text
	.p2align	4, 0x90
	.type	.omp_outlined..58,@function
.omp_outlined..58:                      # @.omp_outlined..58
.Lfunc_begin30:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception30
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r9, 32(%rsp)                   # 8-byte Spill
	movq	%r8, 24(%rsp)                   # 8-byte Spill
	movl	(%rdx), %ebp
	subl	$1, %ebp
	jb	.LBB119_6
# %bb.1:                                # %omp.precond.then
	movq	%rcx, %r12
	movq	%rdx, %rbx
	movl	$0, 8(%rsp)
	movl	%ebp, 4(%rsp)
	movl	$1, 20(%rsp)
	movl	$0, 16(%rsp)
	movl	(%rdi), %esi
	.cfi_escape 0x2e, 0x20
	subq	$8, %rsp
	.cfi_adjust_cfa_offset 8
	leaq	28(%rsp), %rax
	leaq	24(%rsp), %rcx
	leaq	16(%rsp), %r8
	leaq	12(%rsp), %r9
	movl	$.L__unnamed_2, %edi
	movl	%esi, 20(%rsp)                  # 4-byte Spill
	movl	$34, %edx
	pushq	$1
	.cfi_adjust_cfa_offset 8
	pushq	$1
	.cfi_adjust_cfa_offset 8
	pushq	%rax
	.cfi_adjust_cfa_offset 8
	callq	__kmpc_for_static_init_4u
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	movl	4(%rsp), %eax
	cmpl	%ebp, %eax
	cmoval	%ebp, %eax
	movl	%eax, 4(%rsp)
	movl	8(%rsp), %ebp
	addl	$1, %eax
	cmpl	%eax, %ebp
	jae	.LBB119_5
	.p2align	4, 0x90
.LBB119_3:                              # %omp.inner.for.body
                                        # =>This Inner Loop Header: Depth=1
	movl	(%r12), %edi
	movl	(%rbx), %r15d
	imull	%edi, %r15d
	movq	32(%rsp), %rax                  # 8-byte Reload
	movl	(%rax), %edx
.Ltmp629:
	.cfi_escape 0x2e, 0x00
	movl	%ebp, %esi
	movq	24(%rsp), %rax                  # 8-byte Reload
	callq	*(%rax)
.Ltmp630:
# %bb.4:                                # %invoke.cont
                                        #   in Loop: Header=BB119_3 Depth=1
	movl	%eax, %r13d
	leal	(%r15,%rbp), %eax
	imulq	$1321528399, %rax, %rax         # imm = 0x4EC4EC4F
	shrq	$34, %rax
	leal	(%rax,%rax,2), %ecx
	leal	(%rax,%rcx,4), %eax
	subl	%eax, %r15d
	addl	%ebp, %r15d
	.cfi_escape 0x2e, 0x00
	movl	%r15d, %eax
	xorps	%xmm0, %xmm0
	cvtsi2ss	%rax, %xmm0
	callq	__gnu_f2h_ieee@PLT
	.cfi_escape 0x2e, 0x00
	movzwl	%ax, %r14d
	movl	%r14d, %edi
	callq	__gnu_h2f_ieee@PLT
	.cfi_escape 0x2e, 0x00
	xorps	.LCPI119_0(%rip), %xmm0
	callq	__gnu_f2h_ieee@PLT
                                        # kill: def $ax killed $ax def $eax
	testb	$1, %r15b
	cmovel	%r14d, %eax
	movq	96(%rsp), %rcx
	movq	(%rcx), %rcx
	movl	%r13d, %edx
	movw	%ax, (%rcx,%rdx,2)
	addl	$1, %ebp
	movl	4(%rsp), %eax
	addl	$1, %eax
	cmpl	%eax, %ebp
	jb	.LBB119_3
.LBB119_5:                              # %omp.loop.exit
	.cfi_escape 0x2e, 0x00
	movl	$.L__unnamed_2, %edi
	movl	12(%rsp), %esi                  # 4-byte Reload
	callq	__kmpc_for_static_fini@PLT
.LBB119_6:                              # %omp.precond.end
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB119_7:                              # %lpad
	.cfi_def_cfa_offset 96
.Ltmp631:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end119:
	.size	.omp_outlined..58, .Lfunc_end119-.omp_outlined..58
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table119:
.Lexception30:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase12-.Lttbaseref12
.Lttbaseref12:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end30-.Lcst_begin30
.Lcst_begin30:
	.uleb128 .Ltmp629-.Lfunc_begin30        # >> Call Site 1 <<
	.uleb128 .Ltmp630-.Ltmp629              #   Call between .Ltmp629 and .Ltmp630
	.uleb128 .Ltmp631-.Lfunc_begin30        #     jumps to .Ltmp631
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp630-.Lfunc_begin30        # >> Call Site 2 <<
	.uleb128 .Lfunc_end119-.Ltmp630         #   Call between .Ltmp630 and .Lfunc_end119
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end30:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase12:
	.p2align	2
                                        # -- End function
	.section	.text._ZZN10MatrixUtilI9row_majorE4fillIDF16_EEvPT_jjENUljjjE_8__invokeEjjj,"axG",@progbits,_ZZN10MatrixUtilI9row_majorE4fillIDF16_EEvPT_jjENUljjjE_8__invokeEjjj,comdat
	.weak	_ZZN10MatrixUtilI9row_majorE4fillIDF16_EEvPT_jjENUljjjE_8__invokeEjjj # -- Begin function _ZZN10MatrixUtilI9row_majorE4fillIDF16_EEvPT_jjENUljjjE_8__invokeEjjj
	.p2align	4, 0x90
	.type	_ZZN10MatrixUtilI9row_majorE4fillIDF16_EEvPT_jjENUljjjE_8__invokeEjjj,@function
_ZZN10MatrixUtilI9row_majorE4fillIDF16_EEvPT_jjENUljjjE_8__invokeEjjj: # @_ZZN10MatrixUtilI9row_majorE4fillIDF16_EEvPT_jjENUljjjE_8__invokeEjjj
	.cfi_startproc
# %bb.0:                                # %entry
                                        # kill: def $esi killed $esi def $rsi
                                        # kill: def $edi killed $edi def $rdi
	imull	%edx, %edi
	leal	(%rdi,%rsi), %eax
	retq
.Lfunc_end120:
	.size	_ZZN10MatrixUtilI9row_majorE4fillIDF16_EEvPT_jjENUljjjE_8__invokeEjjj, .Lfunc_end120-_ZZN10MatrixUtilI9row_majorE4fillIDF16_EEvPT_jjENUljjjE_8__invokeEjjj
	.cfi_endproc
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function .omp_outlined..59
	.type	.omp_outlined..59,@function
.omp_outlined..59:                      # @.omp_outlined..59
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	(%rdx), %ebp
	subl	$1, %ebp
	jb	.LBB121_5
# %bb.1:                                # %omp.precond.then
	movq	%r9, %r14
	movq	%r8, %r15
	movq	%rcx, %rbx
	movl	$0, 4(%rsp)
	movl	%ebp, (%rsp)
	movl	$1, 20(%rsp)
	movl	$0, 16(%rsp)
	movl	(%rdi), %esi
	subq	$8, %rsp
	.cfi_adjust_cfa_offset 8
	leaq	28(%rsp), %rax
	leaq	24(%rsp), %rcx
	leaq	12(%rsp), %r8
	leaq	8(%rsp), %r9
	movl	$.L__unnamed_2, %edi
	movl	%esi, 16(%rsp)                  # 4-byte Spill
	movl	$34, %edx
	pushq	$1
	.cfi_adjust_cfa_offset 8
	pushq	$1
	.cfi_adjust_cfa_offset 8
	pushq	%rax
	.cfi_adjust_cfa_offset 8
	callq	__kmpc_for_static_init_4u
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	movl	(%rsp), %eax
	cmpl	%ebp, %eax
	cmoval	%ebp, %eax
	movl	%eax, (%rsp)
	movl	4(%rsp), %ebp
	addl	$1, %eax
	cmpl	%eax, %ebp
	jae	.LBB121_4
# %bb.2:                                # %omp.inner.for.body.preheader
	movq	80(%rsp), %r12
	leaq	12(%rsp), %r13
	.p2align	4, 0x90
.LBB121_3:                              # %omp.inner.for.body
                                        # =>This Inner Loop Header: Depth=1
	movl	%ebp, 12(%rsp)
	movl	$.L__unnamed_1, %edi
	movl	$.omp_outlined..60, %edx
	movl	$5, %esi
	movq	%rbx, %rcx
	movq	%r13, %r8
	movq	%r15, %r9
	xorl	%eax, %eax
	pushq	%r12
	.cfi_adjust_cfa_offset 8
	pushq	%r14
	.cfi_adjust_cfa_offset 8
	callq	__kmpc_fork_call@PLT
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	addl	$1, %ebp
	movl	(%rsp), %eax
	addl	$1, %eax
	cmpl	%eax, %ebp
	jb	.LBB121_3
.LBB121_4:                              # %omp.loop.exit
	movl	$.L__unnamed_2, %edi
	movl	8(%rsp), %esi                   # 4-byte Reload
	callq	__kmpc_for_static_fini@PLT
.LBB121_5:                              # %omp.precond.end
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end121:
	.size	.omp_outlined..59, .Lfunc_end121-.omp_outlined..59
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4                               # -- Begin function .omp_outlined..60
.LCPI122_0:
	.long	0x80000000                      # float -0
	.long	0x80000000                      # float -0
	.long	0x80000000                      # float -0
	.long	0x80000000                      # float -0
	.text
	.p2align	4, 0x90
	.type	.omp_outlined..60,@function
.omp_outlined..60:                      # @.omp_outlined..60
.Lfunc_begin31:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception31
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	(%rdx), %ebp
	subl	$1, %ebp
	jb	.LBB122_8
# %bb.1:                                # %omp.precond.then
	movq	%r9, %r14
	movq	%r8, %r15
	movq	%rcx, %r12
	movq	%rdx, %rbx
	movl	$0, 8(%rsp)
	movl	%ebp, 4(%rsp)
	movl	$1, 20(%rsp)
	movl	$0, 16(%rsp)
	movl	(%rdi), %esi
	.cfi_escape 0x2e, 0x20
	subq	$8, %rsp
	.cfi_adjust_cfa_offset 8
	leaq	28(%rsp), %rax
	leaq	24(%rsp), %rcx
	leaq	16(%rsp), %r8
	leaq	12(%rsp), %r9
	movl	$.L__unnamed_2, %edi
	movl	%esi, 20(%rsp)                  # 4-byte Spill
	movl	$34, %edx
	pushq	$1
	.cfi_adjust_cfa_offset 8
	pushq	$1
	.cfi_adjust_cfa_offset 8
	pushq	%rax
	.cfi_adjust_cfa_offset 8
	callq	__kmpc_for_static_init_4u
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	movl	4(%rsp), %eax
	cmpl	%ebp, %eax
	cmoval	%ebp, %eax
	movl	%eax, 4(%rsp)
	movl	8(%rsp), %ebp
	jmp	.LBB122_2
	.p2align	4, 0x90
.LBB122_6:                              # %invoke.cont
                                        #   in Loop: Header=BB122_2 Depth=1
	movq	80(%rsp), %rcx
	movq	(%rcx), %rcx
	movl	%eax, %eax
	movss	%xmm0, (%rcx,%rax,4)
	addl	$1, %ebp
	movl	4(%rsp), %eax
.LBB122_2:                              # %omp.precond.then
                                        # =>This Inner Loop Header: Depth=1
	addl	$1, %eax
	cmpl	%eax, %ebp
	jae	.LBB122_7
# %bb.3:                                # %omp.inner.for.body
                                        #   in Loop: Header=BB122_2 Depth=1
	movl	(%r12), %edi
	movl	(%rbx), %r13d
	imull	%edi, %r13d
	movl	(%r14), %edx
.Ltmp632:
	.cfi_escape 0x2e, 0x00
	movl	%ebp, %esi
	callq	*(%r15)
.Ltmp633:
# %bb.4:                                # %invoke.cont
                                        #   in Loop: Header=BB122_2 Depth=1
	leal	(%rbp,%r13), %ecx
	imulq	$1321528399, %rcx, %rcx         # imm = 0x4EC4EC4F
	shrq	$34, %rcx
	leal	(%rcx,%rcx,2), %edx
	leal	(%rcx,%rdx,4), %ecx
	subl	%ecx, %r13d
	addl	%ebp, %r13d
	movl	%r13d, %ecx
	xorps	%xmm0, %xmm0
	cvtsi2ss	%rcx, %xmm0
	testb	$1, %r13b
	je	.LBB122_6
# %bb.5:                                # %invoke.cont
                                        #   in Loop: Header=BB122_2 Depth=1
	xorps	.LCPI122_0(%rip), %xmm0
	jmp	.LBB122_6
.LBB122_7:                              # %omp.loop.exit
	.cfi_escape 0x2e, 0x00
	movl	$.L__unnamed_2, %edi
	movl	12(%rsp), %esi                  # 4-byte Reload
	callq	__kmpc_for_static_fini@PLT
.LBB122_8:                              # %omp.precond.end
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB122_9:                              # %lpad
	.cfi_def_cfa_offset 80
.Ltmp634:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end122:
	.size	.omp_outlined..60, .Lfunc_end122-.omp_outlined..60
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table122:
.Lexception31:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase13-.Lttbaseref13
.Lttbaseref13:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end31-.Lcst_begin31
.Lcst_begin31:
	.uleb128 .Ltmp632-.Lfunc_begin31        # >> Call Site 1 <<
	.uleb128 .Ltmp633-.Ltmp632              #   Call between .Ltmp632 and .Ltmp633
	.uleb128 .Ltmp634-.Lfunc_begin31        #     jumps to .Ltmp634
	.byte	1                               #   On action: 1
.Lcst_end31:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase13:
	.p2align	2
                                        # -- End function
	.section	.text._ZZN10MatrixUtilI9col_majorE4fillIfEEvPT_jjENUljjjE0_8__invokeEjjj,"axG",@progbits,_ZZN10MatrixUtilI9col_majorE4fillIfEEvPT_jjENUljjjE0_8__invokeEjjj,comdat
	.weak	_ZZN10MatrixUtilI9col_majorE4fillIfEEvPT_jjENUljjjE0_8__invokeEjjj # -- Begin function _ZZN10MatrixUtilI9col_majorE4fillIfEEvPT_jjENUljjjE0_8__invokeEjjj
	.p2align	4, 0x90
	.type	_ZZN10MatrixUtilI9col_majorE4fillIfEEvPT_jjENUljjjE0_8__invokeEjjj,@function
_ZZN10MatrixUtilI9col_majorE4fillIfEEvPT_jjENUljjjE0_8__invokeEjjj: # @_ZZN10MatrixUtilI9col_majorE4fillIfEEvPT_jjENUljjjE0_8__invokeEjjj
	.cfi_startproc
# %bb.0:                                # %entry
                                        # kill: def $esi killed $esi def $rsi
                                        # kill: def $edi killed $edi def $rdi
	imull	%edx, %esi
	leal	(%rsi,%rdi), %eax
	retq
.Lfunc_end123:
	.size	_ZZN10MatrixUtilI9col_majorE4fillIfEEvPT_jjENUljjjE0_8__invokeEjjj, .Lfunc_end123-_ZZN10MatrixUtilI9col_majorE4fillIfEEvPT_jjENUljjjE0_8__invokeEjjj
	.cfi_endproc
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function .omp_outlined..61
	.type	.omp_outlined..61,@function
.omp_outlined..61:                      # @.omp_outlined..61
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$16, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	(%rcx), %ebp
	imull	(%rdx), %ebp
	subl	$1, %ebp
	jb	.LBB124_20
# %bb.1:                                # %omp.precond.then
	movq	%r9, %rbx
	movq	%r8, %r15
	movl	$0, 4(%rsp)
	movl	%ebp, (%rsp)
	movl	$1, 12(%rsp)
	movl	$0, 8(%rsp)
	movl	(%rdi), %r14d
	subq	$8, %rsp
	.cfi_adjust_cfa_offset 8
	leaq	20(%rsp), %rax
	leaq	16(%rsp), %rcx
	leaq	12(%rsp), %r8
	leaq	8(%rsp), %r9
	movl	$.L__unnamed_2, %edi
	movl	%r14d, %esi
	movl	$34, %edx
	pushq	$1
	.cfi_adjust_cfa_offset 8
	pushq	$1
	.cfi_adjust_cfa_offset 8
	pushq	%rax
	.cfi_adjust_cfa_offset 8
	callq	__kmpc_for_static_init_4u
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	movl	(%rsp), %r11d
	cmpl	%ebp, %r11d
	cmoval	%ebp, %r11d
	movl	%r11d, (%rsp)
	movl	4(%rsp), %eax
	leal	1(%r11), %r12d
	cmpl	%r12d, %eax
	jae	.LBB124_19
# %bb.2:                                # %omp.inner.for.body.preheader
	movq	(%r15), %rdx
	movl	%r11d, %r10d
	subl	%eax, %r10d
	addl	$1, %r10d
	cmpl	$8, %r10d
	jb	.LBB124_14
# %bb.3:                                # %omp.inner.for.body.preheader
	movl	%r11d, %edi
	subl	%eax, %edi
	jl	.LBB124_14
# %bb.4:                                # %vector.memcheck
	movslq	%eax, %rsi
	addq	%rsi, %rdi
	leaq	(%rdx,%rdi,4), %rdi
	addq	$4, %rdi
	cmpq	%rbx, %rdi
	jbe	.LBB124_6
# %bb.5:                                # %vector.memcheck
	leaq	1(%rbx), %rdi
	leaq	(%rdx,%rsi,4), %rsi
	cmpq	%rsi, %rdi
	ja	.LBB124_14
.LBB124_6:                              # %vector.ph
	movl	%r10d, %r8d
	andl	$-8, %r8d
	leal	-8(%r8), %esi
	movl	%esi, %r9d
	shrl	$3, %r9d
	addl	$1, %r9d
	testl	%esi, %esi
	je	.LBB124_7
# %bb.8:                                # %vector.ph.new
	movss	(%rbx), %xmm0                   # xmm0 = mem[0],zero,zero,zero
	shufps	$0, %xmm0, %xmm0                # xmm0 = xmm0[0,0,0,0]
	movl	%r9d, %edi
	andl	$-2, %edi
	negl	%edi
	xorl	%ebp, %ebp
	movl	%eax, %esi
	.p2align	4, 0x90
.LBB124_9:                              # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	movslq	%esi, %rsi
	movups	%xmm0, (%rdx,%rsi,4)
	movups	%xmm0, 16(%rdx,%rsi,4)
	leal	8(%rsi), %ecx
	movslq	%ecx, %rcx
	movups	%xmm0, (%rdx,%rcx,4)
	movups	%xmm0, 16(%rdx,%rcx,4)
	addl	$16, %ebp
	addl	$16, %esi
	addl	$2, %edi
	jne	.LBB124_9
# %bb.10:                               # %middle.block.unr-lcssa
	testb	$1, %r9b
	je	.LBB124_12
.LBB124_11:                             # %vector.body.epil
	addl	%eax, %ebp
	movss	(%rbx), %xmm0                   # xmm0 = mem[0],zero,zero,zero
	shufps	$0, %xmm0, %xmm0                # xmm0 = xmm0[0,0,0,0]
	movslq	%ebp, %rcx
	movups	%xmm0, (%rdx,%rcx,4)
	movups	%xmm0, 16(%rdx,%rcx,4)
.LBB124_12:                             # %middle.block
	cmpl	%r8d, %r10d
	je	.LBB124_19
# %bb.13:
	addl	%r8d, %eax
.LBB124_14:                             # %omp.inner.for.body.preheader29
	movl	%r12d, %edi
	subl	%eax, %edi
	subl	%eax, %r11d
	andl	$3, %edi
	je	.LBB124_17
# %bb.15:                               # %omp.inner.for.body.prol.preheader
	negl	%edi
	.p2align	4, 0x90
.LBB124_16:                             # %omp.inner.for.body.prol
                                        # =>This Inner Loop Header: Depth=1
	movss	(%rbx), %xmm0                   # xmm0 = mem[0],zero,zero,zero
	cltq
	movss	%xmm0, (%rdx,%rax,4)
	addl	$1, %eax
	incl	%edi
	jne	.LBB124_16
.LBB124_17:                             # %omp.inner.for.body.prol.loopexit
	cmpl	$3, %r11d
	jb	.LBB124_19
	.p2align	4, 0x90
.LBB124_18:                             # %omp.inner.for.body
                                        # =>This Inner Loop Header: Depth=1
	movss	(%rbx), %xmm0                   # xmm0 = mem[0],zero,zero,zero
	cltq
	movss	%xmm0, (%rdx,%rax,4)
	leal	1(%rax), %ecx
	movss	(%rbx), %xmm0                   # xmm0 = mem[0],zero,zero,zero
	movslq	%ecx, %rcx
	movss	%xmm0, (%rdx,%rcx,4)
	leal	2(%rax), %ecx
	movss	(%rbx), %xmm0                   # xmm0 = mem[0],zero,zero,zero
	movslq	%ecx, %rcx
	movss	%xmm0, (%rdx,%rcx,4)
	leal	3(%rax), %ecx
	movss	(%rbx), %xmm0                   # xmm0 = mem[0],zero,zero,zero
	movslq	%ecx, %rcx
	movss	%xmm0, (%rdx,%rcx,4)
	addl	$4, %eax
	cmpl	%eax, %r12d
	jne	.LBB124_18
.LBB124_19:                             # %omp.loop.exit
	movl	$.L__unnamed_2, %edi
	movl	%r14d, %esi
	callq	__kmpc_for_static_fini@PLT
.LBB124_20:                             # %omp.precond.end
	addq	$16, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB124_7:
	.cfi_def_cfa_offset 64
	xorl	%ebp, %ebp
	testb	$1, %r9b
	jne	.LBB124_11
	jmp	.LBB124_12
.Lfunc_end124:
	.size	.omp_outlined..61, .Lfunc_end124-.omp_outlined..61
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN11HipResource8copyDataIDF16_EEvRSt10unique_ptrIT_PFvPS2_EERKS1_IA_S2_St14default_deleteIS8_EEl,"axG",@progbits,_ZN11HipResource8copyDataIDF16_EEvRSt10unique_ptrIT_PFvPS2_EERKS1_IA_S2_St14default_deleteIS8_EEl,comdat
	.weak	_ZN11HipResource8copyDataIDF16_EEvRSt10unique_ptrIT_PFvPS2_EERKS1_IA_S2_St14default_deleteIS8_EEl # -- Begin function _ZN11HipResource8copyDataIDF16_EEvRSt10unique_ptrIT_PFvPS2_EERKS1_IA_S2_St14default_deleteIS8_EEl
	.p2align	4, 0x90
	.type	_ZN11HipResource8copyDataIDF16_EEvRSt10unique_ptrIT_PFvPS2_EERKS1_IA_S2_St14default_deleteIS8_EEl,@function
_ZN11HipResource8copyDataIDF16_EEvRSt10unique_ptrIT_PFvPS2_EERKS1_IA_S2_St14default_deleteIS8_EEl: # @_ZN11HipResource8copyDataIDF16_EEvRSt10unique_ptrIT_PFvPS2_EERKS1_IA_S2_St14default_deleteIS8_EEl
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %rbx
	movq	%rsi, %r15
	movq	%rdi, %r12
	movq	8(%rdi), %rdi
	movq	(%rsi), %rsi
	addq	%rdx, %rbx
	movq	%rbx, %rdx
	movl	$1, %ecx
	callq	hipMemcpy
	testl	%eax, %eax
	jne	.LBB125_2
# %bb.1:                                # %if.end
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB125_2:                              # %if.then
	.cfi_def_cfa_offset 48
	movq	stderr(%rip), %r14
	movq	8(%r12), %rdi
	movq	(%r15), %rsi
	movq	%rbx, %rdx
	movl	$1, %ecx
	callq	hipMemcpy
	movl	%eax, %edi
	callq	hipGetErrorString
	movq	%rax, %r13
	movq	8(%r12), %rdi
	movq	(%r15), %rsi
	movq	%rbx, %rdx
	movl	$1, %ecx
	callq	hipMemcpy
	movl	$.L.str.54, %esi
	movl	$.L.str.55, %r8d
	movq	%r14, %rdi
	movq	%r13, %rdx
	movl	%eax, %ecx
	movl	$72, %r9d
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.Lfunc_end125:
	.size	_ZN11HipResource8copyDataIDF16_EEvRSt10unique_ptrIT_PFvPS2_EERKS1_IA_S2_St14default_deleteIS8_EEl, .Lfunc_end125-_ZN11HipResource8copyDataIDF16_EEvRSt10unique_ptrIT_PFvPS2_EERKS1_IA_S2_St14default_deleteIS8_EEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN11HipResource8copyDataIfEEvRSt10unique_ptrIT_PFvPS2_EERKS1_IA_S2_St14default_deleteIS8_EEl,"axG",@progbits,_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIT_PFvPS2_EERKS1_IA_S2_St14default_deleteIS8_EEl,comdat
	.weak	_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIT_PFvPS2_EERKS1_IA_S2_St14default_deleteIS8_EEl # -- Begin function _ZN11HipResource8copyDataIfEEvRSt10unique_ptrIT_PFvPS2_EERKS1_IA_S2_St14default_deleteIS8_EEl
	.p2align	4, 0x90
	.type	_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIT_PFvPS2_EERKS1_IA_S2_St14default_deleteIS8_EEl,@function
_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIT_PFvPS2_EERKS1_IA_S2_St14default_deleteIS8_EEl: # @_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIT_PFvPS2_EERKS1_IA_S2_St14default_deleteIS8_EEl
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %rbx
	movq	%rsi, %r15
	movq	%rdi, %r12
	movq	8(%rdi), %rdi
	movq	(%rsi), %rsi
	shlq	$2, %rbx
	movq	%rbx, %rdx
	movl	$1, %ecx
	callq	hipMemcpy
	testl	%eax, %eax
	jne	.LBB126_2
# %bb.1:                                # %if.end
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB126_2:                              # %if.then
	.cfi_def_cfa_offset 48
	movq	stderr(%rip), %r14
	movq	8(%r12), %rdi
	movq	(%r15), %rsi
	movq	%rbx, %rdx
	movl	$1, %ecx
	callq	hipMemcpy
	movl	%eax, %edi
	callq	hipGetErrorString
	movq	%rax, %r13
	movq	8(%r12), %rdi
	movq	(%r15), %rsi
	movq	%rbx, %rdx
	movl	$1, %ecx
	callq	hipMemcpy
	movl	$.L.str.54, %esi
	movl	$.L.str.55, %r8d
	movq	%r14, %rdi
	movq	%r13, %rdx
	movl	%eax, %ecx
	movl	$72, %r9d
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.Lfunc_end126:
	.size	_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIT_PFvPS2_EERKS1_IA_S2_St14default_deleteIS8_EEl, .Lfunc_end126-_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIT_PFvPS2_EERKS1_IA_S2_St14default_deleteIS8_EEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE_clEv,"axG",@progbits,_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE_clEv,comdat
	.weak	_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE_clEv # -- Begin function _ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE_clEv
	.p2align	4, 0x90
	.type	_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE_clEv,@function
_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE_clEv: # @_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE_clEv
.Lfunc_begin32:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception32
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$232, %rsp
	.cfi_def_cfa_offset 288
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	(%rdi), %rbx
	movb	_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance(%rip), %al
	testb	%al, %al
	je	.LBB127_1
.LBB127_4:                              # %_ZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEv.exit
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*72(%rax)
	movq	%rax, 120(%rsp)                 # 8-byte Spill
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*88(%rax)
	movq	%rax, %r15
	movl	%edx, %r12d
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*96(%rax)
	movq	%rax, %r14
	movl	%edx, %r13d
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*80(%rax)
	movl	16(%rbx), %r8d
	movl	20(%rbx), %r9d
	movl	24(%rbx), %esi
	movq	_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance(%rip), %rdi
	movq	8(%rdi), %rbp
	movq	24(%rdi), %rcx
	movq	40(%rdi), %rdx
	movq	56(%rdi), %rdi
	movdqu	28(%rbx), %xmm0
	pshufd	$27, %xmm0, %xmm0               # xmm0 = xmm0[3,2,1,0]
	movq	44(%rbx), %rbx
	rolq	$32, %rbx
	movq	%rbx, 48(%rsp)
	leaq	64(%rsp), %rbx
	leaq	68(%rsp), %r11
	movdqu	%xmm0, 56(%rsp)
	leaq	72(%rsp), %r10
	movq	%rdi, 72(%rsp)
	leaq	80(%rsp), %rdi
	movq	%rdx, 80(%rsp)
	leaq	88(%rsp), %rdx
	movq	%rcx, 88(%rsp)
	leaq	96(%rsp), %rcx
	movq	%rbp, 96(%rsp)
	leaq	104(%rsp), %rbp
	movl	%esi, 104(%rsp)
	leaq	108(%rsp), %rsi
	movl	%r9d, 108(%rsp)
	leaq	112(%rsp), %r9
	movl	%r8d, 112(%rsp)
	movq	%r9, 128(%rsp)
	movq	%rsi, 136(%rsp)
	movq	%rbp, 144(%rsp)
	movq	%rcx, 152(%rsp)
	movq	%rdx, 160(%rsp)
	movq	%rdi, 168(%rsp)
	movq	%r10, 176(%rsp)
	movq	%r11, 184(%rsp)
	movq	%rbx, 192(%rsp)
	leaq	60(%rsp), %rcx
	movq	%rcx, 200(%rsp)
	leaq	56(%rsp), %rcx
	movq	%rcx, 208(%rsp)
	leaq	52(%rsp), %rcx
	movq	%rcx, 216(%rsp)
	leaq	48(%rsp), %rcx
	movq	%rcx, 224(%rsp)
	movl	%eax, %eax
	pxor	%xmm0, %xmm0
	movdqu	%xmm0, 8(%rsp)
	movq	%rax, (%rsp)
	movl	$0, 32(%rsp)
	movq	$0, 24(%rsp)
	leaq	128(%rsp), %r9
	movq	120(%rsp), %rdi                 # 8-byte Reload
	movq	%r15, %rsi
	movl	%r12d, %edx
	movq	%r14, %rcx
	movl	%r13d, %r8d
	callq	hipExtLaunchKernel
	addq	$232, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB127_1:                              # %init.check.i
	.cfi_def_cfa_offset 288
	movl	$_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %edi
	callq	__cxa_guard_acquire
	testl	%eax, %eax
	je	.LBB127_4
# %bb.2:                                # %init.i
.Ltmp635:
	movl	$144, %edi
	callq	_Znwm
.Ltmp636:
# %bb.3:                                # %invoke.cont.i
	movq	$_ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E_8__invokeES7_, (%rax)
	movq	$0, 8(%rax)
	movq	$_ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E_8__invokeES7_, 16(%rax)
	movq	$0, 24(%rax)
	movq	$_ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE_8__invokeES7_, 32(%rax)
	movq	$0, 40(%rax)
	movq	$_ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE_8__invokeES7_, 48(%rax)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 56(%rax)
	movups	%xmm0, 72(%rax)
	movups	%xmm0, 88(%rax)
	movups	%xmm0, 104(%rax)
	movups	%xmm0, 120(%rax)
	movq	$0, 136(%rax)
	movq	%rax, _ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance(%rip)
	movl	$_ZNSt10unique_ptrI12GemmResourceIDF16_fESt14default_deleteIS1_EED2Ev, %edi
	movl	$_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %esi
	movl	$__dso_handle, %edx
	callq	__cxa_atexit
	movl	$_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %edi
	callq	__cxa_guard_release
	jmp	.LBB127_4
.LBB127_5:                              # %lpad.i
.Ltmp637:
	movq	%rax, %rbx
	movl	$_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %edi
	callq	__cxa_guard_abort
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end127:
	.size	_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE_clEv, .Lfunc_end127-_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE_clEv
	.cfi_endproc
	.section	.gcc_except_table._ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE_clEv,"aG",@progbits,_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE_clEv,comdat
	.p2align	2
GCC_except_table127:
.Lexception32:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end32-.Lcst_begin32
.Lcst_begin32:
	.uleb128 .Lfunc_begin32-.Lfunc_begin32  # >> Call Site 1 <<
	.uleb128 .Ltmp635-.Lfunc_begin32        #   Call between .Lfunc_begin32 and .Ltmp635
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp635-.Lfunc_begin32        # >> Call Site 2 <<
	.uleb128 .Ltmp636-.Ltmp635              #   Call between .Ltmp635 and .Ltmp636
	.uleb128 .Ltmp637-.Lfunc_begin32        #     jumps to .Ltmp637
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp636-.Lfunc_begin32        # >> Call Site 3 <<
	.uleb128 .Lfunc_end127-.Ltmp636         #   Call between .Ltmp636 and .Lfunc_end127
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end32:
	.p2align	2
                                        # -- End function
	.section	.text._ZN11HipResource8copyDataIfEEvRSt10unique_ptrIA_T_St14default_deleteIS3_EERKS1_IS2_PFvPS2_EEl,"axG",@progbits,_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIA_T_St14default_deleteIS3_EERKS1_IS2_PFvPS2_EEl,comdat
	.weak	_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIA_T_St14default_deleteIS3_EERKS1_IS2_PFvPS2_EEl # -- Begin function _ZN11HipResource8copyDataIfEEvRSt10unique_ptrIA_T_St14default_deleteIS3_EERKS1_IS2_PFvPS2_EEl
	.p2align	4, 0x90
	.type	_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIA_T_St14default_deleteIS3_EERKS1_IS2_PFvPS2_EEl,@function
_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIA_T_St14default_deleteIS3_EERKS1_IS2_PFvPS2_EEl: # @_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIA_T_St14default_deleteIS3_EERKS1_IS2_PFvPS2_EEl
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %rbx
	movq	%rsi, %r15
	movq	%rdi, %r12
	movq	(%rdi), %rdi
	movq	8(%rsi), %rsi
	shlq	$2, %rbx
	movq	%rbx, %rdx
	movl	$2, %ecx
	callq	hipMemcpy
	testl	%eax, %eax
	jne	.LBB128_2
# %bb.1:                                # %if.end
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB128_2:                              # %if.then
	.cfi_def_cfa_offset 48
	movq	stderr(%rip), %r14
	movq	(%r12), %rdi
	movq	8(%r15), %rsi
	movq	%rbx, %rdx
	movl	$2, %ecx
	callq	hipMemcpy
	movl	%eax, %edi
	callq	hipGetErrorString
	movq	%rax, %r13
	movq	(%r12), %rdi
	movq	8(%r15), %rsi
	movq	%rbx, %rdx
	movl	$2, %ecx
	callq	hipMemcpy
	movl	$.L.str.54, %esi
	movl	$.L.str.55, %r8d
	movq	%r14, %rdi
	movq	%r13, %rdx
	movl	%eax, %ecx
	movl	$65, %r9d
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.Lfunc_end128:
	.size	_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIA_T_St14default_deleteIS3_EERKS1_IS2_PFvPS2_EEl, .Lfunc_end128-_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIA_T_St14default_deleteIS3_EERKS1_IS2_PFvPS2_EEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN11HipResource8copyDataIfEEvRSt10unique_ptrIA_T_St14default_deleteIS3_EERKS6_l,"axG",@progbits,_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIA_T_St14default_deleteIS3_EERKS6_l,comdat
	.weak	_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIA_T_St14default_deleteIS3_EERKS6_l # -- Begin function _ZN11HipResource8copyDataIfEEvRSt10unique_ptrIA_T_St14default_deleteIS3_EERKS6_l
	.p2align	4, 0x90
	.type	_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIA_T_St14default_deleteIS3_EERKS6_l,@function
_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIA_T_St14default_deleteIS3_EERKS6_l: # @_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIA_T_St14default_deleteIS3_EERKS6_l
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %rbx
	movq	%rsi, %r14
	movq	%rdi, %r12
	movq	(%rdi), %rdi
	movq	(%rsi), %rsi
	shlq	$2, %rbx
	movq	%rbx, %rdx
	xorl	%ecx, %ecx
	callq	hipMemcpy
	testl	%eax, %eax
	jne	.LBB129_2
# %bb.1:                                # %if.end
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB129_2:                              # %if.then
	.cfi_def_cfa_offset 48
	movq	stderr(%rip), %r15
	movq	(%r12), %rdi
	movq	(%r14), %rsi
	movq	%rbx, %rdx
	xorl	%ecx, %ecx
	callq	hipMemcpy
	movl	%eax, %edi
	callq	hipGetErrorString
	movq	%rax, %r13
	movq	(%r12), %rdi
	movq	(%r14), %rsi
	movq	%rbx, %rdx
	xorl	%ecx, %ecx
	callq	hipMemcpy
	movl	$.L.str.54, %esi
	movl	$.L.str.55, %r8d
	movq	%r15, %rdi
	movq	%r13, %rdx
	movl	%eax, %ecx
	movl	$79, %r9d
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.Lfunc_end129:
	.size	_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIA_T_St14default_deleteIS3_EERKS6_l, .Lfunc_end129-_ZN11HipResource8copyDataIfEEvRSt10unique_ptrIA_T_St14default_deleteIS3_EERKS6_l
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14_Function_baseD2Ev,"axG",@progbits,_ZNSt14_Function_baseD2Ev,comdat
	.weak	_ZNSt14_Function_baseD2Ev       # -- Begin function _ZNSt14_Function_baseD2Ev
	.p2align	4, 0x90
	.type	_ZNSt14_Function_baseD2Ev,@function
_ZNSt14_Function_baseD2Ev:              # @_ZNSt14_Function_baseD2Ev
.Lfunc_begin33:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception33
# %bb.0:                                # %entry
	pushq	%rax
	.cfi_def_cfa_offset 16
	movq	16(%rdi), %rax
	testq	%rax, %rax
	je	.LBB130_2
# %bb.1:                                # %if.then
.Ltmp638:
	movq	%rdi, %rsi
	movl	$3, %edx
	callq	*%rax
.Ltmp639:
.LBB130_2:                              # %if.end
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.LBB130_3:                              # %terminate.lpad
	.cfi_def_cfa_offset 16
.Ltmp640:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end130:
	.size	_ZNSt14_Function_baseD2Ev, .Lfunc_end130-_ZNSt14_Function_baseD2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt14_Function_baseD2Ev,"aG",@progbits,_ZNSt14_Function_baseD2Ev,comdat
	.p2align	2
GCC_except_table130:
.Lexception33:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase14-.Lttbaseref14
.Lttbaseref14:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end33-.Lcst_begin33
.Lcst_begin33:
	.uleb128 .Ltmp638-.Lfunc_begin33        # >> Call Site 1 <<
	.uleb128 .Ltmp639-.Ltmp638              #   Call between .Ltmp638 and .Ltmp639
	.uleb128 .Ltmp640-.Lfunc_begin33        #     jumps to .Ltmp640
	.byte	1                               #   On action: 1
.Lcst_end33:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase14:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt11make_uniqueI9HipDeviceJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_,"axG",@progbits,_ZSt11make_uniqueI9HipDeviceJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_,comdat
	.weak	_ZSt11make_uniqueI9HipDeviceJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_ # -- Begin function _ZSt11make_uniqueI9HipDeviceJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_
	.p2align	4, 0x90
	.type	_ZSt11make_uniqueI9HipDeviceJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_,@function
_ZSt11make_uniqueI9HipDeviceJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_: # @_ZSt11make_uniqueI9HipDeviceJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_
.Lfunc_begin34:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception34
# %bb.0:                                # %entry
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
	movl	$808, %edi                      # imm = 0x328
	callq	_Znwm
	movq	%rax, %rbx
.Ltmp641:
	movq	%rax, %rdi
	callq	_ZN9HipDeviceC1Ev
.Ltmp642:
# %bb.1:                                # %invoke.cont
	movq	%rbx, (%r14)
	movq	%r14, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB131_2:                              # %lpad
	.cfi_def_cfa_offset 32
.Ltmp643:
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	_ZdlPv
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end131:
	.size	_ZSt11make_uniqueI9HipDeviceJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_, .Lfunc_end131-_ZSt11make_uniqueI9HipDeviceJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_
	.cfi_endproc
	.section	.gcc_except_table._ZSt11make_uniqueI9HipDeviceJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_,"aG",@progbits,_ZSt11make_uniqueI9HipDeviceJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_,comdat
	.p2align	2
GCC_except_table131:
.Lexception34:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end34-.Lcst_begin34
.Lcst_begin34:
	.uleb128 .Lfunc_begin34-.Lfunc_begin34  # >> Call Site 1 <<
	.uleb128 .Ltmp641-.Lfunc_begin34        #   Call between .Lfunc_begin34 and .Ltmp641
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp641-.Lfunc_begin34        # >> Call Site 2 <<
	.uleb128 .Ltmp642-.Ltmp641              #   Call between .Ltmp641 and .Ltmp642
	.uleb128 .Ltmp643-.Lfunc_begin34        #     jumps to .Ltmp643
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp642-.Lfunc_begin34        # >> Call Site 3 <<
	.uleb128 .Lfunc_end131-.Ltmp642         #   Call between .Ltmp642 and .Lfunc_end131
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end34:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt10unique_ptrI9HipDeviceSt14default_deleteIS0_EED2Ev,"axG",@progbits,_ZNSt10unique_ptrI9HipDeviceSt14default_deleteIS0_EED2Ev,comdat
	.weak	_ZNSt10unique_ptrI9HipDeviceSt14default_deleteIS0_EED2Ev # -- Begin function _ZNSt10unique_ptrI9HipDeviceSt14default_deleteIS0_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt10unique_ptrI9HipDeviceSt14default_deleteIS0_EED2Ev,@function
_ZNSt10unique_ptrI9HipDeviceSt14default_deleteIS0_EED2Ev: # @_ZNSt10unique_ptrI9HipDeviceSt14default_deleteIS0_EED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB132_2
# %bb.1:                                # %_ZNKSt14default_deleteI9HipDeviceEclEPS0_.exit
	callq	_ZdlPv
.LBB132_2:                              # %if.end
	movq	$0, (%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end132:
	.size	_ZNSt10unique_ptrI9HipDeviceSt14default_deleteIS0_EED2Ev, .Lfunc_end132-_ZNSt10unique_ptrI9HipDeviceSt14default_deleteIS0_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENUlPP15_rocblas_handleE_8__invokeES5_,"axG",@progbits,_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENUlPP15_rocblas_handleE_8__invokeES5_,comdat
	.weak	_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENUlPP15_rocblas_handleE_8__invokeES5_ # -- Begin function _ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENUlPP15_rocblas_handleE_8__invokeES5_
	.p2align	4, 0x90
	.type	_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENUlPP15_rocblas_handleE_8__invokeES5_,@function
_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENUlPP15_rocblas_handleE_8__invokeES5_: # @_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENUlPP15_rocblas_handleE_8__invokeES5_
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	(%rdi), %rdi
	callq	rocblas_destroy_handle
	testl	%eax, %eax
	jne	.LBB133_2
# %bb.1:                                # %_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlPP15_rocblas_handleE_clES5_.exit
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB133_2:                              # %if.then.i
	.cfi_def_cfa_offset 32
	movq	stderr(%rip), %r14
	movq	(%rbx), %rdi
	callq	rocblas_destroy_handle
	movl	%eax, %edi
	callq	rocblas_status_to_string
	movq	%rax, %r15
	movq	(%rbx), %rdi
	callq	rocblas_destroy_handle
	movl	$.L.str.63, %esi
	movl	$.L.str.62, %r8d
	movq	%r14, %rdi
	movq	%r15, %rdx
	movl	%eax, %ecx
	movl	$585, %r9d                      # imm = 0x249
	xorl	%eax, %eax
	callq	fprintf
	movl	$1, %edi
	callq	exit
.Lfunc_end133:
	.size	_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENUlPP15_rocblas_handleE_8__invokeES5_, .Lfunc_end133-_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENUlPP15_rocblas_handleE_8__invokeES5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFvvEZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE0_E9_M_invokeERKSt9_Any_data,"axG",@progbits,_ZNSt17_Function_handlerIFvvEZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE0_E9_M_invokeERKSt9_Any_data,comdat
	.weak	_ZNSt17_Function_handlerIFvvEZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE0_E9_M_invokeERKSt9_Any_data # -- Begin function _ZNSt17_Function_handlerIFvvEZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE0_E9_M_invokeERKSt9_Any_data
	.p2align	4, 0x90
	.type	_ZNSt17_Function_handlerIFvvEZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE0_E9_M_invokeERKSt9_Any_data,@function
_ZNSt17_Function_handlerIFvvEZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE0_E9_M_invokeERKSt9_Any_data: # @_ZNSt17_Function_handlerIFvvEZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE0_E9_M_invokeERKSt9_Any_data
	.cfi_startproc
# %bb.0:                                # %entry
	jmp	_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE0_clEv # TAILCALL
.Lfunc_end134:
	.size	_ZNSt17_Function_handlerIFvvEZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE0_E9_M_invokeERKSt9_Any_data, .Lfunc_end134-_ZNSt17_Function_handlerIFvvEZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE0_E9_M_invokeERKSt9_Any_data
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14_Function_base13_Base_managerIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE0_E10_M_managerERSt9_Any_dataRKS7_St18_Manager_operation,"axG",@progbits,_ZNSt14_Function_base13_Base_managerIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE0_E10_M_managerERSt9_Any_dataRKS7_St18_Manager_operation,comdat
	.weak	_ZNSt14_Function_base13_Base_managerIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE0_E10_M_managerERSt9_Any_dataRKS7_St18_Manager_operation # -- Begin function _ZNSt14_Function_base13_Base_managerIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE0_E10_M_managerERSt9_Any_dataRKS7_St18_Manager_operation
	.p2align	4, 0x90
	.type	_ZNSt14_Function_base13_Base_managerIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE0_E10_M_managerERSt9_Any_dataRKS7_St18_Manager_operation,@function
_ZNSt14_Function_base13_Base_managerIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE0_E10_M_managerERSt9_Any_dataRKS7_St18_Manager_operation: # @_ZNSt14_Function_base13_Base_managerIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE0_E10_M_managerERSt9_Any_dataRKS7_St18_Manager_operation
	.cfi_startproc
# %bb.0:                                # %entry
	cmpl	$2, %edx
	je	.LBB135_5
# %bb.1:                                # %entry
	cmpl	$1, %edx
	je	.LBB135_4
# %bb.2:                                # %entry
	testl	%edx, %edx
	jne	.LBB135_6
# %bb.3:                                # %sw.bb
	movq	$_ZTIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE0_, (%rdi)
	xorl	%eax, %eax
	retq
.LBB135_5:                              # %sw.bb4
	movups	(%rsi), %xmm0
	movups	%xmm0, (%rdi)
.LBB135_6:                              # %sw.epilog
	xorl	%eax, %eax
	retq
.LBB135_4:                              # %sw.bb1
	movq	%rsi, (%rdi)
	xorl	%eax, %eax
	retq
.Lfunc_end135:
	.size	_ZNSt14_Function_base13_Base_managerIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE0_E10_M_managerERSt9_Any_dataRKS7_St18_Manager_operation, .Lfunc_end135-_ZNSt14_Function_base13_Base_managerIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE0_E10_M_managerERSt9_Any_dataRKS7_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE0_clEv,"axG",@progbits,_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE0_clEv,comdat
	.weak	_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE0_clEv # -- Begin function _ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE0_clEv
	.p2align	4, 0x90
	.type	_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE0_clEv,@function
_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE0_clEv: # @_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE0_clEv
.Lfunc_begin35:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception35
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r12
	movq	(%rdi), %rbx
	movb	_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance(%rip), %al
	testb	%al, %al
	je	.LBB136_1
.LBB136_4:                              # %_ZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEv.exit
	movq	8(%r12), %rax
	movq	(%rax), %rdi
	movl	16(%rbx), %ecx
	movl	20(%rbx), %r8d
	movl	24(%rbx), %r9d
	leaq	44(%rbx), %r13
	movq	_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance(%rip), %rax
	movl	28(%rbx), %r10d
	movl	32(%rbx), %ebp
	leaq	48(%rbx), %r14
	.cfi_escape 0x2e, 0x90, 0x01
	movl	$111, %esi
	movl	$112, %edx
	pushq	$0
	.cfi_adjust_cfa_offset 8
	pushq	$0
	.cfi_adjust_cfa_offset 8
	pushq	$0
	.cfi_adjust_cfa_offset 8
	pushq	$151
	.cfi_adjust_cfa_offset 8
	pushq	%rcx
	.cfi_adjust_cfa_offset 8
	pushq	$151
	.cfi_adjust_cfa_offset 8
	pushq	56(%rax)
	.cfi_adjust_cfa_offset 8
	pushq	%rcx
	.cfi_adjust_cfa_offset 8
	pushq	$151
	.cfi_adjust_cfa_offset 8
	pushq	40(%rax)
	.cfi_adjust_cfa_offset 8
	pushq	%r14
	.cfi_adjust_cfa_offset 8
	pushq	%rbp
	.cfi_adjust_cfa_offset 8
	pushq	$150
	.cfi_adjust_cfa_offset 8
	pushq	24(%rax)
	.cfi_adjust_cfa_offset 8
	pushq	%r10
	.cfi_adjust_cfa_offset 8
	pushq	$150
	.cfi_adjust_cfa_offset 8
	pushq	8(%rax)
	.cfi_adjust_cfa_offset 8
	pushq	%r13
	.cfi_adjust_cfa_offset 8
	callq	rocblas_gemm_ex
	addq	$144, %rsp
	.cfi_adjust_cfa_offset -144
	testl	%eax, %eax
	jne	.LBB136_7
# %bb.5:                                # %if.end
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB136_1:                              # %init.check.i
	.cfi_def_cfa_offset 64
	.cfi_escape 0x2e, 0x00
	movl	$_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %edi
	callq	__cxa_guard_acquire
	testl	%eax, %eax
	je	.LBB136_4
# %bb.2:                                # %init.i
.Ltmp644:
	.cfi_escape 0x2e, 0x00
	movl	$_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %edi
	callq	_ZSt11make_uniqueI12GemmResourceIDF16_fEJEENSt9_MakeUniqIT_E15__single_objectEDpOT0_
.Ltmp645:
# %bb.3:                                # %invoke.cont.i
	.cfi_escape 0x2e, 0x00
	movl	$_ZNSt10unique_ptrI12GemmResourceIDF16_fESt14default_deleteIS1_EED2Ev, %edi
	movl	$_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %esi
	movl	$__dso_handle, %edx
	callq	__cxa_atexit
	.cfi_escape 0x2e, 0x00
	movl	$_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %edi
	callq	__cxa_guard_release
	jmp	.LBB136_4
.LBB136_7:                              # %if.then
	movq	stderr(%rip), %rax
	movq	%rax, (%rsp)                    # 8-byte Spill
	movq	8(%r12), %rax
	movq	(%rax), %rdi
	movl	16(%rbx), %ecx
	movl	20(%rbx), %r8d
	movl	24(%rbx), %r9d
	movq	_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance(%rip), %rax
	movl	28(%rbx), %r10d
	movl	32(%rbx), %ebp
	.cfi_escape 0x2e, 0x90, 0x01
	movl	$111, %esi
	movl	$112, %edx
	pushq	$0
	.cfi_adjust_cfa_offset 8
	pushq	$0
	.cfi_adjust_cfa_offset 8
	pushq	$0
	.cfi_adjust_cfa_offset 8
	pushq	$151
	.cfi_adjust_cfa_offset 8
	pushq	%rcx
	.cfi_adjust_cfa_offset 8
	pushq	$151
	.cfi_adjust_cfa_offset 8
	pushq	56(%rax)
	.cfi_adjust_cfa_offset 8
	pushq	%rcx
	.cfi_adjust_cfa_offset 8
	pushq	$151
	.cfi_adjust_cfa_offset 8
	pushq	40(%rax)
	.cfi_adjust_cfa_offset 8
	pushq	%r14
	.cfi_adjust_cfa_offset 8
	pushq	%rbp
	.cfi_adjust_cfa_offset 8
	pushq	$150
	.cfi_adjust_cfa_offset 8
	pushq	24(%rax)
	.cfi_adjust_cfa_offset 8
	pushq	%r10
	.cfi_adjust_cfa_offset 8
	pushq	$150
	.cfi_adjust_cfa_offset 8
	pushq	8(%rax)
	.cfi_adjust_cfa_offset 8
	pushq	%r13
	.cfi_adjust_cfa_offset 8
	callq	rocblas_gemm_ex
	addq	$144, %rsp
	.cfi_adjust_cfa_offset -144
	.cfi_escape 0x2e, 0x00
	movl	%eax, %edi
	callq	rocblas_status_to_string
	movq	%rax, %r15
	movq	8(%r12), %rax
	movq	(%rax), %rdi
	movl	16(%rbx), %ecx
	movl	20(%rbx), %r8d
	movl	24(%rbx), %r9d
	movq	_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance(%rip), %rax
	movl	28(%rbx), %ebp
	movl	32(%rbx), %ebx
	.cfi_escape 0x2e, 0x90, 0x01
	movl	$111, %esi
	movl	$112, %edx
	pushq	$0
	.cfi_adjust_cfa_offset 8
	pushq	$0
	.cfi_adjust_cfa_offset 8
	pushq	$0
	.cfi_adjust_cfa_offset 8
	pushq	$151
	.cfi_adjust_cfa_offset 8
	pushq	%rcx
	.cfi_adjust_cfa_offset 8
	pushq	$151
	.cfi_adjust_cfa_offset 8
	pushq	56(%rax)
	.cfi_adjust_cfa_offset 8
	pushq	%rcx
	.cfi_adjust_cfa_offset 8
	pushq	$151
	.cfi_adjust_cfa_offset 8
	pushq	40(%rax)
	.cfi_adjust_cfa_offset 8
	pushq	%r14
	.cfi_adjust_cfa_offset 8
	pushq	%rbx
	.cfi_adjust_cfa_offset 8
	pushq	$150
	.cfi_adjust_cfa_offset 8
	pushq	24(%rax)
	.cfi_adjust_cfa_offset 8
	pushq	%rbp
	.cfi_adjust_cfa_offset 8
	pushq	$150
	.cfi_adjust_cfa_offset 8
	pushq	8(%rax)
	.cfi_adjust_cfa_offset 8
	pushq	%r13
	.cfi_adjust_cfa_offset 8
	callq	rocblas_gemm_ex
	addq	$144, %rsp
	.cfi_adjust_cfa_offset -144
	.cfi_escape 0x2e, 0x00
	movl	$.L.str.63, %esi
	movl	$.L.str.62, %r8d
	movq	(%rsp), %rdi                    # 8-byte Reload
	movq	%r15, %rdx
	movl	%eax, %ecx
	movl	$613, %r9d                      # imm = 0x265
	xorl	%eax, %eax
	callq	fprintf
	.cfi_escape 0x2e, 0x00
	movl	$1, %edi
	callq	exit
.LBB136_6:                              # %lpad.i
.Ltmp646:
	movq	%rax, %rbx
	.cfi_escape 0x2e, 0x00
	movl	$_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %edi
	callq	__cxa_guard_abort
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end136:
	.size	_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE0_clEv, .Lfunc_end136-_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE0_clEv
	.cfi_endproc
	.section	.gcc_except_table._ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE0_clEv,"aG",@progbits,_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE0_clEv,comdat
	.p2align	2
GCC_except_table136:
.Lexception35:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end35-.Lcst_begin35
.Lcst_begin35:
	.uleb128 .Lfunc_begin35-.Lfunc_begin35  # >> Call Site 1 <<
	.uleb128 .Ltmp644-.Lfunc_begin35        #   Call between .Lfunc_begin35 and .Ltmp644
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp644-.Lfunc_begin35        # >> Call Site 2 <<
	.uleb128 .Ltmp645-.Ltmp644              #   Call between .Ltmp644 and .Ltmp645
	.uleb128 .Ltmp646-.Lfunc_begin35        #     jumps to .Ltmp646
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp645-.Lfunc_begin35        # >> Call Site 3 <<
	.uleb128 .Lfunc_end136-.Ltmp645         #   Call between .Ltmp645 and .Lfunc_end136
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end35:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFvvEZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE1_E9_M_invokeERKSt9_Any_data,"axG",@progbits,_ZNSt17_Function_handlerIFvvEZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE1_E9_M_invokeERKSt9_Any_data,comdat
	.weak	_ZNSt17_Function_handlerIFvvEZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE1_E9_M_invokeERKSt9_Any_data # -- Begin function _ZNSt17_Function_handlerIFvvEZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE1_E9_M_invokeERKSt9_Any_data
	.p2align	4, 0x90
	.type	_ZNSt17_Function_handlerIFvvEZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE1_E9_M_invokeERKSt9_Any_data,@function
_ZNSt17_Function_handlerIFvvEZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE1_E9_M_invokeERKSt9_Any_data: # @_ZNSt17_Function_handlerIFvvEZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE1_E9_M_invokeERKSt9_Any_data
	.cfi_startproc
# %bb.0:                                # %entry
	jmp	_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE1_clEv # TAILCALL
.Lfunc_end137:
	.size	_ZNSt17_Function_handlerIFvvEZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE1_E9_M_invokeERKSt9_Any_data, .Lfunc_end137-_ZNSt17_Function_handlerIFvvEZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE1_E9_M_invokeERKSt9_Any_data
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14_Function_base13_Base_managerIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE1_E10_M_managerERSt9_Any_dataRKS7_St18_Manager_operation,"axG",@progbits,_ZNSt14_Function_base13_Base_managerIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE1_E10_M_managerERSt9_Any_dataRKS7_St18_Manager_operation,comdat
	.weak	_ZNSt14_Function_base13_Base_managerIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE1_E10_M_managerERSt9_Any_dataRKS7_St18_Manager_operation # -- Begin function _ZNSt14_Function_base13_Base_managerIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE1_E10_M_managerERSt9_Any_dataRKS7_St18_Manager_operation
	.p2align	4, 0x90
	.type	_ZNSt14_Function_base13_Base_managerIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE1_E10_M_managerERSt9_Any_dataRKS7_St18_Manager_operation,@function
_ZNSt14_Function_base13_Base_managerIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE1_E10_M_managerERSt9_Any_dataRKS7_St18_Manager_operation: # @_ZNSt14_Function_base13_Base_managerIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE1_E10_M_managerERSt9_Any_dataRKS7_St18_Manager_operation
	.cfi_startproc
# %bb.0:                                # %entry
	cmpl	$2, %edx
	je	.LBB138_5
# %bb.1:                                # %entry
	cmpl	$1, %edx
	je	.LBB138_4
# %bb.2:                                # %entry
	testl	%edx, %edx
	jne	.LBB138_6
# %bb.3:                                # %sw.bb
	movq	$_ZTIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE1_, (%rdi)
	xorl	%eax, %eax
	retq
.LBB138_5:                              # %sw.bb4
	movq	(%rsi), %rax
	movq	%rax, (%rdi)
.LBB138_6:                              # %sw.epilog
	xorl	%eax, %eax
	retq
.LBB138_4:                              # %sw.bb1
	movq	%rsi, (%rdi)
	xorl	%eax, %eax
	retq
.Lfunc_end138:
	.size	_ZNSt14_Function_base13_Base_managerIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE1_E10_M_managerERSt9_Any_dataRKS7_St18_Manager_operation, .Lfunc_end138-_ZNSt14_Function_base13_Base_managerIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE1_E10_M_managerERSt9_Any_dataRKS7_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE1_clEv,"axG",@progbits,_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE1_clEv,comdat
	.weak	_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE1_clEv # -- Begin function _ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE1_clEv
	.p2align	4, 0x90
	.type	_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE1_clEv,@function
_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE1_clEv: # @_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE1_clEv
.Lfunc_begin36:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception36
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$104, %rsp
	.cfi_def_cfa_offset 160
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	(%rdi), %rbx
	movb	_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance(%rip), %al
	testb	%al, %al
	je	.LBB139_1
.LBB139_4:                              # %_ZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEv.exit
	movl	16(%rbx), %eax
	movl	20(%rbx), %ecx
	movl	24(%rbx), %r8d
	movq	_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance(%rip), %rsi
	movq	64(%rsi), %rdi
	movq	72(%rsi), %rbp
	movq	80(%rsi), %rdx
	movq	88(%rsi), %rsi
	movss	44(%rbx), %xmm0                 # xmm0 = mem[0],zero,zero,zero
	movss	48(%rbx), %xmm1                 # xmm1 = mem[0],zero,zero,zero
	movl	%eax, 36(%rsp)
	movl	%ecx, 32(%rsp)
	movl	%r8d, 28(%rsp)
	movq	%rdi, 96(%rsp)
	movq	%rbp, 88(%rsp)
	movq	%rdx, 80(%rsp)
	movq	%rsi, 72(%rsp)
	movss	%xmm0, 24(%rsp)
	movss	%xmm1, 20(%rsp)
	movl	%eax, 16(%rsp)
	movl	%ecx, 12(%rsp)
	movl	%eax, 8(%rsp)
	movl	%eax, 4(%rsp)
	movq	$_ZZ8gemm_CPUIDF16_ff9col_major9row_majorS0_S0_EvjjjPKT_S4_PKT0_PS5_T1_S9_ENUljjjE0_8__invokeEjjj, 64(%rsp)
	movq	$_ZZ8gemm_CPUIDF16_ff9col_major9row_majorS0_S0_EvjjjPKT_S4_PKT0_PS5_T1_S9_ENUljjjE_8__invokeEjjj, 56(%rsp)
	movq	$_ZZ8gemm_CPUIDF16_ff9col_major9row_majorS0_S0_EvjjjPKT_S4_PKT0_PS5_T1_S9_ENUljjjE0_8__invokeEjjj, 48(%rsp)
	movq	$_ZZ8gemm_CPUIDF16_ff9col_major9row_majorS0_S0_EvjjjPKT_S4_PKT0_PS5_T1_S9_ENUljjjE0_8__invokeEjjj, 40(%rsp)
	.cfi_escape 0x2e, 0x70
	leaq	8(%rsp), %r10
	leaq	48(%rsp), %r11
	leaq	80(%rsp), %r14
	leaq	20(%rsp), %r15
	leaq	24(%rsp), %r12
	leaq	4(%rsp), %r13
	leaq	40(%rsp), %rbp
	leaq	72(%rsp), %rbx
	movl	$.omp_outlined..64, %edx
	movl	$.L__unnamed_1, %edi
	leaq	36(%rsp), %rcx
	leaq	32(%rsp), %r8
	leaq	28(%rsp), %r9
	movl	$17, %esi
	movl	$0, %eax
	pushq	%r10
	.cfi_adjust_cfa_offset 8
	pushq	%r11
	.cfi_adjust_cfa_offset 8
	pushq	%r14
	.cfi_adjust_cfa_offset 8
	pushq	%r15
	.cfi_adjust_cfa_offset 8
	pushq	%r12
	.cfi_adjust_cfa_offset 8
	pushq	%r13
	.cfi_adjust_cfa_offset 8
	pushq	%rbp
	.cfi_adjust_cfa_offset 8
	pushq	%rbx
	.cfi_adjust_cfa_offset 8
	leaq	76(%rsp), %rbp
	pushq	%rbp
	.cfi_adjust_cfa_offset 8
	leaq	128(%rsp), %rbp
	pushq	%rbp
	.cfi_adjust_cfa_offset 8
	leaq	168(%rsp), %rbp
	pushq	%rbp
	.cfi_adjust_cfa_offset 8
	leaq	104(%rsp), %rbp
	pushq	%rbp
	.cfi_adjust_cfa_offset 8
	leaq	160(%rsp), %rbp
	pushq	%rbp
	.cfi_adjust_cfa_offset 8
	leaq	200(%rsp), %rbp
	pushq	%rbp
	.cfi_adjust_cfa_offset 8
	callq	__kmpc_fork_call@PLT
	addq	$216, %rsp
	.cfi_adjust_cfa_offset -216
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB139_1:                              # %init.check.i
	.cfi_def_cfa_offset 160
	.cfi_escape 0x2e, 0x00
	movl	$_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %edi
	callq	__cxa_guard_acquire
	testl	%eax, %eax
	je	.LBB139_4
# %bb.2:                                # %init.i
.Ltmp647:
	.cfi_escape 0x2e, 0x00
	movl	$144, %edi
	callq	_Znwm
.Ltmp648:
# %bb.3:                                # %invoke.cont.i
	movq	$_ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E_8__invokeES7_, (%rax)
	movq	$0, 8(%rax)
	movq	$_ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E_8__invokeES7_, 16(%rax)
	movq	$0, 24(%rax)
	movq	$_ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE_8__invokeES7_, 32(%rax)
	movq	$0, 40(%rax)
	movq	$_ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE_8__invokeES7_, 48(%rax)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 56(%rax)
	movups	%xmm0, 72(%rax)
	movups	%xmm0, 88(%rax)
	movups	%xmm0, 104(%rax)
	movups	%xmm0, 120(%rax)
	movq	$0, 136(%rax)
	movq	%rax, _ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance(%rip)
	.cfi_escape 0x2e, 0x00
	movl	$_ZNSt10unique_ptrI12GemmResourceIDF16_fESt14default_deleteIS1_EED2Ev, %edi
	movl	$_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %esi
	movl	$__dso_handle, %edx
	callq	__cxa_atexit
	.cfi_escape 0x2e, 0x00
	movl	$_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %edi
	callq	__cxa_guard_release
	jmp	.LBB139_4
.LBB139_5:                              # %lpad.i
.Ltmp649:
	movq	%rax, %rbx
	.cfi_escape 0x2e, 0x00
	movl	$_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, %edi
	callq	__cxa_guard_abort
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end139:
	.size	_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE1_clEv, .Lfunc_end139-_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE1_clEv
	.cfi_endproc
	.section	.gcc_except_table._ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE1_clEv,"aG",@progbits,_ZZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvENKUlvE1_clEv,comdat
	.p2align	2
GCC_except_table139:
.Lexception36:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end36-.Lcst_begin36
.Lcst_begin36:
	.uleb128 .Ltmp647-.Lfunc_begin36        # >> Call Site 1 <<
	.uleb128 .Ltmp648-.Ltmp647              #   Call between .Ltmp647 and .Ltmp648
	.uleb128 .Ltmp649-.Lfunc_begin36        #     jumps to .Ltmp649
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp648-.Lfunc_begin36        # >> Call Site 2 <<
	.uleb128 .Lfunc_end139-.Ltmp648         #   Call between .Ltmp648 and .Lfunc_end139
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end36:
	.p2align	2
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function .omp_outlined..64
	.type	.omp_outlined..64,@function
.omp_outlined..64:                      # @.omp_outlined..64
.Lfunc_begin37:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception37
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r9, 64(%rsp)                   # 8-byte Spill
	movq	%r8, 56(%rsp)                   # 8-byte Spill
	movq	%rcx, 48(%rsp)                  # 8-byte Spill
	movl	(%rdx), %ebx
	subl	$1, %ebx
	jb	.LBB140_11
# %bb.1:                                # %omp.precond.then
	movl	$0, 24(%rsp)
	movl	%ebx, 16(%rsp)
	movl	$1, 44(%rsp)
	movl	$0, 40(%rsp)
	movl	(%rdi), %esi
	.cfi_escape 0x2e, 0x20
	subq	$8, %rsp
	.cfi_adjust_cfa_offset 8
	leaq	52(%rsp), %rax
	leaq	48(%rsp), %rcx
	leaq	32(%rsp), %r8
	leaq	24(%rsp), %r9
	movl	$.L__unnamed_2, %edi
	movl	%esi, 36(%rsp)                  # 4-byte Spill
	movl	$34, %edx
	pushq	$1
	.cfi_adjust_cfa_offset 8
	pushq	$1
	.cfi_adjust_cfa_offset 8
	pushq	%rax
	.cfi_adjust_cfa_offset 8
	callq	__kmpc_for_static_init_4u
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	movl	16(%rsp), %eax
	cmpl	%ebx, %eax
	cmoval	%ebx, %eax
	movl	%eax, 16(%rsp)
	movl	24(%rsp), %r13d
	leal	1(%rax), %ecx
	cmpl	%ecx, %r13d
	jae	.LBB140_10
# %bb.2:                                # %for.cond.preheader.preheader
	movq	48(%rsp), %rcx                  # 8-byte Reload
	movl	(%rcx), %ecx
	jmp	.LBB140_3
	.p2align	4, 0x90
.LBB140_4:                              #   in Loop: Header=BB140_3 Depth=1
	xorl	%ecx, %ecx
	addl	$1, %r13d
	leal	1(%rax), %edx
	cmpl	%edx, %r13d
	jae	.LBB140_10
.LBB140_3:                              # %for.cond.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB140_6 Depth 2
                                        #       Child Loop BB140_13 Depth 3
	testl	%ecx, %ecx
	je	.LBB140_4
# %bb.5:                                # %for.cond8.preheader.preheader
                                        #   in Loop: Header=BB140_3 Depth=1
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB140_6:                              # %for.cond8.preheader
                                        #   Parent Loop BB140_3 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB140_13 Depth 3
	movq	56(%rsp), %rax                  # 8-byte Reload
	cmpl	$0, (%rax)
	je	.LBB140_7
# %bb.12:                               # %for.body11.preheader
                                        #   in Loop: Header=BB140_6 Depth=2
	xorps	%xmm0, %xmm0
	movss	%xmm0, 12(%rsp)                 # 4-byte Spill
	xorl	%r12d, %r12d
	.p2align	4, 0x90
.LBB140_13:                             # %for.body11
                                        #   Parent Loop BB140_3 Depth=1
                                        #     Parent Loop BB140_6 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movq	64(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %rbp
	movq	136(%rsp), %rax
	movl	(%rax), %edx
.Ltmp650:
	.cfi_escape 0x2e, 0x00
	movl	%r13d, %edi
	movl	%r12d, %esi
	movq	128(%rsp), %rax
	callq	*(%rax)
.Ltmp651:
# %bb.14:                               # %invoke.cont
                                        #   in Loop: Header=BB140_13 Depth=3
	movl	%eax, %eax
	movzwl	(%rbp,%rax,2), %ebp
	movq	144(%rsp), %rax
	movq	(%rax), %r14
	movq	160(%rsp), %rax
	movl	(%rax), %edx
.Ltmp652:
	.cfi_escape 0x2e, 0x00
	movl	%r12d, %edi
	movl	%ebx, %esi
	movq	152(%rsp), %rax
	callq	*(%rax)
.Ltmp653:
# %bb.15:                               # %invoke.cont12
                                        #   in Loop: Header=BB140_13 Depth=3
	movl	%eax, %r15d
	.cfi_escape 0x2e, 0x00
	movzwl	%bp, %edi
	callq	__gnu_h2f_ieee@PLT
	movss	%xmm0, 20(%rsp)                 # 4-byte Spill
	movl	%r15d, %eax
	movzwl	(%r14,%rax,2), %edi
	.cfi_escape 0x2e, 0x00
	callq	__gnu_h2f_ieee@PLT
	mulss	20(%rsp), %xmm0                 # 4-byte Folded Reload
	movss	12(%rsp), %xmm1                 # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	addss	%xmm0, %xmm1
	movss	%xmm1, 12(%rsp)                 # 4-byte Spill
	addl	$1, %r12d
	movq	56(%rsp), %rax                  # 8-byte Reload
	cmpl	(%rax), %r12d
	jb	.LBB140_13
	jmp	.LBB140_16
	.p2align	4, 0x90
.LBB140_7:                              #   in Loop: Header=BB140_6 Depth=2
	xorps	%xmm0, %xmm0
	movss	%xmm0, 12(%rsp)                 # 4-byte Spill
.LBB140_16:                             # %for.cond.cleanup10
                                        #   in Loop: Header=BB140_6 Depth=2
	movq	192(%rsp), %rax
	movss	(%rax), %xmm0                   # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, 36(%rsp)                 # 4-byte Spill
	movq	200(%rsp), %rax
	movss	(%rax), %xmm0                   # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, 20(%rsp)                 # 4-byte Spill
	movq	208(%rsp), %rax
	movq	(%rax), %r14
	movq	224(%rsp), %rax
	movl	(%rax), %edx
.Ltmp655:
	.cfi_escape 0x2e, 0x00
	movl	%r13d, %edi
	movl	%ebx, %esi
	movq	216(%rsp), %rax
	callq	*(%rax)
.Ltmp656:
# %bb.17:                               # %invoke.cont21
                                        #   in Loop: Header=BB140_6 Depth=2
	movl	%eax, %eax
	movss	(%r14,%rax,4), %xmm0            # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, 32(%rsp)                 # 4-byte Spill
	movq	168(%rsp), %rax
	movq	(%rax), %r14
	movq	184(%rsp), %rax
	movl	(%rax), %edx
.Ltmp657:
	.cfi_escape 0x2e, 0x00
	movl	%r13d, %edi
	movl	%ebx, %esi
	movq	176(%rsp), %rax
	callq	*(%rax)
.Ltmp658:
# %bb.18:                               # %invoke.cont27
                                        #   in Loop: Header=BB140_6 Depth=2
	movss	12(%rsp), %xmm0                 # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	mulss	36(%rsp), %xmm0                 # 4-byte Folded Reload
	movss	20(%rsp), %xmm1                 # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	mulss	32(%rsp), %xmm1                 # 4-byte Folded Reload
	addss	%xmm0, %xmm1
	movl	%eax, %eax
	movss	%xmm1, (%r14,%rax,4)
	addl	$1, %ebx
	movq	48(%rsp), %rax                  # 8-byte Reload
	movl	(%rax), %ecx
	cmpl	%ecx, %ebx
	jb	.LBB140_6
# %bb.8:                                # %for.cond.cleanup.loopexit
                                        #   in Loop: Header=BB140_3 Depth=1
	movl	16(%rsp), %eax
	addl	$1, %r13d
	leal	1(%rax), %edx
	cmpl	%edx, %r13d
	jb	.LBB140_3
.LBB140_10:                             # %omp.loop.exit
	.cfi_escape 0x2e, 0x00
	movl	$.L__unnamed_2, %edi
	movl	28(%rsp), %esi                  # 4-byte Reload
	callq	__kmpc_for_static_fini@PLT
.LBB140_11:                             # %omp.precond.end
	addq	$72, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB140_19:                             # %lpad20
	.cfi_def_cfa_offset 128
.Ltmp659:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB140_21:                             # %lpad
.Ltmp654:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end140:
	.size	.omp_outlined..64, .Lfunc_end140-.omp_outlined..64
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table140:
.Lexception37:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase15-.Lttbaseref15
.Lttbaseref15:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end37-.Lcst_begin37
.Lcst_begin37:
	.uleb128 .Ltmp650-.Lfunc_begin37        # >> Call Site 1 <<
	.uleb128 .Ltmp653-.Ltmp650              #   Call between .Ltmp650 and .Ltmp653
	.uleb128 .Ltmp654-.Lfunc_begin37        #     jumps to .Ltmp654
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp653-.Lfunc_begin37        # >> Call Site 2 <<
	.uleb128 .Ltmp655-.Ltmp653              #   Call between .Ltmp653 and .Ltmp655
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp655-.Lfunc_begin37        # >> Call Site 3 <<
	.uleb128 .Ltmp658-.Ltmp655              #   Call between .Ltmp655 and .Ltmp658
	.uleb128 .Ltmp659-.Lfunc_begin37        #     jumps to .Ltmp659
	.byte	1                               #   On action: 1
.Lcst_end37:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase15:
	.p2align	2
                                        # -- End function
	.section	.text._ZZ8gemm_CPUIDF16_ff9col_major9row_majorS0_S0_EvjjjPKT_S4_PKT0_PS5_T1_S9_ENUljjjE0_8__invokeEjjj,"axG",@progbits,_ZZ8gemm_CPUIDF16_ff9col_major9row_majorS0_S0_EvjjjPKT_S4_PKT0_PS5_T1_S9_ENUljjjE0_8__invokeEjjj,comdat
	.weak	_ZZ8gemm_CPUIDF16_ff9col_major9row_majorS0_S0_EvjjjPKT_S4_PKT0_PS5_T1_S9_ENUljjjE0_8__invokeEjjj # -- Begin function _ZZ8gemm_CPUIDF16_ff9col_major9row_majorS0_S0_EvjjjPKT_S4_PKT0_PS5_T1_S9_ENUljjjE0_8__invokeEjjj
	.p2align	4, 0x90
	.type	_ZZ8gemm_CPUIDF16_ff9col_major9row_majorS0_S0_EvjjjPKT_S4_PKT0_PS5_T1_S9_ENUljjjE0_8__invokeEjjj,@function
_ZZ8gemm_CPUIDF16_ff9col_major9row_majorS0_S0_EvjjjPKT_S4_PKT0_PS5_T1_S9_ENUljjjE0_8__invokeEjjj: # @_ZZ8gemm_CPUIDF16_ff9col_major9row_majorS0_S0_EvjjjPKT_S4_PKT0_PS5_T1_S9_ENUljjjE0_8__invokeEjjj
	.cfi_startproc
# %bb.0:                                # %entry
                                        # kill: def $esi killed $esi def $rsi
                                        # kill: def $edi killed $edi def $rdi
	imull	%edx, %esi
	leal	(%rsi,%rdi), %eax
	retq
.Lfunc_end141:
	.size	_ZZ8gemm_CPUIDF16_ff9col_major9row_majorS0_S0_EvjjjPKT_S4_PKT0_PS5_T1_S9_ENUljjjE0_8__invokeEjjj, .Lfunc_end141-_ZZ8gemm_CPUIDF16_ff9col_major9row_majorS0_S0_EvjjjPKT_S4_PKT0_PS5_T1_S9_ENUljjjE0_8__invokeEjjj
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZ8gemm_CPUIDF16_ff9col_major9row_majorS0_S0_EvjjjPKT_S4_PKT0_PS5_T1_S9_ENUljjjE_8__invokeEjjj,"axG",@progbits,_ZZ8gemm_CPUIDF16_ff9col_major9row_majorS0_S0_EvjjjPKT_S4_PKT0_PS5_T1_S9_ENUljjjE_8__invokeEjjj,comdat
	.weak	_ZZ8gemm_CPUIDF16_ff9col_major9row_majorS0_S0_EvjjjPKT_S4_PKT0_PS5_T1_S9_ENUljjjE_8__invokeEjjj # -- Begin function _ZZ8gemm_CPUIDF16_ff9col_major9row_majorS0_S0_EvjjjPKT_S4_PKT0_PS5_T1_S9_ENUljjjE_8__invokeEjjj
	.p2align	4, 0x90
	.type	_ZZ8gemm_CPUIDF16_ff9col_major9row_majorS0_S0_EvjjjPKT_S4_PKT0_PS5_T1_S9_ENUljjjE_8__invokeEjjj,@function
_ZZ8gemm_CPUIDF16_ff9col_major9row_majorS0_S0_EvjjjPKT_S4_PKT0_PS5_T1_S9_ENUljjjE_8__invokeEjjj: # @_ZZ8gemm_CPUIDF16_ff9col_major9row_majorS0_S0_EvjjjPKT_S4_PKT0_PS5_T1_S9_ENUljjjE_8__invokeEjjj
	.cfi_startproc
# %bb.0:                                # %entry
                                        # kill: def $esi killed $esi def $rsi
                                        # kill: def $edi killed $edi def $rdi
	imull	%edx, %edi
	leal	(%rdi,%rsi), %eax
	retq
.Lfunc_end142:
	.size	_ZZ8gemm_CPUIDF16_ff9col_major9row_majorS0_S0_EvjjjPKT_S4_PKT0_PS5_T1_S9_ENUljjjE_8__invokeEjjj, .Lfunc_end142-_ZZ8gemm_CPUIDF16_ff9col_major9row_majorS0_S0_EvjjjPKT_S4_PKT0_PS5_T1_S9_ENUljjjE_8__invokeEjjj
	.cfi_endproc
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function .omp_outlined..69
	.type	.omp_outlined..69,@function
.omp_outlined..69:                      # @.omp_outlined..69
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	(%rdx), %r13d
	testl	%r13d, %r13d
	jle	.LBB143_5
# %bb.1:                                # %omp.precond.then
	movq	%r9, %r14
	movq	%r8, %r15
	movq	%rcx, %r12
	movq	%rdx, %rbx
	leal	-1(%r13), %ebp
	movl	$0, 4(%rsp)
	movl	%ebp, (%rsp)
	movl	$1, 20(%rsp)
	movl	$0, 16(%rsp)
	movl	(%rdi), %esi
	subq	$8, %rsp
	.cfi_adjust_cfa_offset 8
	leaq	28(%rsp), %rax
	leaq	24(%rsp), %rcx
	leaq	12(%rsp), %r8
	leaq	8(%rsp), %r9
	movl	$.L__unnamed_2, %edi
	movl	%esi, 16(%rsp)                  # 4-byte Spill
	movl	$34, %edx
	pushq	$1
	.cfi_adjust_cfa_offset 8
	pushq	$1
	.cfi_adjust_cfa_offset 8
	pushq	%rax
	.cfi_adjust_cfa_offset 8
	callq	__kmpc_for_static_init_4
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	movl	(%rsp), %eax
	cmpl	%r13d, %eax
	cmovll	%eax, %ebp
	movl	%ebp, (%rsp)
	movl	4(%rsp), %r13d
	cmpl	%ebp, %r13d
	jg	.LBB143_4
# %bb.2:                                # %omp.inner.for.body.preheader
	leaq	12(%rsp), %rbp
	.p2align	4, 0x90
.LBB143_3:                              # %omp.inner.for.body
                                        # =>This Inner Loop Header: Depth=1
	movl	%r13d, 12(%rsp)
	subq	$8, %rsp
	.cfi_adjust_cfa_offset 8
	movl	$.L__unnamed_1, %edi
	movl	$.omp_outlined..70, %edx
	movl	$10, %esi
	movq	%r12, %rcx
	movq	%rbp, %r8
	movq	%r15, %r9
	xorl	%eax, %eax
	pushq	%rbx
	.cfi_adjust_cfa_offset 8
	pushq	128(%rsp)
	.cfi_adjust_cfa_offset 8
	pushq	128(%rsp)
	.cfi_adjust_cfa_offset 8
	pushq	128(%rsp)
	.cfi_adjust_cfa_offset 8
	pushq	128(%rsp)
	.cfi_adjust_cfa_offset 8
	pushq	128(%rsp)
	.cfi_adjust_cfa_offset 8
	pushq	%r14
	.cfi_adjust_cfa_offset 8
	callq	__kmpc_fork_call@PLT
	addq	$64, %rsp
	.cfi_adjust_cfa_offset -64
	leal	1(%r13), %eax
	cmpl	(%rsp), %r13d
	movl	%eax, %r13d
	jl	.LBB143_3
.LBB143_4:                              # %omp.loop.exit
	movl	$.L__unnamed_2, %edi
	movl	8(%rsp), %esi                   # 4-byte Reload
	callq	__kmpc_for_static_fini@PLT
.LBB143_5:                              # %omp.precond.end
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end143:
	.size	.omp_outlined..69, .Lfunc_end143-.omp_outlined..69
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4                               # -- Begin function .omp_outlined..70
.LCPI144_0:
	.quad	0x7fffffffffffffff              # double NaN
	.quad	0x7fffffffffffffff              # double NaN
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI144_1:
	.quad	0x3ff0000000000000              # double 1
	.text
	.p2align	4, 0x90
	.type	.omp_outlined..70,@function
.omp_outlined..70:                      # @.omp_outlined..70
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	(%rdx), %r13d
	testl	%r13d, %r13d
	jle	.LBB144_10
# %bb.1:                                # %omp.precond.then
	movq	%r9, %r14
	movq	%r8, %r15
	movq	%rcx, %rbx
	leal	-1(%r13), %ebp
	movl	$0, 12(%rsp)
	movl	%ebp, 8(%rsp)
	movl	$1, 20(%rsp)
	movl	$0, 16(%rsp)
	movl	(%rdi), %r12d
	subq	$8, %rsp
	.cfi_adjust_cfa_offset 8
	leaq	28(%rsp), %rax
	leaq	24(%rsp), %rcx
	leaq	20(%rsp), %r8
	leaq	16(%rsp), %r9
	movl	$.L__unnamed_2, %edi
	movl	%r12d, %esi
	movl	$34, %edx
	pushq	$1
	.cfi_adjust_cfa_offset 8
	pushq	$1
	.cfi_adjust_cfa_offset 8
	pushq	%rax
	.cfi_adjust_cfa_offset 8
	callq	__kmpc_for_static_init_4
	addq	$32, %rsp
	.cfi_adjust_cfa_offset -32
	movl	8(%rsp), %eax
	cmpl	%r13d, %eax
	cmovll	%eax, %ebp
	movl	%ebp, 8(%rsp)
	movl	12(%rsp), %eax
	cmpl	%ebp, %eax
	jle	.LBB144_2
.LBB144_9:                              # %omp.loop.exit
	movl	$.L__unnamed_2, %edi
	movl	%r12d, %esi
	callq	__kmpc_for_static_fini@PLT
.LBB144_10:                             # %omp.precond.end
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB144_2:                              # %omp.inner.for.body.preheader
	.cfi_def_cfa_offset 80
	movq	%rbx, %r10
	movq	120(%rsp), %r8
	movq	112(%rsp), %r9
	movq	104(%rsp), %rcx
	movq	88(%rsp), %rsi
	movq	(%rsi), %rsi
	movq	(%rcx), %rdi
	movl	(%rbx), %ecx
	movsd	(%r9), %xmm2                    # xmm2 = mem[0],zero
	addl	$1, %ebp
	movapd	.LCPI144_0(%rip), %xmm0         # xmm0 = [NaN,NaN]
	movsd	.LCPI144_1(%rip), %xmm1         # xmm1 = mem[0],zero
	jmp	.LBB144_3
	.p2align	4, 0x90
.LBB144_5:                              # %if.else
                                        #   in Loop: Header=BB144_3 Depth=1
	ucomisd	%xmm3, %xmm3
	jp	.LBB144_6
# %bb.8:                                # %if.end29
                                        #   in Loop: Header=BB144_3 Depth=1
	addl	$1, %eax
	cmpl	%eax, %ebp
	je	.LBB144_9
.LBB144_3:                              # %omp.inner.for.body
                                        # =>This Inner Loop Header: Depth=1
	movl	(%r15), %edx
	imull	%eax, %edx
	addl	%ecx, %edx
	movl	(%r14), %ebx
	imull	%eax, %ebx
	addl	%ecx, %ebx
	movslq	%edx, %rdx
	movss	(%rsi,%rdx,4), %xmm3            # xmm3 = mem[0],zero,zero,zero
	xorps	%xmm4, %xmm4
	cvtss2sd	%xmm3, %xmm4
	movslq	%ebx, %rdx
	movss	(%rdi,%rdx,4), %xmm3            # xmm3 = mem[0],zero,zero,zero
	xorps	%xmm5, %xmm5
	cvtss2sd	%xmm3, %xmm5
	movaps	%xmm4, %xmm3
	subsd	%xmm5, %xmm3
	andpd	%xmm0, %xmm3
	andps	%xmm0, %xmm4
	andpd	%xmm0, %xmm5
	addsd	%xmm4, %xmm5
	addsd	%xmm1, %xmm5
	divsd	%xmm5, %xmm3
	ucomisd	%xmm2, %xmm3
	jbe	.LBB144_5
# %bb.4:                                # %if.then
                                        #   in Loop: Header=BB144_3 Depth=1
	movsd	%xmm3, (%r9)
.LBB144_7:                              # %if.end29
                                        #   in Loop: Header=BB144_3 Depth=1
	movapd	%xmm3, %xmm2
	addl	$1, %eax
	cmpl	%eax, %ebp
	jne	.LBB144_3
	jmp	.LBB144_9
.LBB144_6:                              # %if.then28
                                        #   in Loop: Header=BB144_3 Depth=1
	movsd	%xmm3, (%r9)
	movl	(%r8), %ecx
	movl	%ecx, (%r10)
	jmp	.LBB144_7
.Lfunc_end144:
	.size	.omp_outlined..70, .Lfunc_end144-.omp_outlined..70
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10unique_ptrINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt14default_deleteIS5_EED2Ev,"axG",@progbits,_ZNSt10unique_ptrINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt14default_deleteIS5_EED2Ev,comdat
	.weak	_ZNSt10unique_ptrINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt14default_deleteIS5_EED2Ev # -- Begin function _ZNSt10unique_ptrINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt14default_deleteIS5_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt10unique_ptrINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt14default_deleteIS5_EED2Ev,@function
_ZNSt10unique_ptrINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt14default_deleteIS5_EED2Ev: # @_ZNSt10unique_ptrINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt14default_deleteIS5_EED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
	movq	(%rdi), %rbx
	testq	%rbx, %rbx
	je	.LBB145_4
# %bb.1:                                # %delete.notnull.i
	movq	(%rbx), %rdi
	leaq	16(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB145_3
# %bb.2:                                # %if.then.i.i.i
	callq	_ZdlPv
.LBB145_3:                              # %_ZNKSt14default_deleteINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclEPS5_.exit
	movq	%rbx, %rdi
	callq	_ZdlPv
.LBB145_4:                              # %if.end
	movq	$0, (%r14)
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end145:
	.size	_ZNSt10unique_ptrINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt14default_deleteIS5_EED2Ev, .Lfunc_end145-_ZNSt10unique_ptrINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt14default_deleteIS5_EED2Ev
	.cfi_endproc
                                        # -- End function
	.text
	.weak	_Z30__device_stub__mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_ # -- Begin function _Z30__device_stub__mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_
	.p2align	4, 0x90
	.type	_Z30__device_stub__mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_,@function
_Z30__device_stub__mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_: # @_Z30__device_stub__mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_
	.cfi_startproc
# %bb.0:                                # %entry
	subq	$200, %rsp
	.cfi_def_cfa_offset 208
	movl	%edi, 20(%rsp)
	movl	%esi, 16(%rsp)
	movl	%edx, 12(%rsp)
	movq	%rcx, 88(%rsp)
	movq	%r8, 80(%rsp)
	movq	%r9, 72(%rsp)
	movss	%xmm0, 8(%rsp)
	movss	%xmm1, 4(%rsp)
	leaq	20(%rsp), %rax
	movq	%rax, 96(%rsp)
	leaq	16(%rsp), %rax
	movq	%rax, 104(%rsp)
	leaq	12(%rsp), %rax
	movq	%rax, 112(%rsp)
	leaq	88(%rsp), %rax
	movq	%rax, 120(%rsp)
	leaq	80(%rsp), %rax
	movq	%rax, 128(%rsp)
	leaq	72(%rsp), %rax
	movq	%rax, 136(%rsp)
	leaq	208(%rsp), %rax
	movq	%rax, 144(%rsp)
	leaq	216(%rsp), %rax
	movq	%rax, 152(%rsp)
	leaq	224(%rsp), %rax
	movq	%rax, 160(%rsp)
	leaq	232(%rsp), %rax
	movq	%rax, 168(%rsp)
	leaq	240(%rsp), %rax
	movq	%rax, 176(%rsp)
	leaq	8(%rsp), %rax
	movq	%rax, 184(%rsp)
	leaq	4(%rsp), %rax
	movq	%rax, 192(%rsp)
	leaq	56(%rsp), %rdi
	leaq	40(%rsp), %rsi
	leaq	32(%rsp), %rdx
	leaq	24(%rsp), %rcx
	callq	__hipPopCallConfiguration
	movq	56(%rsp), %rsi
	movl	64(%rsp), %edx
	movq	40(%rsp), %rcx
	movl	48(%rsp), %r8d
	leaq	96(%rsp), %r9
	movl	$_Z15mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_, %edi
	pushq	24(%rsp)
	.cfi_adjust_cfa_offset 8
	pushq	40(%rsp)
	.cfi_adjust_cfa_offset 8
	callq	hipLaunchKernel
	addq	$216, %rsp
	.cfi_adjust_cfa_offset -216
	retq
.Lfunc_end146:
	.size	_Z30__device_stub__mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_, .Lfunc_end146-_Z30__device_stub__mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEED2Ev,"axG",@progbits,_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEED2Ev,comdat
	.weak	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEED2Ev # -- Begin function _ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEED2Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEED2Ev,@function
_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEED2Ev: # @_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE+16, (%rdi)
	movq	8(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB147_1
# %bb.2:                                # %if.then.i.i.i
	jmp	_ZdlPv                          # TAILCALL
.LBB147_1:                              # %_ZNSt6vectorISt4pairIllESaIS1_EED2Ev.exit
	retq
.Lfunc_end147:
	.size	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEED2Ev, .Lfunc_end147-_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEED0Ev,"axG",@progbits,_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEED0Ev,comdat
	.weak	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEED0Ev # -- Begin function _ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEED0Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEED0Ev,@function
_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEED0Ev: # @_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEED0Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE+16, (%rdi)
	movq	8(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB148_2
# %bb.1:                                # %if.then.i.i.i.i
	callq	_ZdlPv
.LBB148_2:                              # %_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEED2Ev.exit
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end148:
	.size	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEED0Ev, .Lfunc_end148-_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE5BeginEv,"axG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE5BeginEv,comdat
	.weak	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE5BeginEv # -- Begin function _ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE5BeginEv
	.p2align	4, 0x90
	.type	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE5BeginEv,@function
_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE5BeginEv: # @_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE5BeginEv
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movl	$32, %edi
	callq	_Znwm
	movq	8(%rbx), %rcx
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE+16, (%rax)
	movq	%rbx, 8(%rax)
	movq	%rcx, 16(%rax)
	movq	$0, 24(%rax)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end149:
	.size	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE5BeginEv, .Lfunc_end149-_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE5BeginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE3EndEv,"axG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE3EndEv,comdat
	.weak	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE3EndEv # -- Begin function _ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE3EndEv
	.p2align	4, 0x90
	.type	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE3EndEv,@function
_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE3EndEv: # @_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE3EndEv
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movl	$32, %edi
	callq	_Znwm
	movq	16(%rbx), %rcx
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE+16, (%rax)
	movq	%rbx, 8(%rax)
	movq	%rcx, 16(%rax)
	movq	$0, 24(%rax)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end150:
	.size	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE3EndEv, .Lfunc_end150-_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE3EndEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorD2Ev,"axG",@progbits,_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorD2Ev,comdat
	.weak	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorD2Ev # -- Begin function _ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorD2Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorD2Ev,@function
_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorD2Ev: # @_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorD2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE+16, (%rdi)
	movq	24(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB151_2
# %bb.1:                                # %_ZNKSt14default_deleteIKSt4pairIllEEclEPS2_.exit.i
	callq	_ZdlPv
.LBB151_2:                              # %_ZNSt10unique_ptrIKSt4pairIllESt14default_deleteIS2_EED2Ev.exit
	movq	$0, 24(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end151:
	.size	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorD2Ev, .Lfunc_end151-_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorD0Ev,"axG",@progbits,_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorD0Ev,comdat
	.weak	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorD0Ev # -- Begin function _ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorD0Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorD0Ev,@function
_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorD0Ev: # @_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorD0Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE+16, (%rdi)
	movq	24(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB152_2
# %bb.1:                                # %_ZNKSt14default_deleteIKSt4pairIllEEclEPS2_.exit.i.i
	callq	_ZdlPv
.LBB152_2:                              # %_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorD2Ev.exit
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end152:
	.size	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorD0Ev, .Lfunc_end152-_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorD0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator13BaseGeneratorEv,"axG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator13BaseGeneratorEv,comdat
	.weak	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator13BaseGeneratorEv # -- Begin function _ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator13BaseGeneratorEv
	.p2align	4, 0x90
	.type	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator13BaseGeneratorEv,@function
_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator13BaseGeneratorEv: # @_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator13BaseGeneratorEv
	.cfi_startproc
# %bb.0:                                # %entry
	movq	8(%rdi), %rax
	retq
.Lfunc_end153:
	.size	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator13BaseGeneratorEv, .Lfunc_end153-_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator13BaseGeneratorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator7AdvanceEv,"axG",@progbits,_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator7AdvanceEv,comdat
	.weak	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator7AdvanceEv # -- Begin function _ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator7AdvanceEv
	.p2align	4, 0x90
	.type	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator7AdvanceEv,@function
_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator7AdvanceEv: # @_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator7AdvanceEv
	.cfi_startproc
# %bb.0:                                # %entry
	movq	%rdi, %rax
	addq	$16, 16(%rdi)
	movq	24(%rdi), %rdi
	movq	$0, 24(%rax)
	testq	%rdi, %rdi
	je	.LBB154_1
# %bb.2:                                # %_ZNKSt14default_deleteIKSt4pairIllEEclEPS2_.exit.i
	jmp	_ZdlPv                          # TAILCALL
.LBB154_1:                              # %_ZNSt10unique_ptrIKSt4pairIllESt14default_deleteIS2_EE5resetEPS2_.exit
	retq
.Lfunc_end154:
	.size	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator7AdvanceEv, .Lfunc_end154-_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator7AdvanceEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator5CloneEv,"axG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator5CloneEv,comdat
	.weak	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator5CloneEv # -- Begin function _ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator5CloneEv
	.p2align	4, 0x90
	.type	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator5CloneEv,@function
_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator5CloneEv: # @_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator5CloneEv
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movl	$32, %edi
	callq	_Znwm
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE+16, (%rax)
	movq	8(%rbx), %rcx
	movq	%rcx, 8(%rax)
	movq	16(%rbx), %rcx
	movq	%rcx, 16(%rax)
	movq	$0, 24(%rax)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end155:
	.size	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator5CloneEv, .Lfunc_end155-_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator5CloneEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator7CurrentEv,"axG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator7CurrentEv,comdat
	.weak	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator7CurrentEv # -- Begin function _ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator7CurrentEv
	.p2align	4, 0x90
	.type	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator7CurrentEv,@function
_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator7CurrentEv: # @_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator7CurrentEv
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	24(%rdi), %rax
	testq	%rax, %rax
	je	.LBB156_1
# %bb.2:                                # %if.end
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB156_1:                              # %_ZNSt10unique_ptrIKSt4pairIllESt14default_deleteIS2_EE5resetEPS2_.exit
	.cfi_def_cfa_offset 16
	movq	%rdi, %rbx
	movl	$16, %edi
	callq	_Znwm
	movq	16(%rbx), %rcx
	movups	(%rcx), %xmm0
	movups	%xmm0, (%rax)
	movq	%rax, 24(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end156:
	.size	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator7CurrentEv, .Lfunc_end156-_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator7CurrentEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS3_EE,"axG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS3_EE,comdat
	.weak	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS3_EE # -- Begin function _ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS3_EE
	.p2align	4, 0x90
	.type	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS3_EE,@function
_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS3_EE: # @_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS3_EE
.Lfunc_begin38:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception38
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r15
	movq	%rdi, %r14
	movq	(%rdi), %rax
	callq	*16(%rax)
	movq	%rax, %rbx
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*16(%rax)
	xorl	%edi, %edi
	cmpq	%rax, %rbx
	sete	%dil
	callq	_ZN7testing8internal6IsTrueEb
	testb	%al, %al
	jne	.LBB157_14
# %bb.1:                                # %if.else
	leaq	8(%rsp), %rdi
	movl	$.L.str.8, %edx
	movl	$3, %esi
	movl	$340, %ecx                      # imm = 0x154
	callq	_ZN7testing8internal8GTestLogC1ENS0_16GTestLogSeverityEPKci
.Ltmp660:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.31, %esi
	movl	$59, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp661:
# %bb.2:                                # %invoke.cont
.Ltmp662:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.32, %esi
	movl	$43, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp663:
# %bb.3:                                # %invoke.cont8
.Ltmp664:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.33, %esi
	movl	$26, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp665:
# %bb.4:                                # %invoke.cont10
	movq	_ZSt4cerr(%rip), %rax
	movq	-24(%rax), %rax
	movq	_ZSt4cerr+240(%rax), %rbx
	testq	%rbx, %rbx
	je	.LBB157_5
# %bb.7:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	cmpb	$0, 56(%rbx)
	je	.LBB157_9
# %bb.8:                                # %if.then.i4.i.i
	movb	67(%rbx), %al
	jmp	.LBB157_11
.LBB157_9:                              # %if.end.i.i.i
.Ltmp666:
	movq	%rbx, %rdi
	callq	_ZNKSt5ctypeIcE13_M_widen_initEv
.Ltmp667:
# %bb.10:                               # %.noexc28
	movq	(%rbx), %rax
.Ltmp668:
	movq	%rbx, %rdi
	movl	$10, %esi
	callq	*48(%rax)
.Ltmp669:
.LBB157_11:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp670:
	movsbl	%al, %esi
	movl	$_ZSt4cerr, %edi
	callq	_ZNSo3putEc
.Ltmp671:
# %bb.12:                               # %call1.i.noexc
.Ltmp672:
	movq	%rax, %rdi
	callq	_ZNSo5flushEv
.Ltmp673:
# %bb.13:                               # %invoke.cont12
	leaq	8(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
.LBB157_14:                             # %if.end
	movq	%r15, %rdi
	callq	_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorEKNS0_22ParamIteratorInterfaceIS4_EEEEPT_PT0_
	movq	16(%r14), %rcx
	cmpq	16(%rax), %rcx
	sete	%al
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB157_5:                              # %if.then.i.i.i
	.cfi_def_cfa_offset 48
.Ltmp674:
	callq	_ZSt16__throw_bad_castv
.Ltmp675:
# %bb.6:                                # %.noexc
.LBB157_15:                             # %lpad
.Ltmp676:
	movq	%rax, %rbx
	leaq	8(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end157:
	.size	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS3_EE, .Lfunc_end157-_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS3_EE
	.cfi_endproc
	.section	.gcc_except_table._ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS3_EE,"aG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS3_EE,comdat
	.p2align	2
GCC_except_table157:
.Lexception38:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end38-.Lcst_begin38
.Lcst_begin38:
	.uleb128 .Lfunc_begin38-.Lfunc_begin38  # >> Call Site 1 <<
	.uleb128 .Ltmp660-.Lfunc_begin38        #   Call between .Lfunc_begin38 and .Ltmp660
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp660-.Lfunc_begin38        # >> Call Site 2 <<
	.uleb128 .Ltmp673-.Ltmp660              #   Call between .Ltmp660 and .Ltmp673
	.uleb128 .Ltmp676-.Lfunc_begin38        #     jumps to .Ltmp676
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp673-.Lfunc_begin38        # >> Call Site 3 <<
	.uleb128 .Ltmp674-.Ltmp673              #   Call between .Ltmp673 and .Ltmp674
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp674-.Lfunc_begin38        # >> Call Site 4 <<
	.uleb128 .Ltmp675-.Ltmp674              #   Call between .Ltmp674 and .Ltmp675
	.uleb128 .Ltmp676-.Lfunc_begin38        #     jumps to .Ltmp676
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp675-.Lfunc_begin38        # >> Call Site 5 <<
	.uleb128 .Lfunc_end157-.Ltmp675         #   Call between .Ltmp675 and .Lfunc_end157
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end38:
	.p2align	2
                                        # -- End function
	.section	.text._ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorEKNS0_22ParamIteratorInterfaceIS4_EEEEPT_PT0_,"axG",@progbits,_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorEKNS0_22ParamIteratorInterfaceIS4_EEEEPT_PT0_,comdat
	.weak	_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorEKNS0_22ParamIteratorInterfaceIS4_EEEEPT_PT0_ # -- Begin function _ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorEKNS0_22ParamIteratorInterfaceIS4_EEEEPT_PT0_
	.p2align	4, 0x90
	.type	_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorEKNS0_22ParamIteratorInterfaceIS4_EEEEPT_PT0_,@function
_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorEKNS0_22ParamIteratorInterfaceIS4_EEEEPT_PT0_: # @_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorEKNS0_22ParamIteratorInterfaceIS4_EEEEPT_PT0_
.Lfunc_begin39:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception39
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -16
	testq	%rdi, %rdi
	je	.LBB158_10
# %bb.1:                                # %typeid.end
	movq	%rdi, %rbx
	movq	(%rdi), %rax
	movq	-8(%rax), %rax
	movq	8(%rax), %rdi
	cmpq	$_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE, %rdi
	je	.LBB158_2
# %bb.3:                                # %lor.rhs.i
	cmpb	$42, (%rdi)
	jne	.LBB158_5
# %bb.4:
	xorl	%eax, %eax
	movzbl	%al, %edi
	callq	_ZN7testing8internal6IsTrueEb
	testb	%al, %al
	je	.LBB158_7
	jmp	.LBB158_9
.LBB158_2:
	movb	$1, %al
	movzbl	%al, %edi
	callq	_ZN7testing8internal6IsTrueEb
	testb	%al, %al
	je	.LBB158_7
	jmp	.LBB158_9
.LBB158_5:                              # %land.rhs.i
	movl	$_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE, %esi
	callq	strcmp
	testl	%eax, %eax
	sete	%al
	movzbl	%al, %edi
	callq	_ZN7testing8internal6IsTrueEb
	testb	%al, %al
	jne	.LBB158_9
.LBB158_7:                              # %if.else
	leaq	8(%rsp), %rdi
	movl	$.L.str.5, %edx
	movl	$3, %esi
	movl	$1114, %ecx                     # imm = 0x45A
	callq	_ZN7testing8internal8GTestLogC1ENS0_16GTestLogSeverityEPKci
.Ltmp677:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.6, %esi
	movl	$51, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp678:
# %bb.8:                                # %invoke.cont
	leaq	8(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
.LBB158_9:                              # %dynamic_cast.end
	movl	$_ZTIN7testing8internal22ParamIteratorInterfaceISt4pairIllEEE, %esi
	movl	$_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE, %edx
	movq	%rbx, %rdi
	xorl	%ecx, %ecx
	callq	__dynamic_cast
	addq	$16, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB158_10:                             # %typeid.bad_typeid
	.cfi_def_cfa_offset 32
	callq	__cxa_bad_typeid
.LBB158_11:                             # %lpad
.Ltmp679:
	movq	%rax, %rbx
	leaq	8(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end158:
	.size	_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorEKNS0_22ParamIteratorInterfaceIS4_EEEEPT_PT0_, .Lfunc_end158-_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorEKNS0_22ParamIteratorInterfaceIS4_EEEEPT_PT0_
	.cfi_endproc
	.section	.gcc_except_table._ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorEKNS0_22ParamIteratorInterfaceIS4_EEEEPT_PT0_,"aG",@progbits,_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorEKNS0_22ParamIteratorInterfaceIS4_EEEEPT_PT0_,comdat
	.p2align	2
GCC_except_table158:
.Lexception39:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end39-.Lcst_begin39
.Lcst_begin39:
	.uleb128 .Lfunc_begin39-.Lfunc_begin39  # >> Call Site 1 <<
	.uleb128 .Ltmp677-.Lfunc_begin39        #   Call between .Lfunc_begin39 and .Ltmp677
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp677-.Lfunc_begin39        # >> Call Site 2 <<
	.uleb128 .Ltmp678-.Ltmp677              #   Call between .Ltmp677 and .Ltmp678
	.uleb128 .Ltmp679-.Lfunc_begin39        #     jumps to .Ltmp679
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp678-.Lfunc_begin39        # >> Call Site 3 <<
	.uleb128 .Lfunc_end158-.Ltmp678         #   Call between .Ltmp678 and .Lfunc_end158
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end39:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EED0Ev,"axG",@progbits,_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EED0Ev,comdat
	.weak	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EED0Ev # -- Begin function _ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.p2align	4, 0x90
	.type	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EED0Ev,@function
_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EED0Ev: # @_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.cfi_startproc
# %bb.0:                                # %entry
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end159:
	.size	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EED0Ev, .Lfunc_end159-_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,"axG",@progbits,_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,comdat
	.weak	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv # -- Begin function _ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.p2align	4, 0x90
	.type	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,@function
_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv: # @_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.cfi_startproc
# %bb.0:                                # %entry
	movq	16(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB160_1
# %bb.2:                                # %delete.notnull
	movq	(%rdi), %rax
	jmpq	*8(%rax)                        # TAILCALL
.LBB160_1:                              # %delete.end
	retq
.Lfunc_end160:
	.size	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv, .Lfunc_end160-_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,"axG",@progbits,_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,comdat
	.weak	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv # -- Begin function _ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.p2align	4, 0x90
	.type	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,@function
_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv: # @_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_startproc
# %bb.0:                                # %entry
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end161:
	.size	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv, .Lfunc_end161-_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,"axG",@progbits,_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,comdat
	.weak	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info # -- Begin function _ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.p2align	4, 0x90
	.type	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,@function
_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info: # @_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.cfi_startproc
# %bb.0:                                # %entry
	xorl	%eax, %eax
	retq
.Lfunc_end162:
	.size	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info, .Lfunc_end162-_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEED2Ev,"axG",@progbits,_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEED2Ev,comdat
	.weak	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEED2Ev # -- Begin function _ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEED2Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEED2Ev,@function
_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEED2Ev: # @_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE+16, (%rdi)
	movq	8(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB163_1
# %bb.2:                                # %if.then.i.i.i
	jmp	_ZdlPv                          # TAILCALL
.LBB163_1:                              # %_ZNSt6vectorISt5tupleIJlllEESaIS1_EED2Ev.exit
	retq
.Lfunc_end163:
	.size	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEED2Ev, .Lfunc_end163-_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEED0Ev,"axG",@progbits,_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEED0Ev,comdat
	.weak	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEED0Ev # -- Begin function _ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEED0Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEED0Ev,@function
_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEED0Ev: # @_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEED0Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE+16, (%rdi)
	movq	8(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB164_2
# %bb.1:                                # %if.then.i.i.i.i
	callq	_ZdlPv
.LBB164_2:                              # %_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEED2Ev.exit
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end164:
	.size	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEED0Ev, .Lfunc_end164-_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE5BeginEv,"axG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE5BeginEv,comdat
	.weak	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE5BeginEv # -- Begin function _ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE5BeginEv
	.p2align	4, 0x90
	.type	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE5BeginEv,@function
_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE5BeginEv: # @_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE5BeginEv
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movl	$32, %edi
	callq	_Znwm
	movq	8(%rbx), %rcx
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE+16, (%rax)
	movq	%rbx, 8(%rax)
	movq	%rcx, 16(%rax)
	movq	$0, 24(%rax)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end165:
	.size	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE5BeginEv, .Lfunc_end165-_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE5BeginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE3EndEv,"axG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE3EndEv,comdat
	.weak	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE3EndEv # -- Begin function _ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE3EndEv
	.p2align	4, 0x90
	.type	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE3EndEv,@function
_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE3EndEv: # @_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE3EndEv
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movl	$32, %edi
	callq	_Znwm
	movq	16(%rbx), %rcx
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE+16, (%rax)
	movq	%rbx, 8(%rax)
	movq	%rcx, 16(%rax)
	movq	$0, 24(%rax)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end166:
	.size	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE3EndEv, .Lfunc_end166-_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE3EndEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorD2Ev,"axG",@progbits,_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorD2Ev,comdat
	.weak	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorD2Ev # -- Begin function _ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorD2Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorD2Ev,@function
_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorD2Ev: # @_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorD2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE+16, (%rdi)
	movq	24(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB167_2
# %bb.1:                                # %_ZNKSt14default_deleteIKSt5tupleIJlllEEEclEPS2_.exit.i
	callq	_ZdlPv
.LBB167_2:                              # %_ZNSt10unique_ptrIKSt5tupleIJlllEESt14default_deleteIS2_EED2Ev.exit
	movq	$0, 24(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end167:
	.size	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorD2Ev, .Lfunc_end167-_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorD0Ev,"axG",@progbits,_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorD0Ev,comdat
	.weak	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorD0Ev # -- Begin function _ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorD0Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorD0Ev,@function
_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorD0Ev: # @_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorD0Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE+16, (%rdi)
	movq	24(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB168_2
# %bb.1:                                # %_ZNKSt14default_deleteIKSt5tupleIJlllEEEclEPS2_.exit.i.i
	callq	_ZdlPv
.LBB168_2:                              # %_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorD2Ev.exit
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end168:
	.size	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorD0Ev, .Lfunc_end168-_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorD0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator13BaseGeneratorEv,"axG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator13BaseGeneratorEv,comdat
	.weak	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator13BaseGeneratorEv # -- Begin function _ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator13BaseGeneratorEv
	.p2align	4, 0x90
	.type	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator13BaseGeneratorEv,@function
_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator13BaseGeneratorEv: # @_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator13BaseGeneratorEv
	.cfi_startproc
# %bb.0:                                # %entry
	movq	8(%rdi), %rax
	retq
.Lfunc_end169:
	.size	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator13BaseGeneratorEv, .Lfunc_end169-_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator13BaseGeneratorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator7AdvanceEv,"axG",@progbits,_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator7AdvanceEv,comdat
	.weak	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator7AdvanceEv # -- Begin function _ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator7AdvanceEv
	.p2align	4, 0x90
	.type	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator7AdvanceEv,@function
_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator7AdvanceEv: # @_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator7AdvanceEv
	.cfi_startproc
# %bb.0:                                # %entry
	movq	%rdi, %rax
	addq	$24, 16(%rdi)
	movq	24(%rdi), %rdi
	movq	$0, 24(%rax)
	testq	%rdi, %rdi
	je	.LBB170_1
# %bb.2:                                # %_ZNKSt14default_deleteIKSt5tupleIJlllEEEclEPS2_.exit.i
	jmp	_ZdlPv                          # TAILCALL
.LBB170_1:                              # %_ZNSt10unique_ptrIKSt5tupleIJlllEESt14default_deleteIS2_EE5resetEPS2_.exit
	retq
.Lfunc_end170:
	.size	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator7AdvanceEv, .Lfunc_end170-_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator7AdvanceEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator5CloneEv,"axG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator5CloneEv,comdat
	.weak	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator5CloneEv # -- Begin function _ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator5CloneEv
	.p2align	4, 0x90
	.type	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator5CloneEv,@function
_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator5CloneEv: # @_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator5CloneEv
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movl	$32, %edi
	callq	_Znwm
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE+16, (%rax)
	movq	8(%rbx), %rcx
	movq	%rcx, 8(%rax)
	movq	16(%rbx), %rcx
	movq	%rcx, 16(%rax)
	movq	$0, 24(%rax)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end171:
	.size	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator5CloneEv, .Lfunc_end171-_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator5CloneEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator7CurrentEv,"axG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator7CurrentEv,comdat
	.weak	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator7CurrentEv # -- Begin function _ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator7CurrentEv
	.p2align	4, 0x90
	.type	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator7CurrentEv,@function
_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator7CurrentEv: # @_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator7CurrentEv
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	24(%rdi), %rax
	testq	%rax, %rax
	je	.LBB172_1
# %bb.2:                                # %if.end
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB172_1:                              # %_ZNSt10unique_ptrIKSt5tupleIJlllEESt14default_deleteIS2_EE5resetEPS2_.exit
	.cfi_def_cfa_offset 16
	movq	%rdi, %rbx
	movl	$24, %edi
	callq	_Znwm
	movq	16(%rbx), %rcx
	movups	(%rcx), %xmm0
	movups	%xmm0, (%rax)
	movq	16(%rcx), %rcx
	movq	%rcx, 16(%rax)
	movq	%rax, 24(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end172:
	.size	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator7CurrentEv, .Lfunc_end172-_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator7CurrentEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS3_EE,"axG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS3_EE,comdat
	.weak	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS3_EE # -- Begin function _ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS3_EE
	.p2align	4, 0x90
	.type	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS3_EE,@function
_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS3_EE: # @_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS3_EE
.Lfunc_begin40:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception40
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r15
	movq	%rdi, %r14
	movq	(%rdi), %rax
	callq	*16(%rax)
	movq	%rax, %rbx
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*16(%rax)
	xorl	%edi, %edi
	cmpq	%rax, %rbx
	sete	%dil
	callq	_ZN7testing8internal6IsTrueEb
	testb	%al, %al
	jne	.LBB173_14
# %bb.1:                                # %if.else
	leaq	8(%rsp), %rdi
	movl	$.L.str.8, %edx
	movl	$3, %esi
	movl	$340, %ecx                      # imm = 0x154
	callq	_ZN7testing8internal8GTestLogC1ENS0_16GTestLogSeverityEPKci
.Ltmp680:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.31, %esi
	movl	$59, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp681:
# %bb.2:                                # %invoke.cont
.Ltmp682:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.32, %esi
	movl	$43, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp683:
# %bb.3:                                # %invoke.cont8
.Ltmp684:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.33, %esi
	movl	$26, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp685:
# %bb.4:                                # %invoke.cont10
	movq	_ZSt4cerr(%rip), %rax
	movq	-24(%rax), %rax
	movq	_ZSt4cerr+240(%rax), %rbx
	testq	%rbx, %rbx
	je	.LBB173_5
# %bb.7:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	cmpb	$0, 56(%rbx)
	je	.LBB173_9
# %bb.8:                                # %if.then.i4.i.i
	movb	67(%rbx), %al
	jmp	.LBB173_11
.LBB173_9:                              # %if.end.i.i.i
.Ltmp686:
	movq	%rbx, %rdi
	callq	_ZNKSt5ctypeIcE13_M_widen_initEv
.Ltmp687:
# %bb.10:                               # %.noexc28
	movq	(%rbx), %rax
.Ltmp688:
	movq	%rbx, %rdi
	movl	$10, %esi
	callq	*48(%rax)
.Ltmp689:
.LBB173_11:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp690:
	movsbl	%al, %esi
	movl	$_ZSt4cerr, %edi
	callq	_ZNSo3putEc
.Ltmp691:
# %bb.12:                               # %call1.i.noexc
.Ltmp692:
	movq	%rax, %rdi
	callq	_ZNSo5flushEv
.Ltmp693:
# %bb.13:                               # %invoke.cont12
	leaq	8(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
.LBB173_14:                             # %if.end
	movq	%r15, %rdi
	callq	_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorEKNS0_22ParamIteratorInterfaceIS4_EEEEPT_PT0_
	movq	16(%r14), %rcx
	cmpq	16(%rax), %rcx
	sete	%al
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB173_5:                              # %if.then.i.i.i
	.cfi_def_cfa_offset 48
.Ltmp694:
	callq	_ZSt16__throw_bad_castv
.Ltmp695:
# %bb.6:                                # %.noexc
.LBB173_15:                             # %lpad
.Ltmp696:
	movq	%rax, %rbx
	leaq	8(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end173:
	.size	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS3_EE, .Lfunc_end173-_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS3_EE
	.cfi_endproc
	.section	.gcc_except_table._ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS3_EE,"aG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS3_EE,comdat
	.p2align	2
GCC_except_table173:
.Lexception40:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end40-.Lcst_begin40
.Lcst_begin40:
	.uleb128 .Lfunc_begin40-.Lfunc_begin40  # >> Call Site 1 <<
	.uleb128 .Ltmp680-.Lfunc_begin40        #   Call between .Lfunc_begin40 and .Ltmp680
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp680-.Lfunc_begin40        # >> Call Site 2 <<
	.uleb128 .Ltmp693-.Ltmp680              #   Call between .Ltmp680 and .Ltmp693
	.uleb128 .Ltmp696-.Lfunc_begin40        #     jumps to .Ltmp696
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp693-.Lfunc_begin40        # >> Call Site 3 <<
	.uleb128 .Ltmp694-.Ltmp693              #   Call between .Ltmp693 and .Ltmp694
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp694-.Lfunc_begin40        # >> Call Site 4 <<
	.uleb128 .Ltmp695-.Ltmp694              #   Call between .Ltmp694 and .Ltmp695
	.uleb128 .Ltmp696-.Lfunc_begin40        #     jumps to .Ltmp696
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp695-.Lfunc_begin40        # >> Call Site 5 <<
	.uleb128 .Lfunc_end173-.Ltmp695         #   Call between .Ltmp695 and .Lfunc_end173
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end40:
	.p2align	2
                                        # -- End function
	.section	.text._ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorEKNS0_22ParamIteratorInterfaceIS4_EEEEPT_PT0_,"axG",@progbits,_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorEKNS0_22ParamIteratorInterfaceIS4_EEEEPT_PT0_,comdat
	.weak	_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorEKNS0_22ParamIteratorInterfaceIS4_EEEEPT_PT0_ # -- Begin function _ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorEKNS0_22ParamIteratorInterfaceIS4_EEEEPT_PT0_
	.p2align	4, 0x90
	.type	_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorEKNS0_22ParamIteratorInterfaceIS4_EEEEPT_PT0_,@function
_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorEKNS0_22ParamIteratorInterfaceIS4_EEEEPT_PT0_: # @_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorEKNS0_22ParamIteratorInterfaceIS4_EEEEPT_PT0_
.Lfunc_begin41:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception41
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -16
	testq	%rdi, %rdi
	je	.LBB174_10
# %bb.1:                                # %typeid.end
	movq	%rdi, %rbx
	movq	(%rdi), %rax
	movq	-8(%rax), %rax
	movq	8(%rax), %rdi
	cmpq	$_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE, %rdi
	je	.LBB174_2
# %bb.3:                                # %lor.rhs.i
	cmpb	$42, (%rdi)
	jne	.LBB174_5
# %bb.4:
	xorl	%eax, %eax
	movzbl	%al, %edi
	callq	_ZN7testing8internal6IsTrueEb
	testb	%al, %al
	je	.LBB174_7
	jmp	.LBB174_9
.LBB174_2:
	movb	$1, %al
	movzbl	%al, %edi
	callq	_ZN7testing8internal6IsTrueEb
	testb	%al, %al
	je	.LBB174_7
	jmp	.LBB174_9
.LBB174_5:                              # %land.rhs.i
	movl	$_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE, %esi
	callq	strcmp
	testl	%eax, %eax
	sete	%al
	movzbl	%al, %edi
	callq	_ZN7testing8internal6IsTrueEb
	testb	%al, %al
	jne	.LBB174_9
.LBB174_7:                              # %if.else
	leaq	8(%rsp), %rdi
	movl	$.L.str.5, %edx
	movl	$3, %esi
	movl	$1114, %ecx                     # imm = 0x45A
	callq	_ZN7testing8internal8GTestLogC1ENS0_16GTestLogSeverityEPKci
.Ltmp697:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.6, %esi
	movl	$51, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp698:
# %bb.8:                                # %invoke.cont
	leaq	8(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
.LBB174_9:                              # %dynamic_cast.end
	movl	$_ZTIN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEE, %esi
	movl	$_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE, %edx
	movq	%rbx, %rdi
	xorl	%ecx, %ecx
	callq	__dynamic_cast
	addq	$16, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB174_10:                             # %typeid.bad_typeid
	.cfi_def_cfa_offset 32
	callq	__cxa_bad_typeid
.LBB174_11:                             # %lpad
.Ltmp699:
	movq	%rax, %rbx
	leaq	8(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end174:
	.size	_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorEKNS0_22ParamIteratorInterfaceIS4_EEEEPT_PT0_, .Lfunc_end174-_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorEKNS0_22ParamIteratorInterfaceIS4_EEEEPT_PT0_
	.cfi_endproc
	.section	.gcc_except_table._ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorEKNS0_22ParamIteratorInterfaceIS4_EEEEPT_PT0_,"aG",@progbits,_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorEKNS0_22ParamIteratorInterfaceIS4_EEEEPT_PT0_,comdat
	.p2align	2
GCC_except_table174:
.Lexception41:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end41-.Lcst_begin41
.Lcst_begin41:
	.uleb128 .Lfunc_begin41-.Lfunc_begin41  # >> Call Site 1 <<
	.uleb128 .Ltmp697-.Lfunc_begin41        #   Call between .Lfunc_begin41 and .Ltmp697
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp697-.Lfunc_begin41        # >> Call Site 2 <<
	.uleb128 .Ltmp698-.Ltmp697              #   Call between .Ltmp697 and .Ltmp698
	.uleb128 .Ltmp699-.Lfunc_begin41        #     jumps to .Ltmp699
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp698-.Lfunc_begin41        # >> Call Site 3 <<
	.uleb128 .Lfunc_end174-.Ltmp698         #   Call between .Ltmp698 and .Lfunc_end174
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end41:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EED0Ev,"axG",@progbits,_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EED0Ev,comdat
	.weak	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EED0Ev # -- Begin function _ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.p2align	4, 0x90
	.type	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EED0Ev,@function
_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EED0Ev: # @_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.cfi_startproc
# %bb.0:                                # %entry
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end175:
	.size	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EED0Ev, .Lfunc_end175-_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,"axG",@progbits,_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,comdat
	.weak	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv # -- Begin function _ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.p2align	4, 0x90
	.type	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,@function
_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv: # @_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.cfi_startproc
# %bb.0:                                # %entry
	movq	16(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB176_1
# %bb.2:                                # %delete.notnull
	movq	(%rdi), %rax
	jmpq	*8(%rax)                        # TAILCALL
.LBB176_1:                              # %delete.end
	retq
.Lfunc_end176:
	.size	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv, .Lfunc_end176-_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,"axG",@progbits,_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,comdat
	.weak	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv # -- Begin function _ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.p2align	4, 0x90
	.type	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,@function
_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv: # @_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_startproc
# %bb.0:                                # %entry
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end177:
	.size	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv, .Lfunc_end177-_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,"axG",@progbits,_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,comdat
	.weak	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info # -- Begin function _ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.p2align	4, 0x90
	.type	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,@function
_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info: # @_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.cfi_startproc
# %bb.0:                                # %entry
	xorl	%eax, %eax
	retq
.Lfunc_end178:
	.size	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info, .Lfunc_end178-_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal30ValuesInIteratorRangeGeneratorIdED2Ev,"axG",@progbits,_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdED2Ev,comdat
	.weak	_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdED2Ev # -- Begin function _ZN7testing8internal30ValuesInIteratorRangeGeneratorIdED2Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdED2Ev,@function
_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdED2Ev: # @_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorIdEE+16, (%rdi)
	movq	8(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB179_1
# %bb.2:                                # %if.then.i.i.i
	jmp	_ZdlPv                          # TAILCALL
.LBB179_1:                              # %_ZNSt6vectorIdSaIdEED2Ev.exit
	retq
.Lfunc_end179:
	.size	_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdED2Ev, .Lfunc_end179-_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal30ValuesInIteratorRangeGeneratorIdED0Ev,"axG",@progbits,_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdED0Ev,comdat
	.weak	_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdED0Ev # -- Begin function _ZN7testing8internal30ValuesInIteratorRangeGeneratorIdED0Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdED0Ev,@function
_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdED0Ev: # @_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdED0Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorIdEE+16, (%rdi)
	movq	8(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB180_2
# %bb.1:                                # %if.then.i.i.i.i
	callq	_ZdlPv
.LBB180_2:                              # %_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdED2Ev.exit
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end180:
	.size	_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdED0Ev, .Lfunc_end180-_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE5BeginEv,"axG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE5BeginEv,comdat
	.weak	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE5BeginEv # -- Begin function _ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE5BeginEv
	.p2align	4, 0x90
	.type	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE5BeginEv,@function
_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE5BeginEv: # @_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE5BeginEv
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movl	$32, %edi
	callq	_Znwm
	movq	8(%rbx), %rcx
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE+16, (%rax)
	movq	%rbx, 8(%rax)
	movq	%rcx, 16(%rax)
	movq	$0, 24(%rax)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end181:
	.size	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE5BeginEv, .Lfunc_end181-_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE5BeginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE3EndEv,"axG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE3EndEv,comdat
	.weak	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE3EndEv # -- Begin function _ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE3EndEv
	.p2align	4, 0x90
	.type	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE3EndEv,@function
_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE3EndEv: # @_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE3EndEv
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movl	$32, %edi
	callq	_Znwm
	movq	16(%rbx), %rcx
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE+16, (%rax)
	movq	%rbx, 8(%rax)
	movq	%rcx, 16(%rax)
	movq	$0, 24(%rax)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end182:
	.size	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE3EndEv, .Lfunc_end182-_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE3EndEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorD2Ev,"axG",@progbits,_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorD2Ev,comdat
	.weak	_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorD2Ev # -- Begin function _ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorD2Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorD2Ev,@function
_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorD2Ev: # @_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorD2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE+16, (%rdi)
	movq	24(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB183_2
# %bb.1:                                # %_ZNKSt14default_deleteIKdEclEPS0_.exit.i
	callq	_ZdlPv
.LBB183_2:                              # %_ZNSt10unique_ptrIKdSt14default_deleteIS0_EED2Ev.exit
	movq	$0, 24(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end183:
	.size	_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorD2Ev, .Lfunc_end183-_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorD0Ev,"axG",@progbits,_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorD0Ev,comdat
	.weak	_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorD0Ev # -- Begin function _ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorD0Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorD0Ev,@function
_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorD0Ev: # @_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorD0Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE+16, (%rdi)
	movq	24(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB184_2
# %bb.1:                                # %_ZNKSt14default_deleteIKdEclEPS0_.exit.i.i
	callq	_ZdlPv
.LBB184_2:                              # %_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorD2Ev.exit
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end184:
	.size	_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorD0Ev, .Lfunc_end184-_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorD0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator13BaseGeneratorEv,"axG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator13BaseGeneratorEv,comdat
	.weak	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator13BaseGeneratorEv # -- Begin function _ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator13BaseGeneratorEv
	.p2align	4, 0x90
	.type	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator13BaseGeneratorEv,@function
_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator13BaseGeneratorEv: # @_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator13BaseGeneratorEv
	.cfi_startproc
# %bb.0:                                # %entry
	movq	8(%rdi), %rax
	retq
.Lfunc_end185:
	.size	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator13BaseGeneratorEv, .Lfunc_end185-_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator13BaseGeneratorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator7AdvanceEv,"axG",@progbits,_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator7AdvanceEv,comdat
	.weak	_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator7AdvanceEv # -- Begin function _ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator7AdvanceEv
	.p2align	4, 0x90
	.type	_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator7AdvanceEv,@function
_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator7AdvanceEv: # @_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator7AdvanceEv
	.cfi_startproc
# %bb.0:                                # %entry
	movq	%rdi, %rax
	addq	$8, 16(%rdi)
	movq	24(%rdi), %rdi
	movq	$0, 24(%rax)
	testq	%rdi, %rdi
	je	.LBB186_1
# %bb.2:                                # %_ZNKSt14default_deleteIKdEclEPS0_.exit.i
	jmp	_ZdlPv                          # TAILCALL
.LBB186_1:                              # %_ZNSt10unique_ptrIKdSt14default_deleteIS0_EE5resetEPS0_.exit
	retq
.Lfunc_end186:
	.size	_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator7AdvanceEv, .Lfunc_end186-_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator7AdvanceEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator5CloneEv,"axG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator5CloneEv,comdat
	.weak	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator5CloneEv # -- Begin function _ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator5CloneEv
	.p2align	4, 0x90
	.type	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator5CloneEv,@function
_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator5CloneEv: # @_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator5CloneEv
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movl	$32, %edi
	callq	_Znwm
	movq	$_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE+16, (%rax)
	movq	8(%rbx), %rcx
	movq	%rcx, 8(%rax)
	movq	16(%rbx), %rcx
	movq	%rcx, 16(%rax)
	movq	$0, 24(%rax)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end187:
	.size	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator5CloneEv, .Lfunc_end187-_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator5CloneEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator7CurrentEv,"axG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator7CurrentEv,comdat
	.weak	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator7CurrentEv # -- Begin function _ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator7CurrentEv
	.p2align	4, 0x90
	.type	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator7CurrentEv,@function
_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator7CurrentEv: # @_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator7CurrentEv
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	24(%rdi), %rax
	testq	%rax, %rax
	je	.LBB188_1
# %bb.2:                                # %if.end
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB188_1:                              # %_ZNSt10unique_ptrIKdSt14default_deleteIS0_EE5resetEPS0_.exit
	.cfi_def_cfa_offset 16
	movq	%rdi, %rbx
	movl	$8, %edi
	callq	_Znwm
	movq	16(%rbx), %rcx
	movsd	(%rcx), %xmm0                   # xmm0 = mem[0],zero
	movsd	%xmm0, (%rax)
	movq	%rax, 24(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end188:
	.size	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator7CurrentEv, .Lfunc_end188-_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator7CurrentEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIdEE,"axG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIdEE,comdat
	.weak	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIdEE # -- Begin function _ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIdEE
	.p2align	4, 0x90
	.type	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIdEE,@function
_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIdEE: # @_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIdEE
.Lfunc_begin42:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception42
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r15
	movq	%rdi, %r14
	movq	(%rdi), %rax
	callq	*16(%rax)
	movq	%rax, %rbx
	movq	(%r15), %rax
	movq	%r15, %rdi
	callq	*16(%rax)
	xorl	%edi, %edi
	cmpq	%rax, %rbx
	sete	%dil
	callq	_ZN7testing8internal6IsTrueEb
	testb	%al, %al
	jne	.LBB189_14
# %bb.1:                                # %if.else
	leaq	8(%rsp), %rdi
	movl	$.L.str.8, %edx
	movl	$3, %esi
	movl	$340, %ecx                      # imm = 0x154
	callq	_ZN7testing8internal8GTestLogC1ENS0_16GTestLogSeverityEPKci
.Ltmp700:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.31, %esi
	movl	$59, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp701:
# %bb.2:                                # %invoke.cont
.Ltmp702:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.32, %esi
	movl	$43, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp703:
# %bb.3:                                # %invoke.cont8
.Ltmp704:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.33, %esi
	movl	$26, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp705:
# %bb.4:                                # %invoke.cont10
	movq	_ZSt4cerr(%rip), %rax
	movq	-24(%rax), %rax
	movq	_ZSt4cerr+240(%rax), %rbx
	testq	%rbx, %rbx
	je	.LBB189_5
# %bb.7:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	cmpb	$0, 56(%rbx)
	je	.LBB189_9
# %bb.8:                                # %if.then.i4.i.i
	movb	67(%rbx), %al
	jmp	.LBB189_11
.LBB189_9:                              # %if.end.i.i.i
.Ltmp706:
	movq	%rbx, %rdi
	callq	_ZNKSt5ctypeIcE13_M_widen_initEv
.Ltmp707:
# %bb.10:                               # %.noexc28
	movq	(%rbx), %rax
.Ltmp708:
	movq	%rbx, %rdi
	movl	$10, %esi
	callq	*48(%rax)
.Ltmp709:
.LBB189_11:                             # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp710:
	movsbl	%al, %esi
	movl	$_ZSt4cerr, %edi
	callq	_ZNSo3putEc
.Ltmp711:
# %bb.12:                               # %call1.i.noexc
.Ltmp712:
	movq	%rax, %rdi
	callq	_ZNSo5flushEv
.Ltmp713:
# %bb.13:                               # %invoke.cont12
	leaq	8(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
.LBB189_14:                             # %if.end
	movq	%r15, %rdi
	callq	_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorIdE8IteratorEKNS0_22ParamIteratorInterfaceIdEEEEPT_PT0_
	movq	16(%r14), %rcx
	cmpq	16(%rax), %rcx
	sete	%al
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB189_5:                              # %if.then.i.i.i
	.cfi_def_cfa_offset 48
.Ltmp714:
	callq	_ZSt16__throw_bad_castv
.Ltmp715:
# %bb.6:                                # %.noexc
.LBB189_15:                             # %lpad
.Ltmp716:
	movq	%rax, %rbx
	leaq	8(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end189:
	.size	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIdEE, .Lfunc_end189-_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIdEE
	.cfi_endproc
	.section	.gcc_except_table._ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIdEE,"aG",@progbits,_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIdEE,comdat
	.p2align	2
GCC_except_table189:
.Lexception42:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end42-.Lcst_begin42
.Lcst_begin42:
	.uleb128 .Lfunc_begin42-.Lfunc_begin42  # >> Call Site 1 <<
	.uleb128 .Ltmp700-.Lfunc_begin42        #   Call between .Lfunc_begin42 and .Ltmp700
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp700-.Lfunc_begin42        # >> Call Site 2 <<
	.uleb128 .Ltmp713-.Ltmp700              #   Call between .Ltmp700 and .Ltmp713
	.uleb128 .Ltmp716-.Lfunc_begin42        #     jumps to .Ltmp716
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp713-.Lfunc_begin42        # >> Call Site 3 <<
	.uleb128 .Ltmp714-.Ltmp713              #   Call between .Ltmp713 and .Ltmp714
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp714-.Lfunc_begin42        # >> Call Site 4 <<
	.uleb128 .Ltmp715-.Ltmp714              #   Call between .Ltmp714 and .Ltmp715
	.uleb128 .Ltmp716-.Lfunc_begin42        #     jumps to .Ltmp716
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp715-.Lfunc_begin42        # >> Call Site 5 <<
	.uleb128 .Lfunc_end189-.Ltmp715         #   Call between .Ltmp715 and .Lfunc_end189
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end42:
	.p2align	2
                                        # -- End function
	.section	.text._ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorIdE8IteratorEKNS0_22ParamIteratorInterfaceIdEEEEPT_PT0_,"axG",@progbits,_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorIdE8IteratorEKNS0_22ParamIteratorInterfaceIdEEEEPT_PT0_,comdat
	.weak	_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorIdE8IteratorEKNS0_22ParamIteratorInterfaceIdEEEEPT_PT0_ # -- Begin function _ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorIdE8IteratorEKNS0_22ParamIteratorInterfaceIdEEEEPT_PT0_
	.p2align	4, 0x90
	.type	_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorIdE8IteratorEKNS0_22ParamIteratorInterfaceIdEEEEPT_PT0_,@function
_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorIdE8IteratorEKNS0_22ParamIteratorInterfaceIdEEEEPT_PT0_: # @_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorIdE8IteratorEKNS0_22ParamIteratorInterfaceIdEEEEPT_PT0_
.Lfunc_begin43:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception43
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -16
	testq	%rdi, %rdi
	je	.LBB190_10
# %bb.1:                                # %typeid.end
	movq	%rdi, %rbx
	movq	(%rdi), %rax
	movq	-8(%rax), %rax
	movq	8(%rax), %rdi
	cmpq	$_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE, %rdi
	je	.LBB190_2
# %bb.3:                                # %lor.rhs.i
	cmpb	$42, (%rdi)
	jne	.LBB190_5
# %bb.4:
	xorl	%eax, %eax
	movzbl	%al, %edi
	callq	_ZN7testing8internal6IsTrueEb
	testb	%al, %al
	je	.LBB190_7
	jmp	.LBB190_9
.LBB190_2:
	movb	$1, %al
	movzbl	%al, %edi
	callq	_ZN7testing8internal6IsTrueEb
	testb	%al, %al
	je	.LBB190_7
	jmp	.LBB190_9
.LBB190_5:                              # %land.rhs.i
	movl	$_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE, %esi
	callq	strcmp
	testl	%eax, %eax
	sete	%al
	movzbl	%al, %edi
	callq	_ZN7testing8internal6IsTrueEb
	testb	%al, %al
	jne	.LBB190_9
.LBB190_7:                              # %if.else
	leaq	8(%rsp), %rdi
	movl	$.L.str.5, %edx
	movl	$3, %esi
	movl	$1114, %ecx                     # imm = 0x45A
	callq	_ZN7testing8internal8GTestLogC1ENS0_16GTestLogSeverityEPKci
.Ltmp717:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.6, %esi
	movl	$51, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp718:
# %bb.8:                                # %invoke.cont
	leaq	8(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
.LBB190_9:                              # %dynamic_cast.end
	movl	$_ZTIN7testing8internal22ParamIteratorInterfaceIdEE, %esi
	movl	$_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE, %edx
	movq	%rbx, %rdi
	xorl	%ecx, %ecx
	callq	__dynamic_cast
	addq	$16, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB190_10:                             # %typeid.bad_typeid
	.cfi_def_cfa_offset 32
	callq	__cxa_bad_typeid
.LBB190_11:                             # %lpad
.Ltmp719:
	movq	%rax, %rbx
	leaq	8(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end190:
	.size	_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorIdE8IteratorEKNS0_22ParamIteratorInterfaceIdEEEEPT_PT0_, .Lfunc_end190-_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorIdE8IteratorEKNS0_22ParamIteratorInterfaceIdEEEEPT_PT0_
	.cfi_endproc
	.section	.gcc_except_table._ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorIdE8IteratorEKNS0_22ParamIteratorInterfaceIdEEEEPT_PT0_,"aG",@progbits,_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_30ValuesInIteratorRangeGeneratorIdE8IteratorEKNS0_22ParamIteratorInterfaceIdEEEEPT_PT0_,comdat
	.p2align	2
GCC_except_table190:
.Lexception43:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end43-.Lcst_begin43
.Lcst_begin43:
	.uleb128 .Lfunc_begin43-.Lfunc_begin43  # >> Call Site 1 <<
	.uleb128 .Ltmp717-.Lfunc_begin43        #   Call between .Lfunc_begin43 and .Ltmp717
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp717-.Lfunc_begin43        # >> Call Site 2 <<
	.uleb128 .Ltmp718-.Ltmp717              #   Call between .Ltmp717 and .Ltmp718
	.uleb128 .Ltmp719-.Lfunc_begin43        #     jumps to .Ltmp719
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp718-.Lfunc_begin43        # >> Call Site 3 <<
	.uleb128 .Lfunc_end190-.Ltmp718         #   Call between .Ltmp718 and .Lfunc_end190
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end43:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EED0Ev,"axG",@progbits,_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EED0Ev,comdat
	.weak	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EED0Ev # -- Begin function _ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.p2align	4, 0x90
	.type	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EED0Ev,@function
_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EED0Ev: # @_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.cfi_startproc
# %bb.0:                                # %entry
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end191:
	.size	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EED0Ev, .Lfunc_end191-_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,"axG",@progbits,_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,comdat
	.weak	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv # -- Begin function _ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.p2align	4, 0x90
	.type	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,@function
_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv: # @_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.cfi_startproc
# %bb.0:                                # %entry
	movq	16(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB192_1
# %bb.2:                                # %delete.notnull
	movq	(%rdi), %rax
	jmpq	*8(%rax)                        # TAILCALL
.LBB192_1:                              # %delete.end
	retq
.Lfunc_end192:
	.size	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv, .Lfunc_end192-_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,"axG",@progbits,_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,comdat
	.weak	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv # -- Begin function _ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.p2align	4, 0x90
	.type	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,@function
_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv: # @_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_startproc
# %bb.0:                                # %entry
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end193:
	.size	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv, .Lfunc_end193-_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,"axG",@progbits,_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,comdat
	.weak	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info # -- Begin function _ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.p2align	4, 0x90
	.type	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,@function
_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info: # @_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.cfi_startproc
# %bb.0:                                # %entry
	xorl	%eax, %eax
	retq
.Lfunc_end194:
	.size	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info, .Lfunc_end194-_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5tupleIJN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2ERKSD_,"axG",@progbits,_ZNSt5tupleIJN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2ERKSD_,comdat
	.weak	_ZNSt5tupleIJN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2ERKSD_ # -- Begin function _ZNSt5tupleIJN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2ERKSD_
	.p2align	4, 0x90
	.type	_ZNSt5tupleIJN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2ERKSD_,@function
_ZNSt5tupleIJN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2ERKSD_: # @_ZNSt5tupleIJN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2ERKSD_
	.cfi_startproc
# %bb.0:                                # %entry
	movq	(%rsi), %rax
	movq	%rax, (%rdi)
	movq	8(%rsi), %rax
	movq	%rax, 8(%rdi)
	testq	%rax, %rax
	je	.LBB195_4
# %bb.1:                                # %if.then.i.i.i.i.i.i.i.i.i
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB195_3
# %bb.2:                                # %if.then.i.i.i.i.i.i.i.i.i.i.i
	lock		addl	$1, 8(%rax)
	jmp	.LBB195_4
.LBB195_3:                              # %if.else.i.i.i.i.i.i.i.i.i.i.i
	addl	$1, 8(%rax)
.LBB195_4:                              # %_ZNSt11_Tuple_implILm4EJN7testing8internal14ParamGeneratorIdEEEEC2ERKS4_.exit.i.i.i
	movq	16(%rsi), %rax
	movq	%rax, 16(%rdi)
	movq	24(%rsi), %rax
	movq	%rax, 24(%rdi)
	testq	%rax, %rax
	je	.LBB195_8
# %bb.5:                                # %if.then.i.i.i.i.i.i.i.i2
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB195_7
# %bb.6:                                # %if.then.i.i.i.i.i.i.i.i.i.i
	lock		addl	$1, 8(%rax)
	jmp	.LBB195_8
.LBB195_7:                              # %if.else.i.i.i.i.i.i.i.i.i.i
	addl	$1, 8(%rax)
.LBB195_8:                              # %_ZNSt11_Tuple_implILm3EJN7testing8internal14ParamGeneratorIdEES3_EEC2ERKS4_.exit.i.i
	movq	32(%rsi), %rax
	movq	%rax, 32(%rdi)
	movq	40(%rsi), %rax
	movq	%rax, 40(%rdi)
	testq	%rax, %rax
	je	.LBB195_12
# %bb.9:                                # %if.then.i.i.i.i.i.i.i
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB195_11
# %bb.10:                               # %if.then.i.i.i.i.i.i.i4.i.i
	lock		addl	$1, 8(%rax)
	jmp	.LBB195_12
.LBB195_11:                             # %if.else.i.i.i.i.i.i.i.i.i
	addl	$1, 8(%rax)
.LBB195_12:                             # %_ZNSt11_Tuple_implILm2EJN7testing8internal14ParamGeneratorISt5tupleIJlllEEEENS2_IdEES6_EEC2ERKS7_.exit.i
	movq	48(%rsi), %rax
	movq	%rax, 48(%rdi)
	movq	56(%rsi), %rax
	movq	%rax, 56(%rdi)
	testq	%rax, %rax
	je	.LBB195_16
# %bb.13:                               # %if.then.i.i.i.i.i.i9
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB195_15
# %bb.14:                               # %if.then.i.i.i.i.i.i.i4.i
	lock		addl	$1, 8(%rax)
	jmp	.LBB195_16
.LBB195_15:                             # %if.else.i.i.i.i.i.i.i.i11
	addl	$1, 8(%rax)
.LBB195_16:                             # %_ZNSt11_Tuple_implILm1EJN7testing8internal14ParamGeneratorISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEES9_EEC2ERKSA_.exit
	movq	64(%rsi), %rax
	movq	%rax, 64(%rdi)
	movq	72(%rsi), %rax
	movq	%rax, 72(%rdi)
	testq	%rax, %rax
	je	.LBB195_20
# %bb.17:                               # %if.then.i.i.i.i.i.i
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB195_19
# %bb.18:                               # %if.then.i.i.i.i.i.i.i.i
	lock		addl	$1, 8(%rax)
	retq
.LBB195_19:                             # %if.else.i.i.i.i.i.i.i.i
	addl	$1, 8(%rax)
.LBB195_20:                             # %_ZNSt11_Tuple_implILm0EJN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EEC2ERKSE_.exit
	retq
.Lfunc_end195:
	.size	_ZNSt5tupleIJN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2ERKSD_, .Lfunc_end195-_ZNSt5tupleIJN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2ERKSD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev,"axG",@progbits,_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev,comdat
	.weak	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev # -- Begin function _ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev,@function
_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev: # @_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %rbx
	movq	$_ZTVN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE+16, (%rdi)
	movq	80(%rdi), %r14
	testq	%r14, %r14
	je	.LBB196_10
# %bb.1:                                # %if.then.i.i.i.i.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB196_3
# %bb.2:                                # %if.then.i.i.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%r14)
	cmpl	$1, %eax
	je	.LBB196_5
	jmp	.LBB196_10
.LBB196_3:                              # %if.else.i.i.i.i.i.i.i
	movl	8(%r14), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%r14)
	cmpl	$1, %eax
	jne	.LBB196_10
.LBB196_5:                              # %if.then.i.i.i.i.i.i
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB196_7
# %bb.6:                                # %if.then.i9.i.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%r14)
	cmpl	$1, %eax
	je	.LBB196_9
	jmp	.LBB196_10
.LBB196_7:                              # %if.else.i11.i.i.i.i.i.i
	movl	12(%r14), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%r14)
	cmpl	$1, %eax
	jne	.LBB196_10
.LBB196_9:                              # %if.then5.i.i.i.i.i.i
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*24(%rax)
.LBB196_10:                             # %_ZNSt11_Tuple_implILm0EJN7testing8internal14ParamGeneratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev.exit
	addq	$8, %rbx
	movq	%rbx, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	_ZNSt11_Tuple_implILm1EJN7testing8internal14ParamGeneratorISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEES9_EED2Ev # TAILCALL
.Lfunc_end196:
	.size	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev, .Lfunc_end196-_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED0Ev,"axG",@progbits,_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED0Ev,comdat
	.weak	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED0Ev # -- Begin function _ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED0Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED0Ev,@function
_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED0Ev: # @_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED0Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %rbx
	movq	$_ZTVN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE+16, (%rdi)
	movq	80(%rdi), %r14
	testq	%r14, %r14
	je	.LBB197_10
# %bb.1:                                # %if.then.i.i.i.i.i.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB197_3
# %bb.2:                                # %if.then.i.i.i.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%r14)
	cmpl	$1, %eax
	je	.LBB197_5
	jmp	.LBB197_10
.LBB197_3:                              # %if.else.i.i.i.i.i.i.i.i
	movl	8(%r14), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%r14)
	cmpl	$1, %eax
	jne	.LBB197_10
.LBB197_5:                              # %if.then.i.i.i.i.i.i.i
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB197_7
# %bb.6:                                # %if.then.i9.i.i.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%r14)
	cmpl	$1, %eax
	je	.LBB197_9
	jmp	.LBB197_10
.LBB197_7:                              # %if.else.i11.i.i.i.i.i.i.i
	movl	12(%r14), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%r14)
	cmpl	$1, %eax
	jne	.LBB197_10
.LBB197_9:                              # %if.then5.i.i.i.i.i.i.i
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*24(%rax)
.LBB197_10:                             # %_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev.exit
	leaq	8(%rbx), %rdi
	callq	_ZNSt11_Tuple_implILm1EJN7testing8internal14ParamGeneratorISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEES9_EED2Ev
	movq	%rbx, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end197:
	.size	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED0Ev, .Lfunc_end197-_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE5BeginEv,"axG",@progbits,_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE5BeginEv,comdat
	.weak	_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE5BeginEv # -- Begin function _ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE5BeginEv
	.p2align	4, 0x90
	.type	_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE5BeginEv,@function
_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE5BeginEv: # @_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE5BeginEv
.Lfunc_begin44:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception44
# %bb.0:                                # %entry
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %rbx
	movl	$152, %edi
	callq	_Znwm
	movq	%rax, %r14
	leaq	8(%rbx), %rdx
.Ltmp720:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	xorl	%ecx, %ecx
	callq	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEC2EPKNS0_23ParamGeneratorInterfaceIS7_IJS4_S6_S8_ddEEEERKS7_IJNS0_14ParamGeneratorIS4_EENSJ_IS6_EENSJ_IS8_EENSJ_IdEESN_EEb
.Ltmp721:
# %bb.1:                                # %invoke.cont
	movq	%r14, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB198_2:                              # %lpad
	.cfi_def_cfa_offset 32
.Ltmp722:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	_ZdlPv
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end198:
	.size	_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE5BeginEv, .Lfunc_end198-_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE5BeginEv
	.cfi_endproc
	.section	.gcc_except_table._ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE5BeginEv,"aG",@progbits,_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE5BeginEv,comdat
	.p2align	2
GCC_except_table198:
.Lexception44:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end44-.Lcst_begin44
.Lcst_begin44:
	.uleb128 .Lfunc_begin44-.Lfunc_begin44  # >> Call Site 1 <<
	.uleb128 .Ltmp720-.Lfunc_begin44        #   Call between .Lfunc_begin44 and .Ltmp720
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp720-.Lfunc_begin44        # >> Call Site 2 <<
	.uleb128 .Ltmp721-.Ltmp720              #   Call between .Ltmp720 and .Ltmp721
	.uleb128 .Ltmp722-.Lfunc_begin44        #     jumps to .Ltmp722
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp721-.Lfunc_begin44        # >> Call Site 3 <<
	.uleb128 .Lfunc_end198-.Ltmp721         #   Call between .Ltmp721 and .Lfunc_end198
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end44:
	.p2align	2
                                        # -- End function
	.section	.text._ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE3EndEv,"axG",@progbits,_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE3EndEv,comdat
	.weak	_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE3EndEv # -- Begin function _ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE3EndEv
	.p2align	4, 0x90
	.type	_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE3EndEv,@function
_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE3EndEv: # @_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE3EndEv
.Lfunc_begin45:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception45
# %bb.0:                                # %entry
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %rbx
	movl	$152, %edi
	callq	_Znwm
	movq	%rax, %r14
	leaq	8(%rbx), %rdx
.Ltmp723:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	movl	$1, %ecx
	callq	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEC2EPKNS0_23ParamGeneratorInterfaceIS7_IJS4_S6_S8_ddEEEERKS7_IJNS0_14ParamGeneratorIS4_EENSJ_IS6_EENSJ_IS8_EENSJ_IdEESN_EEb
.Ltmp724:
# %bb.1:                                # %invoke.cont
	movq	%r14, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB199_2:                              # %lpad
	.cfi_def_cfa_offset 32
.Ltmp725:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	_ZdlPv
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end199:
	.size	_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE3EndEv, .Lfunc_end199-_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE3EndEv
	.cfi_endproc
	.section	.gcc_except_table._ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE3EndEv,"aG",@progbits,_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE3EndEv,comdat
	.p2align	2
GCC_except_table199:
.Lexception45:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end45-.Lcst_begin45
.Lcst_begin45:
	.uleb128 .Lfunc_begin45-.Lfunc_begin45  # >> Call Site 1 <<
	.uleb128 .Ltmp723-.Lfunc_begin45        #   Call between .Lfunc_begin45 and .Ltmp723
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp723-.Lfunc_begin45        # >> Call Site 2 <<
	.uleb128 .Ltmp724-.Ltmp723              #   Call between .Ltmp723 and .Ltmp724
	.uleb128 .Ltmp725-.Lfunc_begin45        #     jumps to .Ltmp725
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp724-.Lfunc_begin45        # >> Call Site 3 <<
	.uleb128 .Lfunc_end199-.Ltmp724         #   Call between .Ltmp724 and .Lfunc_end199
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end45:
	.p2align	2
                                        # -- End function
	.section	.text._ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEC2EPKNS0_23ParamGeneratorInterfaceIS7_IJS4_S6_S8_ddEEEERKS7_IJNS0_14ParamGeneratorIS4_EENSJ_IS6_EENSJ_IS8_EENSJ_IdEESN_EEb,"axG",@progbits,_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEC2EPKNS0_23ParamGeneratorInterfaceIS7_IJS4_S6_S8_ddEEEERKS7_IJNS0_14ParamGeneratorIS4_EENSJ_IS6_EENSJ_IS8_EENSJ_IdEESN_EEb,comdat
	.weak	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEC2EPKNS0_23ParamGeneratorInterfaceIS7_IJS4_S6_S8_ddEEEERKS7_IJNS0_14ParamGeneratorIS4_EENSJ_IS6_EENSJ_IS8_EENSJ_IdEESN_EEb # -- Begin function _ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEC2EPKNS0_23ParamGeneratorInterfaceIS7_IJS4_S6_S8_ddEEEERKS7_IJNS0_14ParamGeneratorIS4_EENSJ_IS6_EENSJ_IS8_EENSJ_IdEESN_EEb
	.p2align	4, 0x90
	.type	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEC2EPKNS0_23ParamGeneratorInterfaceIS7_IJS4_S6_S8_ddEEEERKS7_IJNS0_14ParamGeneratorIS4_EENSJ_IS6_EENSJ_IS8_EENSJ_IdEESN_EEb,@function
_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEC2EPKNS0_23ParamGeneratorInterfaceIS7_IJS4_S6_S8_ddEEEERKS7_IJNS0_14ParamGeneratorIS4_EENSJ_IS6_EENSJ_IS8_EENSJ_IdEESN_EEb: # @_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEC2EPKNS0_23ParamGeneratorInterfaceIS7_IJS4_S6_S8_ddEEEERKS7_IJNS0_14ParamGeneratorIS4_EENSJ_IS6_EENSJ_IS8_EENSJ_IdEESN_EEb
.Lfunc_begin46:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception46
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$48, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%ecx, %r15d
	movq	%rdx, %rbp
	movq	%rdi, %rbx
	movq	$_ZTVN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE+16, (%rdi)
	movq	%rsi, 8(%rdi)
	movq	64(%rdx), %rdi
	movq	(%rdi), %rax
.Ltmp726:
	callq	*16(%rax)
.Ltmp727:
# %bb.1:                                # %invoke.cont
	movq	%rax, 40(%rsp)
	movq	48(%rbp), %rdi
	movq	(%rdi), %rax
.Ltmp729:
	callq	*16(%rax)
.Ltmp730:
# %bb.2:                                # %invoke.cont5
	movq	%rax, 32(%rsp)
	movq	32(%rbp), %rdi
	movq	(%rdi), %rax
.Ltmp732:
	callq	*16(%rax)
.Ltmp733:
# %bb.3:                                # %invoke.cont9
	movq	%rax, 24(%rsp)
	movq	16(%rbp), %rdi
	movq	(%rdi), %rax
.Ltmp735:
	callq	*16(%rax)
.Ltmp736:
# %bb.4:                                # %invoke.cont13
	movq	%rax, 16(%rsp)
	movq	(%rbp), %rdi
	movq	(%rdi), %rax
.Ltmp738:
	callq	*16(%rax)
.Ltmp739:
# %bb.5:                                # %invoke.cont17
	leaq	16(%rbx), %r14
	movq	%rax, 8(%rsp)
.Ltmp741:
	leaq	40(%rsp), %rsi
	leaq	32(%rsp), %rdx
	leaq	24(%rsp), %rcx
	leaq	16(%rsp), %r8
	leaq	8(%rsp), %r9
	movq	%r14, %rdi
	callq	_ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2IJS6_S9_SB_SC_SC_ELb1EEEDpOT_
.Ltmp742:
# %bb.6:                                # %invoke.cont19
	movq	8(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB200_8
# %bb.7:                                # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceIdEEEclEPS3_.exit.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB200_8:                              # %_ZN7testing8internal13ParamIteratorIdED2Ev.exit
	movq	16(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB200_10
# %bb.9:                                # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceIdEEEclEPS3_.exit.i.i126
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB200_10:                             # %_ZN7testing8internal13ParamIteratorIdED2Ev.exit127
	movq	24(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB200_12
# %bb.11:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEEEclEPS5_.exit.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB200_12:                             # %_ZN7testing8internal13ParamIteratorISt5tupleIJlllEEED2Ev.exit
	movq	32(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB200_14
# %bb.13:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt4pairIllEEEEclEPS5_.exit.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB200_14:                             # %_ZN7testing8internal13ParamIteratorISt4pairIllEED2Ev.exit
	movq	40(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB200_16
# %bb.15:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEEEclEPS6_.exit.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB200_16:                             # %_ZN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEED2Ev.exit
	movq	64(%rbp), %rdi
	movq	(%rdi), %rax
.Ltmp744:
	callq	*24(%rax)
.Ltmp745:
# %bb.17:                               # %invoke.cont31
	movq	%rax, 40(%rsp)
	movq	48(%rbp), %rdi
	movq	(%rdi), %rax
.Ltmp747:
	callq	*24(%rax)
.Ltmp748:
# %bb.18:                               # %invoke.cont35
	movq	%rax, 32(%rsp)
	movq	32(%rbp), %rdi
	movq	(%rdi), %rax
.Ltmp750:
	callq	*24(%rax)
.Ltmp751:
# %bb.19:                               # %invoke.cont39
	movq	%rax, 24(%rsp)
	movq	16(%rbp), %rdi
	movq	(%rdi), %rax
.Ltmp753:
	callq	*24(%rax)
.Ltmp754:
# %bb.20:                               # %invoke.cont43
	movq	%rax, 16(%rsp)
	movq	(%rbp), %rdi
	movq	(%rdi), %rax
.Ltmp756:
	callq	*24(%rax)
.Ltmp757:
# %bb.21:                               # %invoke.cont47
	leaq	56(%rbx), %r12
	movq	%rax, 8(%rsp)
.Ltmp759:
	leaq	40(%rsp), %rsi
	leaq	32(%rsp), %rdx
	leaq	24(%rsp), %rcx
	leaq	16(%rsp), %r8
	leaq	8(%rsp), %r9
	movq	%r12, %rdi
	callq	_ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2IJS6_S9_SB_SC_SC_ELb1EEEDpOT_
.Ltmp760:
# %bb.22:                               # %invoke.cont49
	movq	8(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB200_24
# %bb.23:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceIdEEEclEPS3_.exit.i.i175
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB200_24:                             # %_ZN7testing8internal13ParamIteratorIdED2Ev.exit176
	movq	16(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB200_26
# %bb.25:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceIdEEEclEPS3_.exit.i.i181
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB200_26:                             # %_ZN7testing8internal13ParamIteratorIdED2Ev.exit182
	movq	24(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB200_28
# %bb.27:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEEEclEPS5_.exit.i.i187
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB200_28:                             # %_ZN7testing8internal13ParamIteratorISt5tupleIJlllEEED2Ev.exit188
	movq	32(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB200_30
# %bb.29:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt4pairIllEEEEclEPS5_.exit.i.i193
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB200_30:                             # %_ZN7testing8internal13ParamIteratorISt4pairIllEED2Ev.exit194
	movq	40(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB200_32
# %bb.31:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEEEclEPS6_.exit.i.i199
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB200_32:                             # %_ZN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEED2Ev.exit200
	leaq	96(%rbx), %rbp
	testb	%r15b, %r15b
	movq	%r14, %rsi
	cmovneq	%r12, %rsi
.Ltmp762:
	movq	%rbp, %rdi
	callq	_ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2ERKSD_
.Ltmp763:
# %bb.33:                               # %invoke.cont63
	xorps	%xmm0, %xmm0
	movups	%xmm0, 136(%rbx)
.Ltmp765:
	movq	%rbx, %rdi
	callq	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE19ComputeCurrentValueEv
.Ltmp766:
# %bb.34:                               # %invoke.cont65
	addq	$48, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB200_66:                             # %lpad64
	.cfi_def_cfa_offset 96
.Ltmp767:
	movq	%rax, %r15
	addq	$144, %rbx
	movq	%rbx, %rdi
	callq	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev
	movq	%rbp, %rdi
	callq	_ZNSt11_Tuple_implILm0EJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev
	jmp	.LBB200_67
.LBB200_65:                             # %lpad62
.Ltmp764:
	movq	%rax, %r15
.LBB200_67:                             # %ehcleanup68
	movq	%r12, %rdi
	callq	_ZNSt11_Tuple_implILm0EJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev
	jmp	.LBB200_68
.LBB200_55:                             # %lpad48
.Ltmp761:
	movq	%rax, %r15
	movq	8(%rsp), %rdi
	testq	%rdi, %rdi
	jne	.LBB200_56
# %bb.57:                               # %ehcleanup51
	movq	16(%rsp), %rdi
	testq	%rdi, %rdi
	jne	.LBB200_58
.LBB200_59:                             # %ehcleanup53
	movq	24(%rsp), %rdi
	testq	%rdi, %rdi
	jne	.LBB200_60
.LBB200_61:                             # %ehcleanup55
	movq	32(%rsp), %rdi
	testq	%rdi, %rdi
	jne	.LBB200_62
.LBB200_63:                             # %ehcleanup57
	movq	40(%rsp), %rdi
	testq	%rdi, %rdi
	jne	.LBB200_64
	jmp	.LBB200_68
.LBB200_56:                             # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceIdEEEclEPS3_.exit.i.i235
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	16(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB200_59
	jmp	.LBB200_58
.LBB200_54:                             # %lpad46
.Ltmp758:
	movq	%rax, %r15
	movq	16(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB200_59
.LBB200_58:                             # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceIdEEEclEPS3_.exit.i.i241
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	24(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB200_61
	jmp	.LBB200_60
.LBB200_53:                             # %lpad42
.Ltmp755:
	movq	%rax, %r15
	movq	24(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB200_61
.LBB200_60:                             # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEEEclEPS5_.exit.i.i247
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	32(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB200_63
	jmp	.LBB200_62
.LBB200_52:                             # %lpad38
.Ltmp752:
	movq	%rax, %r15
	movq	32(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB200_63
.LBB200_62:                             # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt4pairIllEEEEclEPS5_.exit.i.i253
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	40(%rsp), %rdi
	testq	%rdi, %rdi
	jne	.LBB200_64
	jmp	.LBB200_68
.LBB200_51:                             # %lpad34
.Ltmp749:
	movq	%rax, %r15
	movq	40(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB200_68
.LBB200_64:                             # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEEEclEPS6_.exit.i.i259
	movq	(%rdi), %rax
	callq	*8(%rax)
	jmp	.LBB200_68
.LBB200_50:                             # %lpad30
.Ltmp746:
	movq	%rax, %r15
.LBB200_68:                             # %ehcleanup69
	movq	%r14, %rdi
	callq	_ZNSt11_Tuple_implILm0EJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev
	jmp	.LBB200_69
.LBB200_40:                             # %lpad18
.Ltmp743:
	movq	%rax, %r15
	movq	8(%rsp), %rdi
	testq	%rdi, %rdi
	jne	.LBB200_41
# %bb.42:                               # %ehcleanup
	movq	16(%rsp), %rdi
	testq	%rdi, %rdi
	jne	.LBB200_43
.LBB200_44:                             # %ehcleanup21
	movq	24(%rsp), %rdi
	testq	%rdi, %rdi
	jne	.LBB200_45
.LBB200_46:                             # %ehcleanup23
	movq	32(%rsp), %rdi
	testq	%rdi, %rdi
	jne	.LBB200_47
.LBB200_48:                             # %ehcleanup25
	movq	40(%rsp), %rdi
	testq	%rdi, %rdi
	jne	.LBB200_49
.LBB200_69:                             # %ehcleanup70
	movq	%r15, %rdi
	callq	_Unwind_Resume@PLT
.LBB200_41:                             # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceIdEEEclEPS3_.exit.i.i205
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	16(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB200_44
	jmp	.LBB200_43
.LBB200_39:                             # %lpad16
.Ltmp740:
	movq	%rax, %r15
	movq	16(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB200_44
.LBB200_43:                             # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceIdEEEclEPS3_.exit.i.i211
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	24(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB200_46
	jmp	.LBB200_45
.LBB200_38:                             # %lpad12
.Ltmp737:
	movq	%rax, %r15
	movq	24(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB200_46
.LBB200_45:                             # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEEEclEPS5_.exit.i.i217
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	32(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB200_48
	jmp	.LBB200_47
.LBB200_37:                             # %lpad8
.Ltmp734:
	movq	%rax, %r15
	movq	32(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB200_48
.LBB200_47:                             # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt4pairIllEEEEclEPS5_.exit.i.i223
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	40(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB200_69
.LBB200_49:                             # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEEEclEPS6_.exit.i.i229
	movq	(%rdi), %rax
	callq	*8(%rax)
	movq	%r15, %rdi
	callq	_Unwind_Resume@PLT
.LBB200_36:                             # %lpad4
.Ltmp731:
	movq	%rax, %r15
	movq	40(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB200_69
	jmp	.LBB200_49
.LBB200_35:                             # %lpad
.Ltmp728:
	movq	%rax, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end200:
	.size	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEC2EPKNS0_23ParamGeneratorInterfaceIS7_IJS4_S6_S8_ddEEEERKS7_IJNS0_14ParamGeneratorIS4_EENSJ_IS6_EENSJ_IS8_EENSJ_IdEESN_EEb, .Lfunc_end200-_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEC2EPKNS0_23ParamGeneratorInterfaceIS7_IJS4_S6_S8_ddEEEERKS7_IJNS0_14ParamGeneratorIS4_EENSJ_IS6_EENSJ_IS8_EENSJ_IdEESN_EEb
	.cfi_endproc
	.section	.gcc_except_table._ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEC2EPKNS0_23ParamGeneratorInterfaceIS7_IJS4_S6_S8_ddEEEERKS7_IJNS0_14ParamGeneratorIS4_EENSJ_IS6_EENSJ_IS8_EENSJ_IdEESN_EEb,"aG",@progbits,_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEC2EPKNS0_23ParamGeneratorInterfaceIS7_IJS4_S6_S8_ddEEEERKS7_IJNS0_14ParamGeneratorIS4_EENSJ_IS6_EENSJ_IS8_EENSJ_IdEESN_EEb,comdat
	.p2align	2
GCC_except_table200:
.Lexception46:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end46-.Lcst_begin46
.Lcst_begin46:
	.uleb128 .Ltmp726-.Lfunc_begin46        # >> Call Site 1 <<
	.uleb128 .Ltmp727-.Ltmp726              #   Call between .Ltmp726 and .Ltmp727
	.uleb128 .Ltmp728-.Lfunc_begin46        #     jumps to .Ltmp728
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp729-.Lfunc_begin46        # >> Call Site 2 <<
	.uleb128 .Ltmp730-.Ltmp729              #   Call between .Ltmp729 and .Ltmp730
	.uleb128 .Ltmp731-.Lfunc_begin46        #     jumps to .Ltmp731
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp732-.Lfunc_begin46        # >> Call Site 3 <<
	.uleb128 .Ltmp733-.Ltmp732              #   Call between .Ltmp732 and .Ltmp733
	.uleb128 .Ltmp734-.Lfunc_begin46        #     jumps to .Ltmp734
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp735-.Lfunc_begin46        # >> Call Site 4 <<
	.uleb128 .Ltmp736-.Ltmp735              #   Call between .Ltmp735 and .Ltmp736
	.uleb128 .Ltmp737-.Lfunc_begin46        #     jumps to .Ltmp737
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp738-.Lfunc_begin46        # >> Call Site 5 <<
	.uleb128 .Ltmp739-.Ltmp738              #   Call between .Ltmp738 and .Ltmp739
	.uleb128 .Ltmp740-.Lfunc_begin46        #     jumps to .Ltmp740
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp741-.Lfunc_begin46        # >> Call Site 6 <<
	.uleb128 .Ltmp742-.Ltmp741              #   Call between .Ltmp741 and .Ltmp742
	.uleb128 .Ltmp743-.Lfunc_begin46        #     jumps to .Ltmp743
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp742-.Lfunc_begin46        # >> Call Site 7 <<
	.uleb128 .Ltmp744-.Ltmp742              #   Call between .Ltmp742 and .Ltmp744
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp744-.Lfunc_begin46        # >> Call Site 8 <<
	.uleb128 .Ltmp745-.Ltmp744              #   Call between .Ltmp744 and .Ltmp745
	.uleb128 .Ltmp746-.Lfunc_begin46        #     jumps to .Ltmp746
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp747-.Lfunc_begin46        # >> Call Site 9 <<
	.uleb128 .Ltmp748-.Ltmp747              #   Call between .Ltmp747 and .Ltmp748
	.uleb128 .Ltmp749-.Lfunc_begin46        #     jumps to .Ltmp749
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp750-.Lfunc_begin46        # >> Call Site 10 <<
	.uleb128 .Ltmp751-.Ltmp750              #   Call between .Ltmp750 and .Ltmp751
	.uleb128 .Ltmp752-.Lfunc_begin46        #     jumps to .Ltmp752
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp753-.Lfunc_begin46        # >> Call Site 11 <<
	.uleb128 .Ltmp754-.Ltmp753              #   Call between .Ltmp753 and .Ltmp754
	.uleb128 .Ltmp755-.Lfunc_begin46        #     jumps to .Ltmp755
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp756-.Lfunc_begin46        # >> Call Site 12 <<
	.uleb128 .Ltmp757-.Ltmp756              #   Call between .Ltmp756 and .Ltmp757
	.uleb128 .Ltmp758-.Lfunc_begin46        #     jumps to .Ltmp758
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp759-.Lfunc_begin46        # >> Call Site 13 <<
	.uleb128 .Ltmp760-.Ltmp759              #   Call between .Ltmp759 and .Ltmp760
	.uleb128 .Ltmp761-.Lfunc_begin46        #     jumps to .Ltmp761
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp760-.Lfunc_begin46        # >> Call Site 14 <<
	.uleb128 .Ltmp762-.Ltmp760              #   Call between .Ltmp760 and .Ltmp762
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp762-.Lfunc_begin46        # >> Call Site 15 <<
	.uleb128 .Ltmp763-.Ltmp762              #   Call between .Ltmp762 and .Ltmp763
	.uleb128 .Ltmp764-.Lfunc_begin46        #     jumps to .Ltmp764
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp765-.Lfunc_begin46        # >> Call Site 16 <<
	.uleb128 .Ltmp766-.Ltmp765              #   Call between .Ltmp765 and .Ltmp766
	.uleb128 .Ltmp767-.Lfunc_begin46        #     jumps to .Ltmp767
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp766-.Lfunc_begin46        # >> Call Site 17 <<
	.uleb128 .Lfunc_end200-.Ltmp766         #   Call between .Ltmp766 and .Lfunc_end200
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end46:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2IJS6_S9_SB_SC_SC_ELb1EEEDpOT_,"axG",@progbits,_ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2IJS6_S9_SB_SC_SC_ELb1EEEDpOT_,comdat
	.weak	_ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2IJS6_S9_SB_SC_SC_ELb1EEEDpOT_ # -- Begin function _ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2IJS6_S9_SB_SC_SC_ELb1EEEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2IJS6_S9_SB_SC_SC_ELb1EEEDpOT_,@function
_ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2IJS6_S9_SB_SC_SC_ELb1EEEDpOT_: # @_ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2IJS6_S9_SB_SC_SC_ELb1EEEDpOT_
.Lfunc_begin47:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception47
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%r8, %rbx
	movq	%rcx, %r13
	movq	%rdx, %r12
	movq	%rsi, %r14
	movq	%rdi, %r15
	movq	(%r9), %rdi
	movq	(%rdi), %rax
	callq	*32(%rax)
	movq	%rax, (%r15)
	movq	(%rbx), %rdi
	movq	(%rdi), %rax
.Ltmp768:
	callq	*32(%rax)
.Ltmp769:
# %bb.1:                                # %_ZNSt11_Tuple_implILm3EJN7testing8internal13ParamIteratorIdEES3_EEC2IS3_JS3_EvEEOT_DpOT0_.exit.i.i
	movq	%rax, 8(%r15)
	movq	(%r13), %rdi
	movq	(%rdi), %rax
.Ltmp771:
	callq	*32(%rax)
.Ltmp772:
# %bb.2:                                # %_ZNSt11_Tuple_implILm2EJN7testing8internal13ParamIteratorISt5tupleIJlllEEEENS2_IdEES6_EEC2IS5_JS6_S6_EvEEOT_DpOT0_.exit.i
	movq	%rax, 16(%r15)
	movq	(%r12), %rdi
	movq	(%rdi), %rax
.Ltmp774:
	callq	*32(%rax)
.Ltmp775:
# %bb.3:                                # %_ZNSt11_Tuple_implILm1EJN7testing8internal13ParamIteratorISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEES9_EEC2IS5_JS8_S9_S9_EvEEOT_DpOT0_.exit
	movq	%rax, 24(%r15)
	movq	(%r14), %rdi
	movq	(%rdi), %rax
.Ltmp777:
	callq	*32(%rax)
.Ltmp778:
# %bb.4:                                # %_ZNSt11_Tuple_implILm0EJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EEC2IS6_JS9_SC_SD_SD_EvEEOT_DpOT0_.exit
	movq	%rax, 32(%r15)
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB201_8:                              # %lpad.i
	.cfi_def_cfa_offset 48
.Ltmp779:
	movq	%rax, %r14
	movq	24(%r15), %rdi
	testq	%rdi, %rdi
	je	.LBB201_10
# %bb.9:                                # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt4pairIllEEEEclEPS5_.exit.i.i.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB201_10:                             # %_ZNSt10_Head_baseILm1EN7testing8internal13ParamIteratorISt4pairIllEEELb0EED2Ev.exit.i
	movq	$0, 24(%r15)
	jmp	.LBB201_11
.LBB201_7:                              # %lpad.i28
.Ltmp776:
	movq	%rax, %r14
.LBB201_11:                             # %_ZNSt10_Head_baseILm1EN7testing8internal13ParamIteratorISt4pairIllEEELb0EED2Ev.exit.i
	movq	16(%r15), %rdi
	testq	%rdi, %rdi
	je	.LBB201_13
# %bb.12:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEEEclEPS5_.exit.i.i.i.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB201_13:                             # %_ZNSt10_Head_baseILm2EN7testing8internal13ParamIteratorISt5tupleIJlllEEEELb0EED2Ev.exit.i.i
	movq	$0, 16(%r15)
	jmp	.LBB201_14
.LBB201_6:                              # %lpad.i.i
.Ltmp773:
	movq	%rax, %r14
.LBB201_14:                             # %_ZNSt10_Head_baseILm2EN7testing8internal13ParamIteratorISt5tupleIJlllEEEELb0EED2Ev.exit.i.i
	movq	8(%r15), %rdi
	testq	%rdi, %rdi
	je	.LBB201_16
# %bb.15:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceIdEEEclEPS3_.exit.i.i.i.i.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB201_16:                             # %_ZNSt10_Head_baseILm3EN7testing8internal13ParamIteratorIdEELb0EED2Ev.exit.i.i.i
	movq	$0, 8(%r15)
	jmp	.LBB201_17
.LBB201_5:                              # %lpad.i.i.i
.Ltmp770:
	movq	%rax, %r14
.LBB201_17:                             # %_ZNSt10_Head_baseILm3EN7testing8internal13ParamIteratorIdEELb0EED2Ev.exit.i.i.i
	movq	(%r15), %rdi
	testq	%rdi, %rdi
	je	.LBB201_19
# %bb.18:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceIdEEEclEPS3_.exit.i.i.i6.i.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB201_19:                             # %_ZNSt11_Tuple_implILm1EJN7testing8internal13ParamIteratorISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEES9_EED2Ev.exit
	movq	$0, (%r15)
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end201:
	.size	_ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2IJS6_S9_SB_SC_SC_ELb1EEEDpOT_, .Lfunc_end201-_ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2IJS6_S9_SB_SC_SC_ELb1EEEDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2IJS6_S9_SB_SC_SC_ELb1EEEDpOT_,"aG",@progbits,_ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2IJS6_S9_SB_SC_SC_ELb1EEEDpOT_,comdat
	.p2align	2
GCC_except_table201:
.Lexception47:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end47-.Lcst_begin47
.Lcst_begin47:
	.uleb128 .Lfunc_begin47-.Lfunc_begin47  # >> Call Site 1 <<
	.uleb128 .Ltmp768-.Lfunc_begin47        #   Call between .Lfunc_begin47 and .Ltmp768
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp768-.Lfunc_begin47        # >> Call Site 2 <<
	.uleb128 .Ltmp769-.Ltmp768              #   Call between .Ltmp768 and .Ltmp769
	.uleb128 .Ltmp770-.Lfunc_begin47        #     jumps to .Ltmp770
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp771-.Lfunc_begin47        # >> Call Site 3 <<
	.uleb128 .Ltmp772-.Ltmp771              #   Call between .Ltmp771 and .Ltmp772
	.uleb128 .Ltmp773-.Lfunc_begin47        #     jumps to .Ltmp773
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp774-.Lfunc_begin47        # >> Call Site 4 <<
	.uleb128 .Ltmp775-.Ltmp774              #   Call between .Ltmp774 and .Ltmp775
	.uleb128 .Ltmp776-.Lfunc_begin47        #     jumps to .Ltmp776
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp777-.Lfunc_begin47        # >> Call Site 5 <<
	.uleb128 .Ltmp778-.Ltmp777              #   Call between .Ltmp777 and .Ltmp778
	.uleb128 .Ltmp779-.Lfunc_begin47        #     jumps to .Ltmp779
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp778-.Lfunc_begin47        # >> Call Site 6 <<
	.uleb128 .Lfunc_end201-.Ltmp778         #   Call between .Ltmp778 and .Lfunc_end201
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end47:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2ERKSD_,"axG",@progbits,_ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2ERKSD_,comdat
	.weak	_ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2ERKSD_ # -- Begin function _ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2ERKSD_
	.p2align	4, 0x90
	.type	_ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2ERKSD_,@function
_ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2ERKSD_: # @_ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2ERKSD_
.Lfunc_begin48:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception48
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %rbx
	movq	%rdi, %r15
	movq	(%rsi), %rdi
	movq	(%rdi), %rax
	callq	*32(%rax)
	movq	%rax, (%r15)
	movq	8(%rbx), %rdi
	movq	(%rdi), %rax
.Ltmp780:
	callq	*32(%rax)
.Ltmp781:
# %bb.1:                                # %_ZNSt11_Tuple_implILm3EJN7testing8internal13ParamIteratorIdEES3_EEC2ERKS4_.exit.i.i
	movq	%rax, 8(%r15)
	movq	16(%rbx), %rdi
	movq	(%rdi), %rax
.Ltmp783:
	callq	*32(%rax)
.Ltmp784:
# %bb.2:                                # %_ZNSt11_Tuple_implILm2EJN7testing8internal13ParamIteratorISt5tupleIJlllEEEENS2_IdEES6_EEC2ERKS7_.exit.i
	movq	%rax, 16(%r15)
	movq	24(%rbx), %rdi
	movq	(%rdi), %rax
.Ltmp786:
	callq	*32(%rax)
.Ltmp787:
# %bb.3:                                # %_ZNSt11_Tuple_implILm1EJN7testing8internal13ParamIteratorISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEES9_EEC2ERKSA_.exit
	movq	%rax, 24(%r15)
	movq	32(%rbx), %rdi
	movq	(%rdi), %rax
.Ltmp789:
	callq	*32(%rax)
.Ltmp790:
# %bb.4:                                # %_ZNSt11_Tuple_implILm0EJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EEC2ERKSE_.exit
	movq	%rax, 32(%r15)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB202_8:                              # %lpad.i
	.cfi_def_cfa_offset 32
.Ltmp791:
	movq	%rax, %r14
	movq	24(%r15), %rdi
	testq	%rdi, %rdi
	je	.LBB202_10
# %bb.9:                                # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt4pairIllEEEEclEPS5_.exit.i.i.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB202_10:                             # %_ZNSt10_Head_baseILm1EN7testing8internal13ParamIteratorISt4pairIllEEELb0EED2Ev.exit.i
	movq	$0, 24(%r15)
	jmp	.LBB202_11
.LBB202_7:                              # %lpad.i17
.Ltmp788:
	movq	%rax, %r14
.LBB202_11:                             # %_ZNSt10_Head_baseILm1EN7testing8internal13ParamIteratorISt4pairIllEEELb0EED2Ev.exit.i
	movq	16(%r15), %rdi
	testq	%rdi, %rdi
	je	.LBB202_13
# %bb.12:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEEEclEPS5_.exit.i.i.i.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB202_13:                             # %_ZNSt10_Head_baseILm2EN7testing8internal13ParamIteratorISt5tupleIJlllEEEELb0EED2Ev.exit.i.i
	movq	$0, 16(%r15)
	jmp	.LBB202_14
.LBB202_6:                              # %lpad.i.i
.Ltmp785:
	movq	%rax, %r14
.LBB202_14:                             # %_ZNSt10_Head_baseILm2EN7testing8internal13ParamIteratorISt5tupleIJlllEEEELb0EED2Ev.exit.i.i
	movq	8(%r15), %rdi
	testq	%rdi, %rdi
	je	.LBB202_16
# %bb.15:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceIdEEEclEPS3_.exit.i.i.i.i.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB202_16:                             # %_ZNSt10_Head_baseILm3EN7testing8internal13ParamIteratorIdEELb0EED2Ev.exit.i.i.i
	movq	$0, 8(%r15)
	jmp	.LBB202_17
.LBB202_5:                              # %lpad.i.i.i
.Ltmp782:
	movq	%rax, %r14
.LBB202_17:                             # %_ZNSt10_Head_baseILm3EN7testing8internal13ParamIteratorIdEELb0EED2Ev.exit.i.i.i
	movq	(%r15), %rdi
	testq	%rdi, %rdi
	je	.LBB202_19
# %bb.18:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceIdEEEclEPS3_.exit.i.i.i6.i.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB202_19:                             # %_ZNSt11_Tuple_implILm1EJN7testing8internal13ParamIteratorISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEES9_EED2Ev.exit
	movq	$0, (%r15)
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end202:
	.size	_ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2ERKSD_, .Lfunc_end202-_ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2ERKSD_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2ERKSD_,"aG",@progbits,_ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2ERKSD_,comdat
	.p2align	2
GCC_except_table202:
.Lexception48:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end48-.Lcst_begin48
.Lcst_begin48:
	.uleb128 .Lfunc_begin48-.Lfunc_begin48  # >> Call Site 1 <<
	.uleb128 .Ltmp780-.Lfunc_begin48        #   Call between .Lfunc_begin48 and .Ltmp780
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp780-.Lfunc_begin48        # >> Call Site 2 <<
	.uleb128 .Ltmp781-.Ltmp780              #   Call between .Ltmp780 and .Ltmp781
	.uleb128 .Ltmp782-.Lfunc_begin48        #     jumps to .Ltmp782
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp783-.Lfunc_begin48        # >> Call Site 3 <<
	.uleb128 .Ltmp784-.Ltmp783              #   Call between .Ltmp783 and .Ltmp784
	.uleb128 .Ltmp785-.Lfunc_begin48        #     jumps to .Ltmp785
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp786-.Lfunc_begin48        # >> Call Site 4 <<
	.uleb128 .Ltmp787-.Ltmp786              #   Call between .Ltmp786 and .Ltmp787
	.uleb128 .Ltmp788-.Lfunc_begin48        #     jumps to .Ltmp788
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp789-.Lfunc_begin48        # >> Call Site 5 <<
	.uleb128 .Ltmp790-.Ltmp789              #   Call between .Ltmp789 and .Ltmp790
	.uleb128 .Ltmp791-.Lfunc_begin48        #     jumps to .Ltmp791
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp790-.Lfunc_begin48        # >> Call Site 6 <<
	.uleb128 .Lfunc_end202-.Ltmp790         #   Call between .Ltmp790 and .Lfunc_end202
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end48:
	.p2align	2
                                        # -- End function
	.section	.text._ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE19ComputeCurrentValueEv,"axG",@progbits,_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE19ComputeCurrentValueEv,comdat
	.weak	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE19ComputeCurrentValueEv # -- Begin function _ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE19ComputeCurrentValueEv
	.p2align	4, 0x90
	.type	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE19ComputeCurrentValueEv,@function
_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE19ComputeCurrentValueEv: # @_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE19ComputeCurrentValueEv
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	movq	88(%rdi), %rsi
	movq	128(%rdi), %rdi
	cmpq	%rsi, %rdi
	je	.LBB203_23
# %bb.1:                                # %_ZNK7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEeqERKS5_.exit.i
	movq	(%rdi), %rax
	callq	*48(%rax)
	testb	%al, %al
	jne	.LBB203_23
# %bb.2:                                # %lor.rhs6.i
	movq	80(%rbx), %rsi
	movq	120(%rbx), %rdi
	cmpq	%rsi, %rdi
	je	.LBB203_23
# %bb.3:                                # %_ZNK7testing8internal13ParamIteratorISt4pairIllEEeqERKS4_.exit.i
	movq	(%rdi), %rax
	callq	*48(%rax)
	testb	%al, %al
	jne	.LBB203_23
# %bb.4:                                # %lor.rhs17.i
	movq	72(%rbx), %rsi
	movq	112(%rbx), %rdi
	cmpq	%rsi, %rdi
	je	.LBB203_23
# %bb.5:                                # %_ZNK7testing8internal13ParamIteratorISt5tupleIJlllEEEeqERKS4_.exit.i
	movq	(%rdi), %rax
	callq	*48(%rax)
	testb	%al, %al
	jne	.LBB203_23
# %bb.6:                                # %lor.rhs28.i
	movq	64(%rbx), %rsi
	movq	104(%rbx), %rdi
	cmpq	%rsi, %rdi
	je	.LBB203_23
# %bb.7:                                # %_ZNK7testing8internal13ParamIteratorIdEeqERKS2_.exit.i
	movq	(%rdi), %rax
	callq	*48(%rax)
	testb	%al, %al
	jne	.LBB203_23
# %bb.8:                                # %lor.rhs39.i
	movq	56(%rbx), %rsi
	movq	96(%rbx), %rdi
	cmpq	%rsi, %rdi
	je	.LBB203_23
# %bb.9:                                # %_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE5AtEndEv.exit
	movq	(%rdi), %rax
	callq	*48(%rax)
	testb	%al, %al
	jne	.LBB203_23
# %bb.10:                               # %if.then
	movq	128(%rbx), %rdi
	movq	(%rdi), %rax
	callq	*40(%rax)
	movq	%rax, %r14
	movq	120(%rbx), %rdi
	movq	(%rdi), %rax
	callq	*40(%rax)
	movq	%rax, (%rsp)                    # 8-byte Spill
	movq	112(%rbx), %rdi
	movq	(%rdi), %rax
	callq	*40(%rax)
	movq	%rax, %r13
	movq	104(%rbx), %rdi
	movq	(%rdi), %rax
	callq	*40(%rax)
	movq	%rax, %rbp
	movq	96(%rbx), %rdi
	movq	(%rdi), %rax
	callq	*40(%rax)
	movq	%rax, %r12
	movl	$88, %edi
	callq	_Znwm
	movq	%rax, %r15
	movabsq	$4294967297, %rax               # imm = 0x100000001
	movq	%rax, 8(%r15)
	movq	$_ZTVSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE+16, (%r15)
	movsd	(%r12), %xmm0                   # xmm0 = mem[0],zero
	movsd	%xmm0, 16(%r15)
	movsd	(%rbp), %xmm0                   # xmm0 = mem[0],zero
	movsd	%xmm0, 24(%r15)
	movq	16(%r13), %rax
	movq	%rax, 48(%r15)
	movups	(%r13), %xmm0
	movups	%xmm0, 32(%r15)
	movq	(%rsp), %rax                    # 8-byte Reload
	movups	(%rax), %xmm0
	movups	%xmm0, 56(%r15)
	movq	(%r14), %rax
	movq	%rax, 72(%r15)
	movq	8(%r14), %rax
	movq	%rax, 80(%r15)
	movl	$_ZTVSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE+16, %ecx
	testq	%rax, %rax
	je	.LBB203_14
# %bb.11:                               # %if.then.i.i.i.i.i.i.i.i.i.i.i.i.i.i
	movl	$__pthread_key_create, %edx
	testq	%rdx, %rdx
	je	.LBB203_13
# %bb.12:                               # %if.then.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i
	lock		addl	$1, 8(%rax)
	movq	(%r15), %rcx
	jmp	.LBB203_14
.LBB203_13:                             # %if.else.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i.i
	addl	$1, 8(%rax)
.LBB203_14:                             # %_ZSt11make_sharedISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEEJRKS3_RKS5_RKS6_RKdSF_EES1_IT_EDpOT0_.exit
	movl	$_ZTISt19_Sp_make_shared_tag, %esi
	movq	%r15, %rdi
	callq	*32(%rcx)
	movq	%rax, 136(%rbx)
	movq	144(%rbx), %r14
	movq	%r15, 144(%rbx)
	testq	%r14, %r14
	je	.LBB203_23
# %bb.15:                               # %if.then.i.i.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB203_17
# %bb.16:                               # %if.then.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%r14)
	jmp	.LBB203_18
.LBB203_17:                             # %if.else.i.i.i.i.i
	movl	8(%r14), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%r14)
.LBB203_18:                             # %invoke.cont.i.i.i.i
	cmpl	$1, %eax
	jne	.LBB203_23
# %bb.19:                               # %if.then.i.i.i.i
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB203_21
# %bb.20:                               # %if.then.i9.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%r14)
	jmp	.LBB203_22
.LBB203_21:                             # %if.else.i11.i.i.i.i
	movl	12(%r14), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%r14)
.LBB203_22:                             # %invoke.cont2.i.i.i.i
	cmpl	$1, %eax
	jne	.LBB203_23
# %bb.24:                               # %if.then5.i.i.i.i
	movq	(%r14), %rax
	movq	%r14, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmpq	*24(%rax)                       # TAILCALL
.LBB203_23:                             # %if.end
	.cfi_def_cfa_offset 64
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end203:
	.size	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE19ComputeCurrentValueEv, .Lfunc_end203-_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE19ComputeCurrentValueEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11_Tuple_implILm0EJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev,"axG",@progbits,_ZNSt11_Tuple_implILm0EJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev,comdat
	.weak	_ZNSt11_Tuple_implILm0EJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev # -- Begin function _ZNSt11_Tuple_implILm0EJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm0EJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev,@function
_ZNSt11_Tuple_implILm0EJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev: # @_ZNSt11_Tuple_implILm0EJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	32(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB204_2
# %bb.1:                                # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEEEclEPS6_.exit.i.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB204_2:                              # %_ZNSt10_Head_baseILm0EN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEELb0EED2Ev.exit
	movq	$0, 32(%rbx)
	movq	24(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB204_4
# %bb.3:                                # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt4pairIllEEEEclEPS5_.exit.i.i.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB204_4:                              # %_ZNSt10_Head_baseILm1EN7testing8internal13ParamIteratorISt4pairIllEEELb0EED2Ev.exit.i
	movq	$0, 24(%rbx)
	movq	16(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB204_6
# %bb.5:                                # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEEEclEPS5_.exit.i.i.i.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB204_6:                              # %_ZNSt10_Head_baseILm2EN7testing8internal13ParamIteratorISt5tupleIJlllEEEELb0EED2Ev.exit.i.i
	movq	$0, 16(%rbx)
	movq	8(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB204_8
# %bb.7:                                # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceIdEEEclEPS3_.exit.i.i.i.i.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB204_8:                              # %_ZNSt10_Head_baseILm3EN7testing8internal13ParamIteratorIdEELb0EED2Ev.exit.i.i.i
	movq	$0, 8(%rbx)
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB204_10
# %bb.9:                                # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceIdEEEclEPS3_.exit.i.i.i6.i.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB204_10:                             # %_ZNSt11_Tuple_implILm1EJN7testing8internal13ParamIteratorISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEES9_EED2Ev.exit
	movq	$0, (%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end204:
	.size	_ZNSt11_Tuple_implILm0EJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev, .Lfunc_end204-_ZNSt11_Tuple_implILm0EJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEED2Ev,"axG",@progbits,_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEED2Ev,comdat
	.weak	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEED2Ev # -- Begin function _ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEED2Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEED2Ev,@function
_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEED2Ev: # @_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %rbx
	movq	$_ZTVN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE+16, (%rdi)
	movq	144(%rdi), %r14
	testq	%r14, %r14
	je	.LBB205_10
# %bb.1:                                # %if.then.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB205_3
# %bb.2:                                # %if.then.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%r14)
	cmpl	$1, %eax
	je	.LBB205_5
	jmp	.LBB205_10
.LBB205_3:                              # %if.else.i.i.i
	movl	8(%r14), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%r14)
	cmpl	$1, %eax
	jne	.LBB205_10
.LBB205_5:                              # %if.then.i.i
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB205_7
# %bb.6:                                # %if.then.i9.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%r14)
	cmpl	$1, %eax
	je	.LBB205_9
	jmp	.LBB205_10
.LBB205_7:                              # %if.else.i11.i.i
	movl	12(%r14), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%r14)
	cmpl	$1, %eax
	jne	.LBB205_10
.LBB205_9:                              # %if.then5.i.i
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*24(%rax)
.LBB205_10:                             # %_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev.exit
	movq	128(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB205_12
# %bb.11:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEEEclEPS6_.exit.i.i.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB205_12:                             # %_ZNSt10_Head_baseILm0EN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEELb0EED2Ev.exit.i
	movq	$0, 128(%rbx)
	movq	120(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB205_14
# %bb.13:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt4pairIllEEEEclEPS5_.exit.i.i.i.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB205_14:                             # %_ZNSt10_Head_baseILm1EN7testing8internal13ParamIteratorISt4pairIllEEELb0EED2Ev.exit.i.i
	movq	$0, 120(%rbx)
	movq	112(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB205_16
# %bb.15:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEEEclEPS5_.exit.i.i.i.i.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB205_16:                             # %_ZNSt10_Head_baseILm2EN7testing8internal13ParamIteratorISt5tupleIJlllEEEELb0EED2Ev.exit.i.i.i
	movq	$0, 112(%rbx)
	movq	104(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB205_18
# %bb.17:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceIdEEEclEPS3_.exit.i.i.i.i.i.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB205_18:                             # %_ZNSt10_Head_baseILm3EN7testing8internal13ParamIteratorIdEELb0EED2Ev.exit.i.i.i.i
	movq	$0, 104(%rbx)
	movq	96(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB205_20
# %bb.19:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceIdEEEclEPS3_.exit.i.i.i6.i.i.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB205_20:                             # %_ZNSt11_Tuple_implILm0EJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev.exit
	movq	$0, 96(%rbx)
	movq	88(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB205_22
# %bb.21:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEEEclEPS6_.exit.i.i.i.i6
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB205_22:                             # %_ZNSt10_Head_baseILm0EN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEELb0EED2Ev.exit.i9
	movq	$0, 88(%rbx)
	movq	80(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB205_24
# %bb.23:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt4pairIllEEEEclEPS5_.exit.i.i.i.i.i12
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB205_24:                             # %_ZNSt10_Head_baseILm1EN7testing8internal13ParamIteratorISt4pairIllEEELb0EED2Ev.exit.i.i15
	movq	$0, 80(%rbx)
	movq	72(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB205_26
# %bb.25:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEEEclEPS5_.exit.i.i.i.i.i.i18
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB205_26:                             # %_ZNSt10_Head_baseILm2EN7testing8internal13ParamIteratorISt5tupleIJlllEEEELb0EED2Ev.exit.i.i.i21
	movq	$0, 72(%rbx)
	movq	64(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB205_28
# %bb.27:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceIdEEEclEPS3_.exit.i.i.i.i.i.i.i24
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB205_28:                             # %_ZNSt10_Head_baseILm3EN7testing8internal13ParamIteratorIdEELb0EED2Ev.exit.i.i.i.i27
	movq	$0, 64(%rbx)
	movq	56(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB205_30
# %bb.29:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceIdEEEclEPS3_.exit.i.i.i6.i.i.i.i30
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB205_30:                             # %_ZNSt11_Tuple_implILm0EJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev.exit31
	movq	$0, 56(%rbx)
	movq	48(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB205_32
# %bb.31:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEEEclEPS6_.exit.i.i.i.i36
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB205_32:                             # %_ZNSt10_Head_baseILm0EN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEELb0EED2Ev.exit.i39
	movq	$0, 48(%rbx)
	movq	40(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB205_34
# %bb.33:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt4pairIllEEEEclEPS5_.exit.i.i.i.i.i42
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB205_34:                             # %_ZNSt10_Head_baseILm1EN7testing8internal13ParamIteratorISt4pairIllEEELb0EED2Ev.exit.i.i45
	movq	$0, 40(%rbx)
	movq	32(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB205_36
# %bb.35:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEEEclEPS5_.exit.i.i.i.i.i.i48
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB205_36:                             # %_ZNSt10_Head_baseILm2EN7testing8internal13ParamIteratorISt5tupleIJlllEEEELb0EED2Ev.exit.i.i.i51
	movq	$0, 32(%rbx)
	movq	24(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB205_38
# %bb.37:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceIdEEEclEPS3_.exit.i.i.i.i.i.i.i54
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB205_38:                             # %_ZNSt10_Head_baseILm3EN7testing8internal13ParamIteratorIdEELb0EED2Ev.exit.i.i.i.i57
	movq	$0, 24(%rbx)
	movq	16(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB205_40
# %bb.39:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceIdEEEclEPS3_.exit.i.i.i6.i.i.i.i60
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB205_40:                             # %_ZNSt11_Tuple_implILm0EJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev.exit61
	movq	$0, 16(%rbx)
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end205:
	.size	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEED2Ev, .Lfunc_end205-_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEED0Ev,"axG",@progbits,_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEED0Ev,comdat
	.weak	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEED0Ev # -- Begin function _ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEED0Ev
	.p2align	4, 0x90
	.type	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEED0Ev,@function
_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEED0Ev: # @_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEED0Ev
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	callq	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEED2Ev
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end206:
	.size	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEED0Ev, .Lfunc_end206-_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE13BaseGeneratorEv,"axG",@progbits,_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE13BaseGeneratorEv,comdat
	.weak	_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE13BaseGeneratorEv # -- Begin function _ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE13BaseGeneratorEv
	.p2align	4, 0x90
	.type	_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE13BaseGeneratorEv,@function
_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE13BaseGeneratorEv: # @_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE13BaseGeneratorEv
	.cfi_startproc
# %bb.0:                                # %entry
	movq	8(%rdi), %rax
	retq
.Lfunc_end207:
	.size	_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE13BaseGeneratorEv, .Lfunc_end207-_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE13BaseGeneratorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE7AdvanceEv,"axG",@progbits,_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE7AdvanceEv,comdat
	.weak	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE7AdvanceEv # -- Begin function _ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE7AdvanceEv
	.p2align	4, 0x90
	.type	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE7AdvanceEv,@function
_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE7AdvanceEv: # @_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE7AdvanceEv
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	96(%rdi), %rdi
	movq	(%rdi), %rax
	callq	*24(%rax)
	movq	56(%rbx), %rsi
	movq	96(%rbx), %rdi
	cmpq	%rsi, %rdi
	je	.LBB208_2
# %bb.1:                                # %_ZNK7testing8internal13ParamIteratorIdEneERKS2_.exit.i
	movq	(%rdi), %rax
	callq	*48(%rax)
	testb	%al, %al
	je	.LBB208_5
.LBB208_2:                              # %if.end5.i
	movq	16(%rbx), %rdi
	movq	(%rdi), %rax
	callq	*32(%rax)
	movq	96(%rbx), %rdi
	movq	%rax, 96(%rbx)
	testq	%rdi, %rdi
	je	.LBB208_4
# %bb.3:                                # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceIdEEEclEPS3_.exit.i.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB208_4:                              # %_ZN7testing8internal13ParamIteratorIdEaSERKS2_.exit.i
	movq	104(%rbx), %rdi
	movq	(%rdi), %rax
	callq	*24(%rax)
	movq	%rbx, %rdi
	callq	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE12AdvanceIfEndILm3EEEvv
.LBB208_5:                              # %_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE12AdvanceIfEndILm4EEEvv.exit
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE19ComputeCurrentValueEv # TAILCALL
.Lfunc_end208:
	.size	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE7AdvanceEv, .Lfunc_end208-_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE7AdvanceEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE5CloneEv,"axG",@progbits,_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE5CloneEv,comdat
	.weak	_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE5CloneEv # -- Begin function _ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE5CloneEv
	.p2align	4, 0x90
	.type	_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE5CloneEv,@function
_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE5CloneEv: # @_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE5CloneEv
.Lfunc_begin49:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception49
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movl	$152, %edi
	callq	_Znwm
	movq	%rax, %r15
	movq	$_ZTVN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE+16, (%rax)
	movq	8(%rbx), %rax
	movq	%rax, 8(%r15)
	leaq	16(%r15), %r14
	leaq	16(%rbx), %rsi
.Ltmp792:
	movq	%r14, %rdi
	callq	_ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2ERKSD_
.Ltmp793:
# %bb.1:                                # %.noexc
	leaq	56(%r15), %r12
	leaq	56(%rbx), %rsi
.Ltmp795:
	movq	%r12, %rdi
	callq	_ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2ERKSD_
.Ltmp796:
# %bb.2:                                # %invoke.cont6.i
	movq	%r15, %rdi
	addq	$96, %rdi
	leaq	96(%rbx), %rsi
.Ltmp798:
	callq	_ZNSt5tupleIJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_IS_IJlllEEEENS2_IdEESC_EEC2ERKSD_
.Ltmp799:
# %bb.3:                                # %invoke.cont9.i
	movq	136(%rbx), %rax
	movq	%rax, 136(%r15)
	movq	144(%rbx), %rax
	movq	%rax, 144(%r15)
	testq	%rax, %rax
	je	.LBB209_10
# %bb.4:                                # %if.then.i.i.i.i
	movl	$__pthread_key_create, %ecx
	testq	%rcx, %rcx
	je	.LBB209_9
# %bb.5:                                # %if.then.i.i.i.i.i.i
	lock		addl	$1, 8(%rax)
	jmp	.LBB209_10
.LBB209_9:                              # %if.else.i.i.i.i.i.i
	addl	$1, 8(%rax)
.LBB209_10:                             # %invoke.cont
	movq	%r15, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB209_7:                              # %lpad8.i
	.cfi_def_cfa_offset 48
.Ltmp800:
	movq	%rax, %rbx
	movq	%r12, %rdi
	callq	_ZNSt11_Tuple_implILm0EJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev
	jmp	.LBB209_8
.LBB209_6:                              # %lpad5.i
.Ltmp797:
	movq	%rax, %rbx
.LBB209_8:                              # %ehcleanup.i
	movq	%r14, %rdi
	callq	_ZNSt11_Tuple_implILm0EJN7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEENS2_ISt4pairIllEEENS2_ISt5tupleIJlllEEEENS2_IdEESD_EED2Ev
	jmp	.LBB209_12
.LBB209_11:                             # %lpad
.Ltmp794:
	movq	%rax, %rbx
.LBB209_12:                             # %lpad.body
	movq	%r15, %rdi
	callq	_ZdlPv
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end209:
	.size	_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE5CloneEv, .Lfunc_end209-_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE5CloneEv
	.cfi_endproc
	.section	.gcc_except_table._ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE5CloneEv,"aG",@progbits,_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE5CloneEv,comdat
	.p2align	2
GCC_except_table209:
.Lexception49:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end49-.Lcst_begin49
.Lcst_begin49:
	.uleb128 .Lfunc_begin49-.Lfunc_begin49  # >> Call Site 1 <<
	.uleb128 .Ltmp792-.Lfunc_begin49        #   Call between .Lfunc_begin49 and .Ltmp792
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp792-.Lfunc_begin49        # >> Call Site 2 <<
	.uleb128 .Ltmp793-.Ltmp792              #   Call between .Ltmp792 and .Ltmp793
	.uleb128 .Ltmp794-.Lfunc_begin49        #     jumps to .Ltmp794
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp795-.Lfunc_begin49        # >> Call Site 3 <<
	.uleb128 .Ltmp796-.Ltmp795              #   Call between .Ltmp795 and .Ltmp796
	.uleb128 .Ltmp797-.Lfunc_begin49        #     jumps to .Ltmp797
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp798-.Lfunc_begin49        # >> Call Site 4 <<
	.uleb128 .Ltmp799-.Ltmp798              #   Call between .Ltmp798 and .Ltmp799
	.uleb128 .Ltmp800-.Lfunc_begin49        #     jumps to .Ltmp800
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp799-.Lfunc_begin49        # >> Call Site 5 <<
	.uleb128 .Lfunc_end209-.Ltmp799         #   Call between .Ltmp799 and .Lfunc_end209
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end49:
	.p2align	2
                                        # -- End function
	.section	.text._ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE7CurrentEv,"axG",@progbits,_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE7CurrentEv,comdat
	.weak	_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE7CurrentEv # -- Begin function _ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE7CurrentEv
	.p2align	4, 0x90
	.type	_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE7CurrentEv,@function
_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE7CurrentEv: # @_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE7CurrentEv
	.cfi_startproc
# %bb.0:                                # %entry
	movq	136(%rdi), %rax
	retq
.Lfunc_end210:
	.size	_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE7CurrentEv, .Lfunc_end210-_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE7CurrentEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE6EqualsERKNS0_22ParamIteratorInterfaceIS7_IJS4_S6_S8_ddEEEE,"axG",@progbits,_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE6EqualsERKNS0_22ParamIteratorInterfaceIS7_IJS4_S6_S8_ddEEEE,comdat
	.weak	_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE6EqualsERKNS0_22ParamIteratorInterfaceIS7_IJS4_S6_S8_ddEEEE # -- Begin function _ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE6EqualsERKNS0_22ParamIteratorInterfaceIS7_IJS4_S6_S8_ddEEEE
	.p2align	4, 0x90
	.type	_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE6EqualsERKNS0_22ParamIteratorInterfaceIS7_IJS4_S6_S8_ddEEEE,@function
_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE6EqualsERKNS0_22ParamIteratorInterfaceIS7_IJS4_S6_S8_ddEEEE: # @_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE6EqualsERKNS0_22ParamIteratorInterfaceIS7_IJS4_S6_S8_ddEEEE
.Lfunc_begin50:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception50
# %bb.0:                                # %entry
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movq	(%rdi), %rax
	callq	*16(%rax)
	movq	%rax, %rbp
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	xorl	%edi, %edi
	cmpq	%rax, %rbp
	sete	%dil
	callq	_ZN7testing8internal6IsTrueEb
	testb	%al, %al
	jne	.LBB211_12
# %bb.1:                                # %if.else
	leaq	8(%rsp), %rdi
	movl	$.L.str.8, %edx
	movl	$3, %esi
	movl	$870, %ecx                      # imm = 0x366
	callq	_ZN7testing8internal8GTestLogC1ENS0_16GTestLogSeverityEPKci
.Ltmp801:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.31, %esi
	movl	$59, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp802:
# %bb.2:                                # %invoke.cont
.Ltmp803:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.32, %esi
	movl	$43, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp804:
# %bb.3:                                # %invoke.cont8
.Ltmp805:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.33, %esi
	movl	$26, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp806:
# %bb.4:                                # %invoke.cont10
	movq	_ZSt4cerr(%rip), %rax
	movq	-24(%rax), %rax
	movq	_ZSt4cerr+240(%rax), %rbp
	testq	%rbp, %rbp
	je	.LBB211_48
# %bb.5:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
	cmpb	$0, 56(%rbp)
	je	.LBB211_7
# %bb.6:                                # %if.then.i4.i.i
	movb	67(%rbp), %al
	jmp	.LBB211_9
.LBB211_7:                              # %if.end.i.i.i
.Ltmp807:
	movq	%rbp, %rdi
	callq	_ZNKSt5ctypeIcE13_M_widen_initEv
.Ltmp808:
# %bb.8:                                # %.noexc172
	movq	(%rbp), %rax
.Ltmp809:
	movq	%rbp, %rdi
	movl	$10, %esi
	callq	*48(%rax)
.Ltmp810:
.LBB211_9:                              # %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
.Ltmp811:
	movsbl	%al, %esi
	movl	$_ZSt4cerr, %edi
	callq	_ZNSo3putEc
.Ltmp812:
# %bb.10:                               # %call1.i.noexc
.Ltmp813:
	movq	%rax, %rdi
	callq	_ZNSo5flushEv
.Ltmp814:
# %bb.11:                               # %invoke.cont12
	leaq	8(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
.LBB211_12:                             # %if.end
	movq	%rbx, %rdi
	callq	_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEEKNS0_22ParamIteratorInterfaceIS8_IJS5_S7_S9_ddEEEEEEPT_PT0_
	movq	%rax, %rbx
	movq	88(%r14), %rsi
	movq	128(%r14), %rdi
	cmpq	%rsi, %rdi
	je	.LBB211_22
# %bb.13:                               # %_ZNK7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEeqERKS5_.exit.i
	movq	(%rdi), %rax
	callq	*48(%rax)
	testb	%al, %al
	jne	.LBB211_22
# %bb.14:                               # %lor.rhs6.i
	movq	80(%r14), %rsi
	movq	120(%r14), %rdi
	cmpq	%rsi, %rdi
	je	.LBB211_22
# %bb.15:                               # %_ZNK7testing8internal13ParamIteratorISt4pairIllEEeqERKS4_.exit.i
	movq	(%rdi), %rax
	callq	*48(%rax)
	testb	%al, %al
	jne	.LBB211_22
# %bb.16:                               # %lor.rhs17.i
	movq	72(%r14), %rsi
	movq	112(%r14), %rdi
	cmpq	%rsi, %rdi
	je	.LBB211_22
# %bb.17:                               # %_ZNK7testing8internal13ParamIteratorISt5tupleIJlllEEEeqERKS4_.exit.i
	movq	(%rdi), %rax
	callq	*48(%rax)
	testb	%al, %al
	jne	.LBB211_22
# %bb.18:                               # %lor.rhs28.i
	movq	64(%r14), %rsi
	movq	104(%r14), %rdi
	cmpq	%rsi, %rdi
	je	.LBB211_22
# %bb.19:                               # %_ZNK7testing8internal13ParamIteratorIdEeqERKS2_.exit.i
	movq	(%rdi), %rax
	callq	*48(%rax)
	testb	%al, %al
	jne	.LBB211_22
# %bb.20:                               # %lor.rhs39.i
	movq	56(%r14), %rsi
	movq	96(%r14), %rdi
	cmpq	%rsi, %rdi
	je	.LBB211_22
# %bb.21:                               # %_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE5AtEndEv.exit
	movq	(%rdi), %rax
	callq	*48(%rax)
	testb	%al, %al
	je	.LBB211_32
.LBB211_22:                             # %land.lhs.true
	movq	88(%rbx), %rsi
	movq	128(%rbx), %rdi
	movb	$1, %bpl
	cmpq	%rsi, %rdi
	je	.LBB211_47
# %bb.23:                               # %_ZNK7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEeqERKS5_.exit.i98
	movq	(%rdi), %rax
	callq	*48(%rax)
	testb	%al, %al
	jne	.LBB211_47
# %bb.24:                               # %lor.rhs6.i102
	movq	80(%rbx), %rsi
	movq	120(%rbx), %rdi
	cmpq	%rsi, %rdi
	je	.LBB211_47
# %bb.25:                               # %_ZNK7testing8internal13ParamIteratorISt4pairIllEEeqERKS4_.exit.i106
	movq	(%rdi), %rax
	callq	*48(%rax)
	testb	%al, %al
	jne	.LBB211_47
# %bb.26:                               # %lor.rhs17.i110
	movq	72(%rbx), %rsi
	movq	112(%rbx), %rdi
	cmpq	%rsi, %rdi
	je	.LBB211_47
# %bb.27:                               # %_ZNK7testing8internal13ParamIteratorISt5tupleIJlllEEEeqERKS4_.exit.i114
	movq	(%rdi), %rax
	callq	*48(%rax)
	testb	%al, %al
	jne	.LBB211_47
# %bb.28:                               # %lor.rhs28.i118
	movq	64(%rbx), %rsi
	movq	104(%rbx), %rdi
	cmpq	%rsi, %rdi
	je	.LBB211_47
# %bb.29:                               # %_ZNK7testing8internal13ParamIteratorIdEeqERKS2_.exit.i122
	movq	(%rdi), %rax
	callq	*48(%rax)
	testb	%al, %al
	jne	.LBB211_47
# %bb.30:                               # %lor.rhs39.i126
	movq	56(%rbx), %rsi
	movq	96(%rbx), %rdi
	cmpq	%rsi, %rdi
	je	.LBB211_47
# %bb.31:                               # %_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE5AtEndEv.exit131
	movq	(%rdi), %rax
	callq	*48(%rax)
	testb	%al, %al
	jne	.LBB211_47
.LBB211_32:                             # %land.rhs
	movq	128(%r14), %rdi
	movq	128(%rbx), %rsi
	cmpq	%rsi, %rdi
	je	.LBB211_34
# %bb.33:                               # %_ZNK7testing8internal13ParamIteratorISt10shared_ptrI7KernelIEEeqERKS5_.exit
	movq	(%rdi), %rax
	callq	*48(%rax)
	testb	%al, %al
	je	.LBB211_42
.LBB211_34:                             # %land.rhs25
	movq	120(%r14), %rdi
	movq	120(%rbx), %rsi
	cmpq	%rsi, %rdi
	je	.LBB211_36
# %bb.35:                               # %_ZNK7testing8internal13ParamIteratorISt4pairIllEEeqERKS4_.exit
	movq	(%rdi), %rax
	callq	*48(%rax)
	testb	%al, %al
	je	.LBB211_42
.LBB211_36:                             # %land.rhs36
	movq	112(%r14), %rdi
	movq	112(%rbx), %rsi
	cmpq	%rsi, %rdi
	je	.LBB211_38
# %bb.37:                               # %_ZNK7testing8internal13ParamIteratorISt5tupleIJlllEEEeqERKS4_.exit
	movq	(%rdi), %rax
	callq	*48(%rax)
	testb	%al, %al
	je	.LBB211_42
.LBB211_38:                             # %land.rhs47
	movq	104(%r14), %rdi
	movq	104(%rbx), %rsi
	cmpq	%rsi, %rdi
	je	.LBB211_40
# %bb.39:                               # %_ZNK7testing8internal13ParamIteratorIdEeqERKS2_.exit
	movq	(%rdi), %rax
	callq	*48(%rax)
	testb	%al, %al
	je	.LBB211_42
.LBB211_40:                             # %land.rhs58
	movq	96(%r14), %rdi
	movq	96(%rbx), %rsi
	cmpq	%rsi, %rdi
	je	.LBB211_46
# %bb.41:                               # %lor.rhs.i168
	movq	(%rdi), %rax
	callq	*48(%rax)
	movl	%eax, %ebp
	jmp	.LBB211_47
.LBB211_42:
	xorl	%ebp, %ebp
.LBB211_47:                             # %cleanup
	movl	%ebp, %eax
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB211_46:
	.cfi_def_cfa_offset 48
	movb	$1, %bpl
	jmp	.LBB211_47
.LBB211_48:                             # %if.then.i.i.i
.Ltmp815:
	callq	_ZSt16__throw_bad_castv
.Ltmp816:
# %bb.49:                               # %.noexc
.LBB211_50:                             # %lpad
.Ltmp817:
	movq	%rax, %rbx
	leaq	8(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end211:
	.size	_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE6EqualsERKNS0_22ParamIteratorInterfaceIS7_IJS4_S6_S8_ddEEEE, .Lfunc_end211-_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE6EqualsERKNS0_22ParamIteratorInterfaceIS7_IJS4_S6_S8_ddEEEE
	.cfi_endproc
	.section	.gcc_except_table._ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE6EqualsERKNS0_22ParamIteratorInterfaceIS7_IJS4_S6_S8_ddEEEE,"aG",@progbits,_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE6EqualsERKNS0_22ParamIteratorInterfaceIS7_IJS4_S6_S8_ddEEEE,comdat
	.p2align	2
GCC_except_table211:
.Lexception50:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end50-.Lcst_begin50
.Lcst_begin50:
	.uleb128 .Lfunc_begin50-.Lfunc_begin50  # >> Call Site 1 <<
	.uleb128 .Ltmp801-.Lfunc_begin50        #   Call between .Lfunc_begin50 and .Ltmp801
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp801-.Lfunc_begin50        # >> Call Site 2 <<
	.uleb128 .Ltmp814-.Ltmp801              #   Call between .Ltmp801 and .Ltmp814
	.uleb128 .Ltmp817-.Lfunc_begin50        #     jumps to .Ltmp817
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp814-.Lfunc_begin50        # >> Call Site 3 <<
	.uleb128 .Ltmp815-.Ltmp814              #   Call between .Ltmp814 and .Ltmp815
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp815-.Lfunc_begin50        # >> Call Site 4 <<
	.uleb128 .Ltmp816-.Ltmp815              #   Call between .Ltmp815 and .Ltmp816
	.uleb128 .Ltmp817-.Lfunc_begin50        #     jumps to .Ltmp817
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp816-.Lfunc_begin50        # >> Call Site 5 <<
	.uleb128 .Lfunc_end211-.Ltmp816         #   Call between .Ltmp816 and .Lfunc_end211
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end50:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EED2Ev,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EED2Ev,comdat
	.weak	_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EED2Ev # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EED2Ev,@function
_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EED2Ev: # @_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_startproc
# %bb.0:                                # %entry
	retq
.Lfunc_end212:
	.size	_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EED2Ev, .Lfunc_end212-_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EED0Ev,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EED0Ev,comdat
	.weak	_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EED0Ev # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.p2align	4, 0x90
	.type	_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EED0Ev,@function
_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EED0Ev: # @_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.cfi_startproc
# %bb.0:                                # %entry
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end213:
	.size	_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EED0Ev, .Lfunc_end213-_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,comdat
	.weak	_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.p2align	4, 0x90
	.type	_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,@function
_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv: # @_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	80(%rdi), %rbx
	testq	%rbx, %rbx
	je	.LBB214_9
# %bb.1:                                # %if.then.i.i.i.i.i.i
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB214_3
# %bb.2:                                # %if.then.i.i.i.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB214_5
	jmp	.LBB214_9
.LBB214_3:                              # %if.else.i.i.i.i.i.i.i.i
	movl	8(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB214_9
.LBB214_5:                              # %if.then.i.i.i.i.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
	movl	$__pthread_key_create, %eax
	testq	%rax, %rax
	je	.LBB214_7
# %bb.6:                                # %if.then.i9.i.i.i.i.i.i.i
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB214_10
.LBB214_9:                              # %invoke.cont
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB214_7:                              # %if.else.i11.i.i.i.i.i.i.i
	.cfi_def_cfa_offset 16
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB214_9
.LBB214_10:                             # %if.then5.i.i.i.i.i.i.i
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmpq	*24(%rax)                       # TAILCALL
.Lfunc_end214:
	.size	_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv, .Lfunc_end214-_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,comdat
	.weak	_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.p2align	4, 0x90
	.type	_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,@function
_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv: # @_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_startproc
# %bb.0:                                # %_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEESaIS8_ELN9__gnu_cxx12_Lock_policyE2EEEED2Ev.exit
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end215:
	.size	_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv, .Lfunc_end215-_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,comdat
	.weak	_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.p2align	4, 0x90
	.type	_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,@function
_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info: # @_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	8(%rsi), %rdi
	cmpq	$_ZTSSt19_Sp_make_shared_tag, %rdi
	je	.LBB216_5
# %bb.1:                                # %lor.rhs.i
	cmpb	$42, (%rdi)
	jne	.LBB216_3
# %bb.2:
	xorl	%ebx, %ebx
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB216_3:                              # %_ZNKSt9type_infoeqERKS_.exit
	.cfi_def_cfa_offset 16
	movl	$_ZTSSt19_Sp_make_shared_tag, %esi
	callq	strcmp
	testl	%eax, %eax
	je	.LBB216_5
# %bb.4:
	xorl	%ebx, %ebx
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB216_5:                              # %if.then
	.cfi_def_cfa_offset 16
	addq	$16, %rbx
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end216:
	.size	_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info, .Lfunc_end216-_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE12AdvanceIfEndILm3EEEvv,"axG",@progbits,_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE12AdvanceIfEndILm3EEEvv,comdat
	.weak	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE12AdvanceIfEndILm3EEEvv # -- Begin function _ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE12AdvanceIfEndILm3EEEvv
	.p2align	4, 0x90
	.type	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE12AdvanceIfEndILm3EEEvv,@function
_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE12AdvanceIfEndILm3EEEvv: # @_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE12AdvanceIfEndILm3EEEvv
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	64(%rdi), %rsi
	movq	104(%rdi), %rdi
	cmpq	%rsi, %rdi
	je	.LBB217_2
# %bb.1:                                # %_ZNK7testing8internal13ParamIteratorIdEneERKS2_.exit
	movq	(%rdi), %rax
	callq	*48(%rax)
	testb	%al, %al
	je	.LBB217_13
.LBB217_2:                              # %if.end5
	movq	24(%rbx), %rdi
	movq	(%rdi), %rax
	callq	*32(%rax)
	movq	104(%rbx), %rdi
	movq	%rax, 104(%rbx)
	testq	%rdi, %rdi
	je	.LBB217_4
# %bb.3:                                # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceIdEEEclEPS3_.exit.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB217_4:                              # %_ZN7testing8internal13ParamIteratorIdEaSERKS2_.exit
	movq	112(%rbx), %rdi
	movq	(%rdi), %rax
	callq	*24(%rax)
	movq	72(%rbx), %rsi
	movq	112(%rbx), %rdi
	cmpq	%rsi, %rdi
	je	.LBB217_6
# %bb.5:                                # %_ZNK7testing8internal13ParamIteratorISt5tupleIJlllEEEneERKS4_.exit.i
	movq	(%rdi), %rax
	callq	*48(%rax)
	testb	%al, %al
	je	.LBB217_13
.LBB217_6:                              # %if.end5.i
	movq	32(%rbx), %rdi
	movq	(%rdi), %rax
	callq	*32(%rax)
	movq	112(%rbx), %rdi
	movq	%rax, 112(%rbx)
	testq	%rdi, %rdi
	je	.LBB217_8
# %bb.7:                                # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEEEclEPS5_.exit.i.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB217_8:                              # %_ZN7testing8internal13ParamIteratorISt5tupleIJlllEEEaSERKS4_.exit.i
	movq	120(%rbx), %rdi
	movq	(%rdi), %rax
	callq	*24(%rax)
	movq	80(%rbx), %rsi
	movq	120(%rbx), %rdi
	cmpq	%rsi, %rdi
	je	.LBB217_10
# %bb.9:                                # %_ZNK7testing8internal13ParamIteratorISt4pairIllEEneERKS4_.exit.i
	movq	(%rdi), %rax
	callq	*48(%rax)
	testb	%al, %al
	je	.LBB217_13
.LBB217_10:                             # %if.end5.i37
	movq	40(%rbx), %rdi
	movq	(%rdi), %rax
	callq	*32(%rax)
	movq	120(%rbx), %rdi
	movq	%rax, 120(%rbx)
	testq	%rdi, %rdi
	je	.LBB217_12
# %bb.11:                               # %_ZNKSt14default_deleteIN7testing8internal22ParamIteratorInterfaceISt4pairIllEEEEclEPS5_.exit.i.i.i
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB217_12:                             # %_ZN7testing8internal13ParamIteratorISt4pairIllEEaSERKS4_.exit.i
	movq	128(%rbx), %rdi
	movq	(%rdi), %rax
	callq	*24(%rax)
	movq	88(%rbx), %rsi
	movq	128(%rbx), %rdi
	cmpq	%rsi, %rdi
	je	.LBB217_13
# %bb.14:                               # %lor.rhs.i.i.i.i
	movq	(%rdi), %rax
	movq	48(%rax), %rax
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmpq	*%rax                           # TAILCALL
.LBB217_13:                             # %cleanup.cont
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end217:
	.size	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE12AdvanceIfEndILm3EEEvv, .Lfunc_end217-_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE12AdvanceIfEndILm3EEEvv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEEKNS0_22ParamIteratorInterfaceIS8_IJS5_S7_S9_ddEEEEEEPT_PT0_,"axG",@progbits,_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEEKNS0_22ParamIteratorInterfaceIS8_IJS5_S7_S9_ddEEEEEEPT_PT0_,comdat
	.weak	_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEEKNS0_22ParamIteratorInterfaceIS8_IJS5_S7_S9_ddEEEEEEPT_PT0_ # -- Begin function _ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEEKNS0_22ParamIteratorInterfaceIS8_IJS5_S7_S9_ddEEEEEEPT_PT0_
	.p2align	4, 0x90
	.type	_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEEKNS0_22ParamIteratorInterfaceIS8_IJS5_S7_S9_ddEEEEEEPT_PT0_,@function
_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEEKNS0_22ParamIteratorInterfaceIS8_IJS5_S7_S9_ddEEEEEEPT_PT0_: # @_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEEKNS0_22ParamIteratorInterfaceIS8_IJS5_S7_S9_ddEEEEEEPT_PT0_
.Lfunc_begin51:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception51
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -16
	testq	%rdi, %rdi
	je	.LBB218_10
# %bb.1:                                # %typeid.end
	movq	%rdi, %rbx
	movq	(%rdi), %rax
	movq	-8(%rax), %rax
	movq	8(%rax), %rdi
	cmpq	$_ZTSN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE, %rdi
	je	.LBB218_2
# %bb.3:                                # %lor.rhs.i
	cmpb	$42, (%rdi)
	jne	.LBB218_5
# %bb.4:
	xorl	%eax, %eax
	movzbl	%al, %edi
	callq	_ZN7testing8internal6IsTrueEb
	testb	%al, %al
	je	.LBB218_7
	jmp	.LBB218_9
.LBB218_2:
	movb	$1, %al
	movzbl	%al, %edi
	callq	_ZN7testing8internal6IsTrueEb
	testb	%al, %al
	je	.LBB218_7
	jmp	.LBB218_9
.LBB218_5:                              # %land.rhs.i
	movl	$_ZTSN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE, %esi
	callq	strcmp
	testl	%eax, %eax
	sete	%al
	movzbl	%al, %edi
	callq	_ZN7testing8internal6IsTrueEb
	testb	%al, %al
	jne	.LBB218_9
.LBB218_7:                              # %if.else
	leaq	8(%rsp), %rdi
	movl	$.L.str.5, %edx
	movl	$3, %esi
	movl	$1114, %ecx                     # imm = 0x45A
	callq	_ZN7testing8internal8GTestLogC1ENS0_16GTestLogSeverityEPKci
.Ltmp818:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.6, %esi
	movl	$51, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp819:
# %bb.8:                                # %invoke.cont
	leaq	8(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
.LBB218_9:                              # %dynamic_cast.end
	movl	$_ZTIN7testing8internal22ParamIteratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE, %esi
	movl	$_ZTIN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE, %edx
	movq	%rbx, %rdi
	xorl	%ecx, %ecx
	callq	__dynamic_cast
	addq	$16, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB218_10:                             # %typeid.bad_typeid
	.cfi_def_cfa_offset 32
	callq	__cxa_bad_typeid
.LBB218_11:                             # %lpad
.Ltmp820:
	movq	%rax, %rbx
	leaq	8(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end218:
	.size	_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEEKNS0_22ParamIteratorInterfaceIS8_IJS5_S7_S9_ddEEEEEEPT_PT0_, .Lfunc_end218-_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEEKNS0_22ParamIteratorInterfaceIS8_IJS5_S7_S9_ddEEEEEEPT_PT0_
	.cfi_endproc
	.section	.gcc_except_table._ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEEKNS0_22ParamIteratorInterfaceIS8_IJS5_S7_S9_ddEEEEEEPT_PT0_,"aG",@progbits,_ZN7testing8internal27CheckedDowncastToActualTypeIKNS0_25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEEKNS0_22ParamIteratorInterfaceIS8_IJS5_S7_S9_ddEEEEEEPT_PT0_,comdat
	.p2align	2
GCC_except_table218:
.Lexception51:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end51-.Lcst_begin51
.Lcst_begin51:
	.uleb128 .Lfunc_begin51-.Lfunc_begin51  # >> Call Site 1 <<
	.uleb128 .Ltmp818-.Lfunc_begin51        #   Call between .Lfunc_begin51 and .Ltmp818
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp818-.Lfunc_begin51        # >> Call Site 2 <<
	.uleb128 .Ltmp819-.Ltmp818              #   Call between .Ltmp818 and .Ltmp819
	.uleb128 .Ltmp820-.Lfunc_begin51        #     jumps to .Ltmp820
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp819-.Lfunc_begin51        # >> Call Site 3 <<
	.uleb128 .Lfunc_end218-.Ltmp819         #   Call between .Ltmp819 and .Lfunc_end218
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end51:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EED0Ev,"axG",@progbits,_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EED0Ev,comdat
	.weak	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EED0Ev # -- Begin function _ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.p2align	4, 0x90
	.type	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EED0Ev,@function
_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EED0Ev: # @_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.cfi_startproc
# %bb.0:                                # %entry
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end219:
	.size	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EED0Ev, .Lfunc_end219-_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,"axG",@progbits,_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,comdat
	.weak	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv # -- Begin function _ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.p2align	4, 0x90
	.type	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,@function
_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv: # @_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.cfi_startproc
# %bb.0:                                # %entry
	movq	16(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB220_1
# %bb.2:                                # %delete.notnull
	movq	(%rdi), %rax
	jmpq	*8(%rax)                        # TAILCALL
.LBB220_1:                              # %delete.end
	retq
.Lfunc_end220:
	.size	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv, .Lfunc_end220-_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,"axG",@progbits,_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,comdat
	.weak	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv # -- Begin function _ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.p2align	4, 0x90
	.type	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,@function
_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv: # @_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_startproc
# %bb.0:                                # %entry
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end221:
	.size	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv, .Lfunc_end221-_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,"axG",@progbits,_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,comdat
	.weak	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info # -- Begin function _ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.p2align	4, 0x90
	.type	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,@function
_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info: # @_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.cfi_startproc
# %bb.0:                                # %entry
	xorl	%eax, %eax
	retq
.Lfunc_end222:
	.size	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info, .Lfunc_end222-_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEE8GetParamEv,"axG",@progbits,_ZN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEE8GetParamEv,comdat
	.weak	_ZN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEE8GetParamEv # -- Begin function _ZN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEE8GetParamEv
	.p2align	4, 0x90
	.type	_ZN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEE8GetParamEv,@function
_ZN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEE8GetParamEv: # @_ZN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEE8GetParamEv
.Lfunc_begin52:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception52
# %bb.0:                                # %entry
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -16
	xorl	%edi, %edi
	cmpq	$0, _ZN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEE10parameter_E(%rip)
	setne	%dil
	callq	_ZN7testing8internal6IsTrueEb
	testb	%al, %al
	jne	.LBB223_5
# %bb.1:                                # %if.else
	leaq	8(%rsp), %rdi
	movl	$.L.str.73, %edx
	movl	$3, %esi
	movl	$1854, %ecx                     # imm = 0x73E
	callq	_ZN7testing8internal8GTestLogC1ENS0_16GTestLogSeverityEPKci
.Ltmp821:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.74, %esi
	movl	$40, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp822:
# %bb.2:                                # %invoke.cont
.Ltmp823:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.75, %esi
	movl	$64, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp824:
# %bb.3:                                # %invoke.cont3
.Ltmp825:
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.76, %esi
	movl	$52, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp826:
# %bb.4:                                # %invoke.cont5
	leaq	8(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
.LBB223_5:                              # %if.end
	movq	_ZN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEE10parameter_E(%rip), %rax
	addq	$16, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB223_6:                              # %lpad
	.cfi_def_cfa_offset 32
.Ltmp827:
	movq	%rax, %rbx
	leaq	8(%rsp), %rdi
	callq	_ZN7testing8internal8GTestLogD1Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end223:
	.size	_ZN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEE8GetParamEv, .Lfunc_end223-_ZN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEE8GetParamEv
	.cfi_endproc
	.section	.gcc_except_table._ZN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEE8GetParamEv,"aG",@progbits,_ZN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEE8GetParamEv,comdat
	.p2align	2
GCC_except_table223:
.Lexception52:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end52-.Lcst_begin52
.Lcst_begin52:
	.uleb128 .Lfunc_begin52-.Lfunc_begin52  # >> Call Site 1 <<
	.uleb128 .Ltmp821-.Lfunc_begin52        #   Call between .Lfunc_begin52 and .Ltmp821
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp821-.Lfunc_begin52        # >> Call Site 2 <<
	.uleb128 .Ltmp826-.Ltmp821              #   Call between .Ltmp821 and .Ltmp826
	.uleb128 .Ltmp827-.Lfunc_begin52        #     jumps to .Ltmp827
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp826-.Lfunc_begin52        # >> Call Site 3 <<
	.uleb128 .Lfunc_end223-.Ltmp826         #   Call between .Ltmp826 and .Lfunc_end223
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end52:
	.p2align	2
                                        # -- End function
	.section	.text.startup,"ax",@progbits
	.p2align	4, 0x90                         # -- Begin function _GLOBAL__sub_I_MmaSyncMultiLdsTest_32x32_NT_2x2.cpp
	.type	_GLOBAL__sub_I_MmaSyncMultiLdsTest_32x32_NT_2x2.cpp,@function
_GLOBAL__sub_I_MmaSyncMultiLdsTest_32x32_NT_2x2.cpp: # @_GLOBAL__sub_I_MmaSyncMultiLdsTest_32x32_NT_2x2.cpp
.Lfunc_begin53:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception53
# %bb.0:                                # %entry
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$112, %rsp
	.cfi_def_cfa_offset 160
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movl	$_ZStL8__ioinit, %edi
	callq	_ZNSt8ios_base4InitC1Ev
	movl	$_ZNSt8ios_base4InitD1Ev, %edi
	movl	$_ZStL8__ioinit, %esi
	movl	$__dso_handle, %edx
	callq	__cxa_atexit
	callq	_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test13AddToRegistryEv
	movl	%eax, _ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test24gtest_registering_dummy_E(%rip)
	callq	_ZN7testing8UnitTest11GetInstanceEv
	movq	%rax, %rdi
	callq	_ZN7testing8UnitTest27parameterized_test_registryEv
	movq	%rax, %r14
	leaq	96(%rsp), %r12
	movq	%r12, 80(%rsp)
	movq	$57, 40(%rsp)
	leaq	80(%rsp), %rdi
	leaq	40(%rsp), %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
	movq	%rax, 80(%rsp)
	movq	40(%rsp), %rcx
	movq	%rcx, 96(%rsp)
	movups	.L.str.2(%rip), %xmm0
	movups	%xmm0, (%rax)
	movups	.L.str.2+16(%rip), %xmm0
	movups	%xmm0, 16(%rax)
	movups	.L.str.2+32(%rip), %xmm0
	movups	%xmm0, 32(%rax)
	movups	.L.str.2+41(%rip), %xmm0
	movups	%xmm0, 41(%rax)
	movq	%rcx, 88(%rsp)
	movb	$0, (%rax,%rcx)
	leaq	56(%rsp), %r13
	movq	%r13, 40(%rsp)
	movq	80(%rsp), %r15
	movq	88(%rsp), %rbx
	movq	%rbx, 8(%rsp)
	cmpq	$15, %rbx
	jbe	.LBB224_1
# %bb.2:                                # %if.then4.i.i.i.i.i.i
.Ltmp828:
	leaq	40(%rsp), %rdi
	leaq	8(%rsp), %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp829:
# %bb.3:                                # %call5.i.i.i16.i.i.noexc.i
	movq	%rax, 40(%rsp)
	movq	8(%rsp), %rcx
	movq	%rcx, 56(%rsp)
	testq	%rbx, %rbx
	jne	.LBB224_5
	jmp	.LBB224_8
.LBB224_1:                              # %if.end.if.end6_crit_edge.i.i.i.i.i.i
	movq	%r13, %rax
	testq	%rbx, %rbx
	je	.LBB224_8
.LBB224_5:                              # %if.end6.i.i.i.i.i.i
	cmpq	$1, %rbx
	jne	.LBB224_7
# %bb.6:                                # %if.then.i.i.i.i.i.i.i.i
	movb	(%r15), %cl
	movb	%cl, (%rax)
	jmp	.LBB224_8
.LBB224_7:                              # %if.end.i.i.i.i.i.i.i.i.i
	movq	%rax, %rdi
	movq	%r15, %rsi
	movq	%rbx, %rdx
	callq	memcpy@PLT
.LBB224_8:                              # %invoke.cont4.i
	movq	8(%rsp), %rax
	movq	%rax, 48(%rsp)
	movq	40(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movl	$89, 72(%rsp)
.Ltmp831:
	leaq	40(%rsp), %rdx
	movl	$.L.str, %esi
	movq	%r14, %rdi
	callq	_ZN7testing8internal30ParameterizedTestSuiteRegistry25GetTestSuitePatternHolderI29MmaSyncMultiLdsTest32x32NT2x2EEPNS0_26ParameterizedTestSuiteInfoIT_EEPKcNS0_12CodeLocationE
.Ltmp832:
# %bb.9:                                # %invoke.cont6.i
	leaq	24(%rsp), %rbx
	movq	%rbx, 8(%rsp)
	movabsq	$7958534866149926215, %rcx      # imm = 0x6E72654B6D6D6547
	movq	%rcx, 24(%rsp)
	movabsq	$8319401290705429870, %rcx      # imm = 0x73747365546C656E
	movq	%rcx, 31(%rsp)
	movq	$15, 16(%rsp)
	movb	$0, 39(%rsp)
.Ltmp834:
	leaq	8(%rsp), %rsi
	movl	$_ZL65gtest_GemmKernelTestsMmaSyncMultiLdsTest32x32NT2x2_EvalGenerator_v, %edx
	movl	$_ZL68gtest_GemmKernelTestsMmaSyncMultiLdsTest32x32NT2x2_EvalGenerateName_B5cxx11RKN7testing13TestParamInfoISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE, %ecx
	movl	$.L.str.2, %r8d
	movq	%rax, %rdi
	movl	$89, %r9d
	callq	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E25AddTestSuiteInstantiationERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFNS0_14ParamGeneratorISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllESD_IJlllEEddEEEEvEPFS9_RKNS_13TestParamInfoISK_EEEPKci
.Ltmp835:
# %bb.10:                               # %invoke.cont13.i
	movq	8(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB224_12
# %bb.11:                               # %if.then.i.i.i
	callq	_ZdlPv
.LBB224_12:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
	movq	40(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB224_14
# %bb.13:                               # %if.then.i.i.i.i
	callq	_ZdlPv
.LBB224_14:                             # %_ZN7testing8internal12CodeLocationD2Ev.exit.i
	movq	80(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB224_16
# %bb.15:                               # %if.then.i.i48.i
	callq	_ZdlPv
.LBB224_16:                             # %__cxx_global_var_init.29.exit
	addq	$112, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB224_17:                             # %lpad3.i
	.cfi_def_cfa_offset 160
.Ltmp830:
	movq	%rax, %r14
	movq	80(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB224_25
	jmp	.LBB224_24
.LBB224_19:                             # %lpad12.i
.Ltmp836:
	movq	%rax, %r14
	movq	8(%rsp), %rdi
	cmpq	%rbx, %rdi
	jne	.LBB224_20
# %bb.21:                               # %ehcleanup17.i
	movq	40(%rsp), %rdi
	cmpq	%r13, %rdi
	jne	.LBB224_22
.LBB224_23:                             # %ehcleanup18.i
	movq	80(%rsp), %rdi
	cmpq	%r12, %rdi
	jne	.LBB224_24
.LBB224_25:                             # %ehcleanup19.i
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB224_20:                             # %if.then.i.i53.i
	callq	_ZdlPv
	movq	40(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB224_23
	jmp	.LBB224_22
.LBB224_18:                             # %lpad5.i
.Ltmp833:
	movq	%rax, %r14
	movq	40(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB224_23
.LBB224_22:                             # %if.then.i.i.i58.i
	callq	_ZdlPv
	movq	80(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB224_25
.LBB224_24:                             # %if.then.i.i63.i
	callq	_ZdlPv
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end224:
	.size	_GLOBAL__sub_I_MmaSyncMultiLdsTest_32x32_NT_2x2.cpp, .Lfunc_end224-_GLOBAL__sub_I_MmaSyncMultiLdsTest_32x32_NT_2x2.cpp
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table224:
.Lexception53:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end53-.Lcst_begin53
.Lcst_begin53:
	.uleb128 .Lfunc_begin53-.Lfunc_begin53  # >> Call Site 1 <<
	.uleb128 .Ltmp828-.Lfunc_begin53        #   Call between .Lfunc_begin53 and .Ltmp828
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp828-.Lfunc_begin53        # >> Call Site 2 <<
	.uleb128 .Ltmp829-.Ltmp828              #   Call between .Ltmp828 and .Ltmp829
	.uleb128 .Ltmp830-.Lfunc_begin53        #     jumps to .Ltmp830
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp829-.Lfunc_begin53        # >> Call Site 3 <<
	.uleb128 .Ltmp831-.Ltmp829              #   Call between .Ltmp829 and .Ltmp831
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp831-.Lfunc_begin53        # >> Call Site 4 <<
	.uleb128 .Ltmp832-.Ltmp831              #   Call between .Ltmp831 and .Ltmp832
	.uleb128 .Ltmp833-.Lfunc_begin53        #     jumps to .Ltmp833
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp834-.Lfunc_begin53        # >> Call Site 5 <<
	.uleb128 .Ltmp835-.Ltmp834              #   Call between .Ltmp834 and .Ltmp835
	.uleb128 .Ltmp836-.Lfunc_begin53        #     jumps to .Ltmp836
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp835-.Lfunc_begin53        # >> Call Site 6 <<
	.uleb128 .Lfunc_end224-.Ltmp835         #   Call between .Ltmp835 and .Lfunc_end224
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end53:
	.p2align	2
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function __hip_module_ctor
	.type	__hip_module_ctor,@function
__hip_module_ctor:                      # @__hip_module_ctor
	.cfi_startproc
# %bb.0:                                # %entry
	subq	$40, %rsp
	.cfi_def_cfa_offset 48
	movq	__hip_gpubin_handle(%rip), %rdi
	testq	%rdi, %rdi
	jne	.LBB225_2
# %bb.1:                                # %if
	movl	$__hip_fatbin_wrapper, %edi
	callq	__hipRegisterFatBinary
	movq	%rax, %rdi
	movq	%rax, __hip_gpubin_handle(%rip)
.LBB225_2:                              # %exit
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rsp)
	movups	%xmm0, (%rsp)
	movl	$_Z15mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_, %esi
	movl	$.L__unnamed_3, %edx
	movl	$.L__unnamed_3, %ecx
	movl	$-1, %r8d
	xorl	%r9d, %r9d
	callq	__hipRegisterFunction
	movl	$__hip_module_dtor, %edi
	addq	$40, %rsp
	.cfi_def_cfa_offset 8
	jmp	atexit                          # TAILCALL
.Lfunc_end225:
	.size	__hip_module_ctor, .Lfunc_end225-__hip_module_ctor
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function __hip_module_dtor
	.type	__hip_module_dtor,@function
__hip_module_dtor:                      # @__hip_module_dtor
	.cfi_startproc
# %bb.0:                                # %entry
	pushq	%rax
	.cfi_def_cfa_offset 16
	movq	__hip_gpubin_handle(%rip), %rdi
	testq	%rdi, %rdi
	je	.LBB226_2
# %bb.1:                                # %if
	callq	__hipUnregisterFatBinary
	movq	$0, __hip_gpubin_handle(%rip)
.LBB226_2:                              # %exit
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end226:
	.size	__hip_module_dtor, .Lfunc_end226-__hip_module_dtor
	.cfi_endproc
                                        # -- End function
	.type	_ZTV44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test,@object # @_ZTV44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test
	.section	.rodata,"a",@progbits
	.globl	_ZTV44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test
	.p2align	3
_ZTV44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test:
	.quad	0
	.quad	_ZTI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test
	.quad	_ZN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEED2Ev
	.quad	_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD0Ev
	.quad	_ZN8GemmTest5SetUpEv
	.quad	_ZN8GemmTest8TearDownEv
	.quad	_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test8TestBodyEv
	.quad	_ZN7testing4Test5SetupEv
	.quad	_ZN8GemmTest9RunKernelEv
	.quad	-16
	.quad	_ZTI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test
	.quad	_ZThn16_N44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD1Ev
	.quad	_ZThn16_N44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestD0Ev
	.size	_ZTV44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test, 104

	.type	_ZTS44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test,@object # @_ZTS44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test
	.globl	_ZTS44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test
_ZTS44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test:
	.asciz	"44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test"
	.size	_ZTS44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test, 47

	.type	_ZTS29MmaSyncMultiLdsTest32x32NT2x2,@object # @_ZTS29MmaSyncMultiLdsTest32x32NT2x2
	.section	.rodata._ZTS29MmaSyncMultiLdsTest32x32NT2x2,"aG",@progbits,_ZTS29MmaSyncMultiLdsTest32x32NT2x2,comdat
	.weak	_ZTS29MmaSyncMultiLdsTest32x32NT2x2
_ZTS29MmaSyncMultiLdsTest32x32NT2x2:
	.asciz	"29MmaSyncMultiLdsTest32x32NT2x2"
	.size	_ZTS29MmaSyncMultiLdsTest32x32NT2x2, 32

	.type	_ZTS8GemmTest,@object           # @_ZTS8GemmTest
	.section	.rodata._ZTS8GemmTest,"aG",@progbits,_ZTS8GemmTest,comdat
	.weak	_ZTS8GemmTest
_ZTS8GemmTest:
	.asciz	"8GemmTest"
	.size	_ZTS8GemmTest, 10

	.type	_ZTSN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE,@object # @_ZTSN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE
	.section	.rodata._ZTSN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE,"aG",@progbits,_ZTSN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE,comdat
	.weak	_ZTSN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE
_ZTSN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE:
	.asciz	"N7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE"
	.size	_ZTSN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE, 87

	.type	_ZTSN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE,@object # @_ZTSN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE
	.section	.rodata._ZTSN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE,"aG",@progbits,_ZTSN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE,comdat
	.weak	_ZTSN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE
_ZTSN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE:
	.asciz	"N7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE"
	.size	_ZTSN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE, 92

	.type	_ZTIN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE,@object # @_ZTIN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE
	.section	.rodata._ZTIN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE,"aG",@progbits,_ZTIN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE,comdat
	.weak	_ZTIN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE
	.p2align	3
_ZTIN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE
	.size	_ZTIN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE, 16

	.type	_ZTIN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE,@object # @_ZTIN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE
	.section	.rodata._ZTIN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE,"aG",@progbits,_ZTIN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE,comdat
	.weak	_ZTIN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE
	.p2align	3
_ZTIN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE:
	.quad	_ZTVN10__cxxabiv121__vmi_class_type_infoE+16
	.quad	_ZTSN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE
	.long	0                               # 0x0
	.long	2                               # 0x2
	.quad	_ZTIN7testing4TestE
	.quad	2                               # 0x2
	.quad	_ZTIN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE
	.quad	4098                            # 0x1002
	.size	_ZTIN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE, 56

	.type	_ZTI8GemmTest,@object           # @_ZTI8GemmTest
	.section	.rodata._ZTI8GemmTest,"aG",@progbits,_ZTI8GemmTest,comdat
	.weak	_ZTI8GemmTest
	.p2align	3
_ZTI8GemmTest:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTS8GemmTest
	.quad	_ZTIN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE
	.size	_ZTI8GemmTest, 24

	.type	_ZTI29MmaSyncMultiLdsTest32x32NT2x2,@object # @_ZTI29MmaSyncMultiLdsTest32x32NT2x2
	.section	.rodata._ZTI29MmaSyncMultiLdsTest32x32NT2x2,"aG",@progbits,_ZTI29MmaSyncMultiLdsTest32x32NT2x2,comdat
	.weak	_ZTI29MmaSyncMultiLdsTest32x32NT2x2
	.p2align	3
_ZTI29MmaSyncMultiLdsTest32x32NT2x2:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTS29MmaSyncMultiLdsTest32x32NT2x2
	.quad	_ZTI8GemmTest
	.size	_ZTI29MmaSyncMultiLdsTest32x32NT2x2, 24

	.type	_ZTI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test,@object # @_ZTI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test
	.section	.rodata,"a",@progbits
	.globl	_ZTI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test
	.p2align	3
_ZTI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTS44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test
	.quad	_ZTI29MmaSyncMultiLdsTest32x32NT2x2
	.size	_ZTI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test, 24

	.type	_ZStL8__ioinit,@object          # @_ZStL8__ioinit
	.local	_ZStL8__ioinit
	.comm	_ZStL8__ioinit,1,1
	.hidden	__dso_handle
	.type	_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test24gtest_registering_dummy_E,@object # @_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test24gtest_registering_dummy_E
	.bss
	.globl	_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test24gtest_registering_dummy_E
	.p2align	2
_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test24gtest_registering_dummy_E:
	.long	0                               # 0x0
	.size	_ZN44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test24gtest_registering_dummy_E, 4

	.type	.L.str,@object                  # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"MmaSyncMultiLdsTest32x32NT2x2"
	.size	.L.str, 30

	.type	.L.str.2,@object                # @.str.2
.L.str.2:
	.asciz	"/WMMA/test/gemm/test/MmaSyncMultiLdsTest_32x32_NT_2x2.cpp"
	.size	.L.str.2, 58

	.type	.L.str.3,@object                # @.str.3
.L.str.3:
	.asciz	"RunKernel"
	.size	.L.str.3, 10

	.type	_ZN7testing8internal12TypeIdHelperI29MmaSyncMultiLdsTest32x32NT2x2E6dummy_E,@object # @_ZN7testing8internal12TypeIdHelperI29MmaSyncMultiLdsTest32x32NT2x2E6dummy_E
	.section	.bss._ZN7testing8internal12TypeIdHelperI29MmaSyncMultiLdsTest32x32NT2x2E6dummy_E,"aGw",@nobits,_ZN7testing8internal12TypeIdHelperI29MmaSyncMultiLdsTest32x32NT2x2E6dummy_E,comdat
	.weak	_ZN7testing8internal12TypeIdHelperI29MmaSyncMultiLdsTest32x32NT2x2E6dummy_E
_ZN7testing8internal12TypeIdHelperI29MmaSyncMultiLdsTest32x32NT2x2E6dummy_E:
	.byte	0                               # 0x0
	.size	_ZN7testing8internal12TypeIdHelperI29MmaSyncMultiLdsTest32x32NT2x2E6dummy_E, 1

	.type	.L.str.4,@object                # @.str.4
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.4:
	.asciz	"basic_string::_M_construct null not valid"
	.size	.L.str.4, 42

	.type	_ZTSN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE,@object # @_ZTSN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE
	.section	.rodata._ZTSN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE,"aG",@progbits,_ZTSN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE,comdat
	.weak	_ZTSN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE
_ZTSN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE:
	.asciz	"N7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE"
	.size	_ZTSN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE, 81

	.type	_ZTSN7testing8internal30ParameterizedTestSuiteInfoBaseE,@object # @_ZTSN7testing8internal30ParameterizedTestSuiteInfoBaseE
	.section	.rodata._ZTSN7testing8internal30ParameterizedTestSuiteInfoBaseE,"aG",@progbits,_ZTSN7testing8internal30ParameterizedTestSuiteInfoBaseE,comdat
	.weak	_ZTSN7testing8internal30ParameterizedTestSuiteInfoBaseE
_ZTSN7testing8internal30ParameterizedTestSuiteInfoBaseE:
	.asciz	"N7testing8internal30ParameterizedTestSuiteInfoBaseE"
	.size	_ZTSN7testing8internal30ParameterizedTestSuiteInfoBaseE, 52

	.type	_ZTIN7testing8internal30ParameterizedTestSuiteInfoBaseE,@object # @_ZTIN7testing8internal30ParameterizedTestSuiteInfoBaseE
	.section	.rodata._ZTIN7testing8internal30ParameterizedTestSuiteInfoBaseE,"aG",@progbits,_ZTIN7testing8internal30ParameterizedTestSuiteInfoBaseE,comdat
	.weak	_ZTIN7testing8internal30ParameterizedTestSuiteInfoBaseE
	.p2align	3
_ZTIN7testing8internal30ParameterizedTestSuiteInfoBaseE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSN7testing8internal30ParameterizedTestSuiteInfoBaseE
	.size	_ZTIN7testing8internal30ParameterizedTestSuiteInfoBaseE, 16

	.type	_ZTIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE,@object # @_ZTIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE
	.section	.rodata._ZTIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE,"aG",@progbits,_ZTIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE,comdat
	.weak	_ZTIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE
	.p2align	3
_ZTIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE
	.quad	_ZTIN7testing8internal30ParameterizedTestSuiteInfoBaseE
	.size	_ZTIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE, 24

	.type	.L.str.5,@object                # @.str.5
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.5:
	.asciz	"/WMMA/build/_deps/googletest-src/googletest/include/gtest/internal/gtest-port.h"
	.size	.L.str.5, 80

	.type	.L.str.6,@object                # @.str.6
.L.str.6:
	.asciz	"Condition typeid(*base) == typeid(Derived) failed. "
	.size	.L.str.6, 52

	.type	_ZTVN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE,@object # @_ZTVN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE
	.section	.rodata._ZTVN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE,"aG",@progbits,_ZTVN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE,comdat
	.weak	_ZTVN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE
	.p2align	3
_ZTVN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE:
	.quad	0
	.quad	_ZTIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE
	.quad	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2ED2Ev
	.quad	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2ED0Ev
	.quad	_ZNK7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E16GetTestSuiteNameB5cxx11Ev
	.quad	_ZNK7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E18GetTestSuiteTypeIdEv
	.quad	_ZN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E13RegisterTestsEv
	.size	_ZTVN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE, 56

	.type	.L.str.7,@object                # @.str.7
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.7:
	.asciz	"/"
	.size	.L.str.7, 2

	.type	.L.str.8,@object                # @.str.8
.L.str.8:
	.asciz	"/WMMA/build/_deps/googletest-src/googletest/include/gtest/internal/gtest-param-util.h"
	.size	.L.str.8, 86

	.type	.L.str.9,@object                # @.str.9
.L.str.9:
	.asciz	"Condition IsValidParamName(param_name) failed. "
	.size	.L.str.9, 48

	.type	.L.str.10,@object               # @.str.10
.L.str.10:
	.asciz	"Parameterized test name '"
	.size	.L.str.10, 26

	.type	.L.str.11,@object               # @.str.11
.L.str.11:
	.asciz	"' is invalid, in "
	.size	.L.str.11, 18

	.type	.L.str.12,@object               # @.str.12
.L.str.12:
	.asciz	" line "
	.size	.L.str.12, 7

	.type	.L.str.13,@object               # @.str.13
.L.str.13:
	.asciz	"Condition test_param_names.count(param_name) == 0 failed. "
	.size	.L.str.13, 59

	.type	.L.str.14,@object               # @.str.14
.L.str.14:
	.asciz	"Duplicate parameterized test name '"
	.size	.L.str.14, 36

	.type	.L.str.15,@object               # @.str.15
.L.str.15:
	.asciz	"', in "
	.size	.L.str.15, 7

	.type	.L.str.16,@object               # @.str.16
.L.str.16:
	.asciz	"basic_string::append"
	.size	.L.str.16, 21

	.type	.L.str.17,@object               # @.str.17
.L.str.17:
	.asciz	"("
	.size	.L.str.17, 2

	.type	.L.str.18,@object               # @.str.18
.L.str.18:
	.asciz	")"
	.size	.L.str.18, 2

	.type	.L.str.19,@object               # @.str.19
.L.str.19:
	.asciz	", "
	.size	.L.str.19, 3

	.type	.L.str.20,@object               # @.str.20
.L.str.20:
	.asciz	"(nullptr)"
	.size	.L.str.20, 10

	.type	.L.str.21,@object               # @.str.21
.L.str.21:
	.asciz	"(ptr = "
	.size	.L.str.21, 8

	.type	.L.str.22,@object               # @.str.22
.L.str.22:
	.asciz	", value = "
	.size	.L.str.22, 11

	.type	.L.str.23,@object               # @.str.23
.L.str.23:
	.asciz	"/WMMA/build/_deps/googletest-src/googletest/include/gtest/internal/gtest-internal.h"
	.size	.L.str.23, 84

	.type	.L.str.24,@object               # @.str.24
.L.str.24:
	.asciz	"Condition !test_case_fp || !test_suite_fp failed. "
	.size	.L.str.24, 51

	.type	.L.str.25,@object               # @.str.25
.L.str.25:
	.asciz	"Test can not provide both SetUpTestSuite and SetUpTestCase, please make sure there is only one present at "
	.size	.L.str.25, 107

	.type	.L.str.26,@object               # @.str.26
.L.str.26:
	.asciz	":"
	.size	.L.str.26, 2

	.type	.L.str.27,@object               # @.str.27
.L.str.27:
	.asciz	"Test can not provide both TearDownTestSuite and TearDownTestCase, please make sure there is only one present at"
	.size	.L.str.27, 112

	.type	_ZTVSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTVSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTVSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTVSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTVSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3
_ZTVSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE:
	.quad	0
	.quad	_ZTISt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.quad	_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.quad	_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.quad	_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.quad	_ZNSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.size	_ZTVSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE, 56

	.type	_ZTSSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTSSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTSSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTSSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTSSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE
_ZTSSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE:
	.asciz	"St15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE"
	.size	_ZTSSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE, 141

	.type	_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE:
	.asciz	"St16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE"
	.size	_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE, 52

	.type	_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE:
	.asciz	"St11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE"
	.size	_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE, 47

	.type	_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3
_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.size	_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE, 16

	.type	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3
_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.size	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE, 24

	.type	_ZTISt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTISt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTISt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTISt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTISt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3
_ZTISt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.size	_ZTISt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE, 24

	.type	_ZTVN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE,@object # @_ZTVN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE
	.section	.rodata._ZTVN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE,"aG",@progbits,_ZTVN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE,comdat
	.weak	_ZTVN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE
	.p2align	3
_ZTVN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE:
	.quad	0
	.quad	_ZTIN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE
	.quad	_ZN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEED2Ev
	.quad	_ZN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED0Ev
	.quad	_ZN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestE17CreateTestFactoryESt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES4_IJlllEEddEE
	.size	_ZTVN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE, 40

	.type	_ZTSN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE,@object # @_ZTSN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE
	.section	.rodata._ZTSN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE,"aG",@progbits,_ZTSN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE,comdat
	.weak	_ZTSN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE
_ZTSN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE:
	.asciz	"N7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE"
	.size	_ZTSN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE, 85

	.type	_ZTSN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE,@object # @_ZTSN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE
	.section	.rodata._ZTSN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE,"aG",@progbits,_ZTSN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE,comdat
	.weak	_ZTSN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE
_ZTSN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE:
	.asciz	"N7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE"
	.size	_ZTSN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE, 102

	.type	_ZTIN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE,@object # @_ZTIN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE
	.section	.rodata._ZTIN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE,"aG",@progbits,_ZTIN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE,comdat
	.weak	_ZTIN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE
	.p2align	3
_ZTIN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE
	.size	_ZTIN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE, 16

	.type	_ZTIN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE,@object # @_ZTIN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE
	.section	.rodata._ZTIN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE,"aG",@progbits,_ZTIN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE,comdat
	.weak	_ZTIN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE
	.p2align	3
_ZTIN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE
	.quad	_ZTIN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE
	.size	_ZTIN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE, 24

	.type	_ZTVN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE,@object # @_ZTVN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE
	.section	.rodata._ZTVN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE,"aG",@progbits,_ZTVN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE,comdat
	.weak	_ZTVN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE
	.p2align	3
_ZTVN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE:
	.quad	0
	.quad	_ZTIN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE
	.quad	_ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED2Ev
	.quad	_ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestED0Ev
	.quad	_ZN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestE10CreateTestEv
	.size	_ZTVN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE, 40

	.type	_ZTSN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE,@object # @_ZTSN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE
	.section	.rodata._ZTSN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE,"aG",@progbits,_ZTSN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE,comdat
	.weak	_ZTSN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE
_ZTSN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE:
	.asciz	"N7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE"
	.size	_ZTSN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE, 94

	.type	_ZTSN7testing8internal15TestFactoryBaseE,@object # @_ZTSN7testing8internal15TestFactoryBaseE
	.section	.rodata._ZTSN7testing8internal15TestFactoryBaseE,"aG",@progbits,_ZTSN7testing8internal15TestFactoryBaseE,comdat
	.weak	_ZTSN7testing8internal15TestFactoryBaseE
_ZTSN7testing8internal15TestFactoryBaseE:
	.asciz	"N7testing8internal15TestFactoryBaseE"
	.size	_ZTSN7testing8internal15TestFactoryBaseE, 37

	.type	_ZTIN7testing8internal15TestFactoryBaseE,@object # @_ZTIN7testing8internal15TestFactoryBaseE
	.section	.rodata._ZTIN7testing8internal15TestFactoryBaseE,"aG",@progbits,_ZTIN7testing8internal15TestFactoryBaseE,comdat
	.weak	_ZTIN7testing8internal15TestFactoryBaseE
	.p2align	3
_ZTIN7testing8internal15TestFactoryBaseE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSN7testing8internal15TestFactoryBaseE
	.size	_ZTIN7testing8internal15TestFactoryBaseE, 16

	.type	_ZTIN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE,@object # @_ZTIN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE
	.section	.rodata._ZTIN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE,"aG",@progbits,_ZTIN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE,comdat
	.weak	_ZTIN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE
	.p2align	3
_ZTIN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE
	.quad	_ZTIN7testing8internal15TestFactoryBaseE
	.size	_ZTIN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE, 24

	.type	_ZN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEE10parameter_E,@object # @_ZN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEE10parameter_E
	.section	.bss._ZN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEE10parameter_E,"aGw",@nobits,_ZN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEE10parameter_E,comdat
	.weak	_ZN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEE10parameter_E
	.p2align	3
_ZN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEE10parameter_E:
	.quad	0
	.size	_ZN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEE10parameter_E, 8

	.type	.L.str.30,@object               # @.str.30
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.30:
	.asciz	"GemmKernelTests"
	.size	.L.str.30, 16

	.type	_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE,@object # @_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE
	.section	.rodata._ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE,"aG",@progbits,_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE,comdat
	.weak	_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE
	.p2align	3
_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE:
	.quad	0
	.quad	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE
	.quad	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEED2Ev
	.quad	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEED0Ev
	.quad	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE5BeginEv
	.quad	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE3EndEv
	.size	_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE, 48

	.type	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE,@object # @_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE
	.section	.rodata._ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE,"aG",@progbits,_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE,comdat
	.weak	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE
_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE:
	.asciz	"N7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE"
	.size	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE, 78

	.type	_ZTSN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEE,@object # @_ZTSN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEE
	.section	.rodata._ZTSN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEE,"aG",@progbits,_ZTSN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEE,comdat
	.weak	_ZTSN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEE
_ZTSN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEE:
	.asciz	"N7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEE"
	.size	_ZTSN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEE, 71

	.type	_ZTIN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEE,@object # @_ZTIN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEE
	.section	.rodata._ZTIN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEE,"aG",@progbits,_ZTIN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEE,comdat
	.weak	_ZTIN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEE
	.p2align	3
_ZTIN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEE
	.size	_ZTIN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEE, 16

	.type	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE,@object # @_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE
	.section	.rodata._ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE,"aG",@progbits,_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE,comdat
	.weak	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE
	.p2align	3
_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE
	.quad	_ZTIN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEE
	.size	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE, 24

	.type	_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE,@object # @_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE
	.section	.rodata._ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE,"aG",@progbits,_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE,comdat
	.weak	_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE
	.p2align	3
_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE:
	.quad	0
	.quad	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE
	.quad	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorD2Ev
	.quad	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorD0Ev
	.quad	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator13BaseGeneratorEv
	.quad	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator7AdvanceEv
	.quad	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator5CloneEv
	.quad	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator7CurrentEv
	.quad	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS4_EE
	.size	_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE, 72

	.type	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE,@object # @_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE
	.section	.rodata._ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE,"aG",@progbits,_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE,comdat
	.weak	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE
_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE:
	.asciz	"N7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE"
	.size	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE, 87

	.type	_ZTSN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEE,@object # @_ZTSN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEE
	.section	.rodata._ZTSN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEE,"aG",@progbits,_ZTSN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEE,comdat
	.weak	_ZTSN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEE
_ZTSN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEE:
	.asciz	"N7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEE"
	.size	_ZTSN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEE, 70

	.type	_ZTIN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEE,@object # @_ZTIN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEE
	.section	.rodata._ZTIN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEE,"aG",@progbits,_ZTIN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEE,comdat
	.weak	_ZTIN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEE
	.p2align	3
_ZTIN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEE
	.size	_ZTIN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEE, 16

	.type	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE,@object # @_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE
	.section	.rodata._ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE,"aG",@progbits,_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE,comdat
	.weak	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE
	.p2align	3
_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE
	.quad	_ZTIN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEE
	.size	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE, 24

	.type	.L.str.31,@object               # @.str.31
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.31:
	.asciz	"Condition BaseGenerator() == other.BaseGenerator() failed. "
	.size	.L.str.31, 60

	.type	.L.str.32,@object               # @.str.32
.L.str.32:
	.asciz	"The program attempted to compare iterators "
	.size	.L.str.32, 44

	.type	.L.str.33,@object               # @.str.33
.L.str.33:
	.asciz	"from different generators."
	.size	.L.str.33, 27

	.type	_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3
_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE:
	.quad	0
	.quad	_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.quad	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.quad	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.quad	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.quad	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.size	_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE, 56

	.type	_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE
_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE:
	.asciz	"St15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE"
	.size	_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE, 122

	.type	_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3
_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.size	_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE, 24

	.type	_ZTSSt19_Sp_make_shared_tag,@object # @_ZTSSt19_Sp_make_shared_tag
	.section	.rodata._ZTSSt19_Sp_make_shared_tag,"aG",@progbits,_ZTSSt19_Sp_make_shared_tag,comdat
	.weak	_ZTSSt19_Sp_make_shared_tag
_ZTSSt19_Sp_make_shared_tag:
	.asciz	"St19_Sp_make_shared_tag"
	.size	_ZTSSt19_Sp_make_shared_tag, 24

	.type	_ZTISt19_Sp_make_shared_tag,@object # @_ZTISt19_Sp_make_shared_tag
	.section	.rodata._ZTISt19_Sp_make_shared_tag,"aG",@progbits,_ZTISt19_Sp_make_shared_tag,comdat
	.weak	_ZTISt19_Sp_make_shared_tag
	.p2align	3
_ZTISt19_Sp_make_shared_tag:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSSt19_Sp_make_shared_tag
	.size	_ZTISt19_Sp_make_shared_tag, 16

	.type	_ZTVSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTVSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTVSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTVSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTVSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3
_ZTVSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE:
	.quad	0
	.quad	_ZTISt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.quad	_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.quad	_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.quad	_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.quad	_ZNSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.size	_ZTVSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE, 56

	.type	_ZTSSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTSSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTSSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTSSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTSSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE
_ZTSSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE:
	.asciz	"St23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE"
	.size	_ZTSSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE, 155

	.type	_ZTISt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTISt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTISt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTISt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTISt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3
_ZTISt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.size	_ZTISt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE, 24

	.type	_ZTV21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE,@object # @_ZTV21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE
	.section	.rodata._ZTV21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE,"aG",@progbits,_ZTV21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE,comdat
	.weak	_ZTV21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE
	.p2align	3
_ZTV21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE:
	.quad	0
	.quad	_ZTI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE
	.quad	_ZN7KernelID2Ev
	.quad	_ZN21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EED0Ev
	.quad	_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E5setupERK13ProblemParams
	.quad	_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEv
	.quad	_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E15validateResultsEv
	.quad	_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E13reportResultsEv
	.quad	_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8tearDownEv
	.quad	_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE11printHeaderERSo
	.quad	_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE11printKernelERSo
	.quad	_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE10kernelImplEv
	.quad	_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE8ldsUsageEv
	.quad	_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE7gridDimEv
	.quad	_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8blockDimEv
	.quad	_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11checkDeviceEv
	.quad	_ZNK21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE10checkSizesEv
	.quad	_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E8checkLdsEv
	.quad	_ZNK14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E11checkQuirksEv
	.quad	_ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E5resetEv
	.size	_ZTV21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE, 160

	.type	_ZTS21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE,@object # @_ZTS21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE
	.section	.rodata._ZTS21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE,"aG",@progbits,_ZTS21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE,comdat
	.weak	_ZTS21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE
_ZTS21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE:
	.asciz	"21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE"
	.size	_ZTS21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE, 90

	.type	_ZTS14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E,@object # @_ZTS14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E
	.section	.rodata._ZTS14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E,"aG",@progbits,_ZTS14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E,comdat
	.weak	_ZTS14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E
_ZTS14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E:
	.asciz	"14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E"
	.size	_ZTS14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E, 66

	.type	_ZTS7KernelI,@object            # @_ZTS7KernelI
	.section	.rodata._ZTS7KernelI,"aG",@progbits,_ZTS7KernelI,comdat
	.weak	_ZTS7KernelI
_ZTS7KernelI:
	.asciz	"7KernelI"
	.size	_ZTS7KernelI, 9

	.type	_ZTI7KernelI,@object            # @_ZTI7KernelI
	.section	.rodata._ZTI7KernelI,"aG",@progbits,_ZTI7KernelI,comdat
	.weak	_ZTI7KernelI
	.p2align	3
_ZTI7KernelI:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTS7KernelI
	.size	_ZTI7KernelI, 16

	.type	_ZTI14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E,@object # @_ZTI14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E
	.section	.rodata._ZTI14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E,"aG",@progbits,_ZTI14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E,comdat
	.weak	_ZTI14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E
	.p2align	3
_ZTI14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTS14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E
	.quad	_ZTI7KernelI
	.size	_ZTI14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E, 24

	.type	_ZTI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE,@object # @_ZTI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE
	.section	.rodata._ZTI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE,"aG",@progbits,_ZTI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE,comdat
	.weak	_ZTI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE
	.p2align	3
_ZTI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTS21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE
	.quad	_ZTI14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E
	.size	_ZTI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE, 24

	.type	.L.str.34,@object               # @.str.34
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.34:
	.asciz	"TBlkX, TBlkY, "
	.size	.L.str.34, 15

	.type	.L.str.35,@object               # @.str.35
.L.str.35:
	.asciz	"BlkM, BlkN, BlkK, "
	.size	.L.str.35, 19

	.type	.L.str.36,@object               # @.str.36
.L.str.36:
	.asciz	"MatM, MatN, MatK, "
	.size	.L.str.36, 19

	.type	.L.str.37,@object               # @.str.37
.L.str.37:
	.asciz	"alpha, lda, ldb, beta, ldc, ldd, "
	.size	.L.str.37, 34

	.type	.L.str.38,@object               # @.str.38
.L.str.38:
	.asciz	"LytA_LytB_LytC_LytD, "
	.size	.L.str.38, 22

	.type	.L.str.39,@object               # @.str.39
.L.str.39:
	.asciz	"Ti_To_Tc, "
	.size	.L.str.39, 11

	.type	.L.str.40,@object               # @.str.40
.L.str.40:
	.asciz	"elapsedMs, "
	.size	.L.str.40, 12

	.type	.L.str.41,@object               # @.str.41
.L.str.41:
	.asciz	"GFlops, "
	.size	.L.str.41, 9

	.type	.L.str.42,@object               # @.str.42
.L.str.42:
	.asciz	"GFlops/s, "
	.size	.L.str.42, 11

	.type	.L.str.43,@object               # @.str.43
.L.str.43:
	.asciz	"Efficiency(%), "
	.size	.L.str.43, 16

	.type	.L.str.44,@object               # @.str.44
.L.str.44:
	.asciz	"Result"
	.size	.L.str.44, 7

	.type	.L.str.45,@object               # @.str.45
.L.str.45:
	.asciz	"_"
	.size	.L.str.45, 2

	.type	.L.str.46,@object               # @.str.46
.L.str.46:
	.asciz	"n/a"
	.size	.L.str.46, 4

	.type	.L.str.47,@object               # @.str.47
.L.str.47:
	.asciz	"SKIPPED"
	.size	.L.str.47, 8

	.type	.L.str.48,@object               # @.str.48
.L.str.48:
	.asciz	"PASSED"
	.size	.L.str.48, 7

	.type	.L.str.49,@object               # @.str.49
.L.str.49:
	.asciz	"FAILED"
	.size	.L.str.49, 7

	.type	.L.str.50,@object               # @.str.50
.L.str.50:
	.asciz	"N"
	.size	.L.str.50, 2

	.type	.L.str.51,@object               # @.str.51
.L.str.51:
	.asciz	"T"
	.size	.L.str.51, 2

	.type	.L.str.52,@object               # @.str.52
.L.str.52:
	.asciz	"f16"
	.size	.L.str.52, 4

	.type	.L.str.53,@object               # @.str.53
.L.str.53:
	.asciz	"f32"
	.size	.L.str.53, 4

	.type	_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance,@object # @_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance
	.section	.bss._ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance,"aGw",@nobits,_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance,comdat
	.weak	_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance
	.p2align	3
_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance:
	.zero	8
	.size	_ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, 8

	.type	_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance,@object # @_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance
	.section	.bss._ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance,"aGw",@nobits,_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance,comdat
	.weak	_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance
	.p2align	3
_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance:
	.quad	0                               # 0x0
	.size	_ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance, 8

	.type	.L.str.54,@object               # @.str.54
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.54:
	.asciz	"hip error: '%s'(%d) at %s:%d\n"
	.size	.L.str.54, 30

	.type	.L.str.55,@object               # @.str.55
.L.str.55:
	.asciz	"/WMMA/test/HipResource_impl.h"
	.size	.L.str.55, 30

	.type	.L__unnamed_4,@object           # @0
.L__unnamed_4:
	.asciz	";unknown;unknown;0;0;;"
	.size	.L__unnamed_4, 23

	.type	.L__unnamed_2,@object           # @1
	.section	.rodata,"a",@progbits
	.p2align	3
.L__unnamed_2:
	.long	0                               # 0x0
	.long	514                             # 0x202
	.long	0                               # 0x0
	.long	0                               # 0x0
	.quad	.L__unnamed_4
	.size	.L__unnamed_2, 24

	.type	.L__unnamed_1,@object           # @2
	.p2align	3
.L__unnamed_1:
	.long	0                               # 0x0
	.long	2                               # 0x2
	.long	0                               # 0x0
	.long	0                               # 0x0
	.quad	.L__unnamed_4
	.size	.L__unnamed_1, 24

	.type	.L.str.62,@object               # @.str.62
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.62:
	.asciz	"/WMMA/test/gemm/GemmKernelBase_impl.h"
	.size	.L.str.62, 38

	.type	.L.str.63,@object               # @.str.63
.L.str.63:
	.asciz	"rocBLAS error: '%s'(%d) at %s:%d\n"
	.size	.L.str.63, 34

	.type	_ZZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance,@object # @_ZZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance
	.section	.bss._ZZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance,"aGw",@nobits,_ZZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance,comdat
	.weak	_ZZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance
	.p2align	3
_ZZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance:
	.zero	8
	.size	_ZZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance, 8

	.type	_ZGVZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance,@object # @_ZGVZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance
	.section	.bss._ZGVZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance,"aGw",@nobits,_ZGVZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance,comdat
	.weak	_ZGVZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance
	.p2align	3
_ZGVZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance:
	.quad	0                               # 0x0
	.size	_ZGVZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance, 8

	.type	_ZTSZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE0_,@object # @_ZTSZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE0_
	.section	.rodata._ZTSZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE0_,"aG",@progbits,_ZTSZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE0_,comdat
	.weak	_ZTSZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE0_
_ZTSZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE0_:
	.asciz	"ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE0_"
	.size	_ZTSZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE0_, 82

	.type	_ZTIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE0_,@object # @_ZTIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE0_
	.section	.rodata._ZTIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE0_,"aG",@progbits,_ZTIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE0_,comdat
	.weak	_ZTIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE0_
	.p2align	3
_ZTIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE0_:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE0_
	.size	_ZTIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE0_, 16

	.type	_ZTSZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE1_,@object # @_ZTSZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE1_
	.section	.rodata._ZTSZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE1_,"aG",@progbits,_ZTSZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE1_,comdat
	.weak	_ZTSZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE1_
_ZTSZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE1_:
	.asciz	"ZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE1_"
	.size	_ZTSZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE1_, 82

	.type	_ZTIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE1_,@object # @_ZTIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE1_
	.section	.rodata._ZTIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE1_,"aG",@progbits,_ZTIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE1_,comdat
	.weak	_ZTIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE1_
	.p2align	3
_ZTIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE1_:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE1_
	.size	_ZTIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE1_, 16

	.type	.L.str.65,@object               # @.str.65
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.65:
	.asciz	"Max relative error: "
	.size	.L.str.65, 21

	.type	.L.str.66,@object               # @.str.66
.L.str.66:
	.asciz	"mValidationResult"
	.size	.L.str.66, 18

	.type	.L.str.67,@object               # @.str.67
.L.str.67:
	.asciz	"false"
	.size	.L.str.67, 6

	.type	.L.str.68,@object               # @.str.68
.L.str.68:
	.asciz	"true"
	.size	.L.str.68, 5

	.type	.L.str.71,@object               # @.str.71
.L.str.71:
	.asciz	"MappingLds, LytLds, BlocksX, BlocksY, "
	.size	.L.str.71, 39

	.type	.L.str.72,@object               # @.str.72
.L.str.72:
	.asciz	"LdsRF"
	.size	.L.str.72, 6

	.type	_Z15mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_,@object # @_Z15mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_
	.section	.rodata,"a",@progbits
	.weak	_Z15mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_
	.p2align	3
_Z15mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_:
	.quad	_Z30__device_stub__mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_
	.size	_Z15mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_, 8

	.type	_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE,@object # @_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE
	.section	.rodata._ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE,"aG",@progbits,_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE,comdat
	.weak	_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE
	.p2align	3
_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE:
	.quad	0
	.quad	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE
	.quad	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEED2Ev
	.quad	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEED0Ev
	.quad	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE5BeginEv
	.quad	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE3EndEv
	.size	_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE, 48

	.type	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE,@object # @_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE
	.section	.rodata._ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE,"aG",@progbits,_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE,comdat
	.weak	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE
_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE:
	.asciz	"N7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE"
	.size	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE, 65

	.type	_ZTSN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEE,@object # @_ZTSN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEE
	.section	.rodata._ZTSN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEE,"aG",@progbits,_ZTSN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEE,comdat
	.weak	_ZTSN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEE
_ZTSN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEE:
	.asciz	"N7testing8internal23ParamGeneratorInterfaceISt4pairIllEEE"
	.size	_ZTSN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEE, 58

	.type	_ZTIN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEE,@object # @_ZTIN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEE
	.section	.rodata._ZTIN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEE,"aG",@progbits,_ZTIN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEE,comdat
	.weak	_ZTIN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEE
	.p2align	3
_ZTIN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEE
	.size	_ZTIN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEE, 16

	.type	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE,@object # @_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE
	.section	.rodata._ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE,"aG",@progbits,_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE,comdat
	.weak	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE
	.p2align	3
_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE
	.quad	_ZTIN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEE
	.size	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE, 24

	.type	_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE,@object # @_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE
	.section	.rodata._ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE,"aG",@progbits,_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE,comdat
	.weak	_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE
	.p2align	3
_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE:
	.quad	0
	.quad	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE
	.quad	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorD2Ev
	.quad	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorD0Ev
	.quad	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator13BaseGeneratorEv
	.quad	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator7AdvanceEv
	.quad	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator5CloneEv
	.quad	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator7CurrentEv
	.quad	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS3_EE
	.size	_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE, 72

	.type	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE,@object # @_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE
	.section	.rodata._ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE,"aG",@progbits,_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE,comdat
	.weak	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE
_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE:
	.asciz	"N7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE"
	.size	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE, 74

	.type	_ZTSN7testing8internal22ParamIteratorInterfaceISt4pairIllEEE,@object # @_ZTSN7testing8internal22ParamIteratorInterfaceISt4pairIllEEE
	.section	.rodata._ZTSN7testing8internal22ParamIteratorInterfaceISt4pairIllEEE,"aG",@progbits,_ZTSN7testing8internal22ParamIteratorInterfaceISt4pairIllEEE,comdat
	.weak	_ZTSN7testing8internal22ParamIteratorInterfaceISt4pairIllEEE
_ZTSN7testing8internal22ParamIteratorInterfaceISt4pairIllEEE:
	.asciz	"N7testing8internal22ParamIteratorInterfaceISt4pairIllEEE"
	.size	_ZTSN7testing8internal22ParamIteratorInterfaceISt4pairIllEEE, 57

	.type	_ZTIN7testing8internal22ParamIteratorInterfaceISt4pairIllEEE,@object # @_ZTIN7testing8internal22ParamIteratorInterfaceISt4pairIllEEE
	.section	.rodata._ZTIN7testing8internal22ParamIteratorInterfaceISt4pairIllEEE,"aG",@progbits,_ZTIN7testing8internal22ParamIteratorInterfaceISt4pairIllEEE,comdat
	.weak	_ZTIN7testing8internal22ParamIteratorInterfaceISt4pairIllEEE
	.p2align	3
_ZTIN7testing8internal22ParamIteratorInterfaceISt4pairIllEEE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSN7testing8internal22ParamIteratorInterfaceISt4pairIllEEE
	.size	_ZTIN7testing8internal22ParamIteratorInterfaceISt4pairIllEEE, 16

	.type	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE,@object # @_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE
	.section	.rodata._ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE,"aG",@progbits,_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE,comdat
	.weak	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE
	.p2align	3
_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE
	.quad	_ZTIN7testing8internal22ParamIteratorInterfaceISt4pairIllEEE
	.size	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE, 24

	.type	_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3
_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE:
	.quad	0
	.quad	_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.quad	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.quad	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.quad	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.quad	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.size	_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE, 56

	.type	_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE
_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE:
	.asciz	"St15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE"
	.size	_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE, 109

	.type	_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3
_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.size	_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE, 24

	.type	_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE,@object # @_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE
	.section	.rodata._ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE,"aG",@progbits,_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE,comdat
	.weak	_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE
	.p2align	3
_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE:
	.quad	0
	.quad	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE
	.quad	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEED2Ev
	.quad	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEED0Ev
	.quad	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE5BeginEv
	.quad	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE3EndEv
	.size	_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE, 48

	.type	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE,@object # @_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE
	.section	.rodata._ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE,"aG",@progbits,_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE,comdat
	.weak	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE
_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE:
	.asciz	"N7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE"
	.size	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE, 69

	.type	_ZTSN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEE,@object # @_ZTSN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEE
	.section	.rodata._ZTSN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEE,"aG",@progbits,_ZTSN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEE,comdat
	.weak	_ZTSN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEE
_ZTSN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEE:
	.asciz	"N7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEE"
	.size	_ZTSN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEE, 62

	.type	_ZTIN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEE,@object # @_ZTIN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEE
	.section	.rodata._ZTIN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEE,"aG",@progbits,_ZTIN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEE,comdat
	.weak	_ZTIN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEE
	.p2align	3
_ZTIN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEE
	.size	_ZTIN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEE, 16

	.type	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE,@object # @_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE
	.section	.rodata._ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE,"aG",@progbits,_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE,comdat
	.weak	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE
	.p2align	3
_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE
	.quad	_ZTIN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEE
	.size	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE, 24

	.type	_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE,@object # @_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE
	.section	.rodata._ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE,"aG",@progbits,_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE,comdat
	.weak	_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE
	.p2align	3
_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE:
	.quad	0
	.quad	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE
	.quad	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorD2Ev
	.quad	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorD0Ev
	.quad	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator13BaseGeneratorEv
	.quad	_ZN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator7AdvanceEv
	.quad	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator5CloneEv
	.quad	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator7CurrentEv
	.quad	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIS3_EE
	.size	_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE, 72

	.type	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE,@object # @_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE
	.section	.rodata._ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE,"aG",@progbits,_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE,comdat
	.weak	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE
_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE:
	.asciz	"N7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE"
	.size	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE, 78

	.type	_ZTSN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEE,@object # @_ZTSN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEE
	.section	.rodata._ZTSN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEE,"aG",@progbits,_ZTSN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEE,comdat
	.weak	_ZTSN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEE
_ZTSN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEE:
	.asciz	"N7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEE"
	.size	_ZTSN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEE, 61

	.type	_ZTIN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEE,@object # @_ZTIN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEE
	.section	.rodata._ZTIN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEE,"aG",@progbits,_ZTIN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEE,comdat
	.weak	_ZTIN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEE
	.p2align	3
_ZTIN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEE
	.size	_ZTIN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEE, 16

	.type	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE,@object # @_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE
	.section	.rodata._ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE,"aG",@progbits,_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE,comdat
	.weak	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE
	.p2align	3
_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE
	.quad	_ZTIN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEE
	.size	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE, 24

	.type	_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3
_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE:
	.quad	0
	.quad	_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.quad	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.quad	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.quad	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.quad	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.size	_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE, 56

	.type	_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE
_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE:
	.asciz	"St15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE"
	.size	_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE, 113

	.type	_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3
_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.size	_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE, 24

	.type	_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorIdEE,@object # @_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorIdEE
	.section	.rodata._ZTVN7testing8internal30ValuesInIteratorRangeGeneratorIdEE,"aG",@progbits,_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorIdEE,comdat
	.weak	_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorIdEE
	.p2align	3
_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorIdEE:
	.quad	0
	.quad	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorIdEE
	.quad	_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdED2Ev
	.quad	_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdED0Ev
	.quad	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE5BeginEv
	.quad	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE3EndEv
	.size	_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorIdEE, 48

	.type	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorIdEE,@object # @_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorIdEE
	.section	.rodata._ZTSN7testing8internal30ValuesInIteratorRangeGeneratorIdEE,"aG",@progbits,_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorIdEE,comdat
	.weak	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorIdEE
_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorIdEE:
	.asciz	"N7testing8internal30ValuesInIteratorRangeGeneratorIdEE"
	.size	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorIdEE, 55

	.type	_ZTSN7testing8internal23ParamGeneratorInterfaceIdEE,@object # @_ZTSN7testing8internal23ParamGeneratorInterfaceIdEE
	.section	.rodata._ZTSN7testing8internal23ParamGeneratorInterfaceIdEE,"aG",@progbits,_ZTSN7testing8internal23ParamGeneratorInterfaceIdEE,comdat
	.weak	_ZTSN7testing8internal23ParamGeneratorInterfaceIdEE
_ZTSN7testing8internal23ParamGeneratorInterfaceIdEE:
	.asciz	"N7testing8internal23ParamGeneratorInterfaceIdEE"
	.size	_ZTSN7testing8internal23ParamGeneratorInterfaceIdEE, 48

	.type	_ZTIN7testing8internal23ParamGeneratorInterfaceIdEE,@object # @_ZTIN7testing8internal23ParamGeneratorInterfaceIdEE
	.section	.rodata._ZTIN7testing8internal23ParamGeneratorInterfaceIdEE,"aG",@progbits,_ZTIN7testing8internal23ParamGeneratorInterfaceIdEE,comdat
	.weak	_ZTIN7testing8internal23ParamGeneratorInterfaceIdEE
	.p2align	3
_ZTIN7testing8internal23ParamGeneratorInterfaceIdEE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSN7testing8internal23ParamGeneratorInterfaceIdEE
	.size	_ZTIN7testing8internal23ParamGeneratorInterfaceIdEE, 16

	.type	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorIdEE,@object # @_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorIdEE
	.section	.rodata._ZTIN7testing8internal30ValuesInIteratorRangeGeneratorIdEE,"aG",@progbits,_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorIdEE,comdat
	.weak	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorIdEE
	.p2align	3
_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorIdEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorIdEE
	.quad	_ZTIN7testing8internal23ParamGeneratorInterfaceIdEE
	.size	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorIdEE, 24

	.type	_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE,@object # @_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE
	.section	.rodata._ZTVN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE,"aG",@progbits,_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE,comdat
	.weak	_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE
	.p2align	3
_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE:
	.quad	0
	.quad	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE
	.quad	_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorD2Ev
	.quad	_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorD0Ev
	.quad	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator13BaseGeneratorEv
	.quad	_ZN7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator7AdvanceEv
	.quad	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator5CloneEv
	.quad	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator7CurrentEv
	.quad	_ZNK7testing8internal30ValuesInIteratorRangeGeneratorIdE8Iterator6EqualsERKNS0_22ParamIteratorInterfaceIdEE
	.size	_ZTVN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE, 72

	.type	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE,@object # @_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE
	.section	.rodata._ZTSN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE,"aG",@progbits,_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE,comdat
	.weak	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE
_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE:
	.asciz	"N7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE"
	.size	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE, 64

	.type	_ZTSN7testing8internal22ParamIteratorInterfaceIdEE,@object # @_ZTSN7testing8internal22ParamIteratorInterfaceIdEE
	.section	.rodata._ZTSN7testing8internal22ParamIteratorInterfaceIdEE,"aG",@progbits,_ZTSN7testing8internal22ParamIteratorInterfaceIdEE,comdat
	.weak	_ZTSN7testing8internal22ParamIteratorInterfaceIdEE
_ZTSN7testing8internal22ParamIteratorInterfaceIdEE:
	.asciz	"N7testing8internal22ParamIteratorInterfaceIdEE"
	.size	_ZTSN7testing8internal22ParamIteratorInterfaceIdEE, 47

	.type	_ZTIN7testing8internal22ParamIteratorInterfaceIdEE,@object # @_ZTIN7testing8internal22ParamIteratorInterfaceIdEE
	.section	.rodata._ZTIN7testing8internal22ParamIteratorInterfaceIdEE,"aG",@progbits,_ZTIN7testing8internal22ParamIteratorInterfaceIdEE,comdat
	.weak	_ZTIN7testing8internal22ParamIteratorInterfaceIdEE
	.p2align	3
_ZTIN7testing8internal22ParamIteratorInterfaceIdEE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSN7testing8internal22ParamIteratorInterfaceIdEE
	.size	_ZTIN7testing8internal22ParamIteratorInterfaceIdEE, 16

	.type	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE,@object # @_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE
	.section	.rodata._ZTIN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE,"aG",@progbits,_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE,comdat
	.weak	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE
	.p2align	3
_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE
	.quad	_ZTIN7testing8internal22ParamIteratorInterfaceIdEE
	.size	_ZTIN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE, 24

	.type	_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3
_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE:
	.quad	0
	.quad	_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.quad	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.quad	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.quad	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.quad	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.size	_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE, 56

	.type	_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE
_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE:
	.asciz	"St15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE"
	.size	_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE, 99

	.type	_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3
_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.size	_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE, 24

	.type	_ZTVN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE,@object # @_ZTVN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE
	.section	.rodata._ZTVN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE,"aG",@progbits,_ZTVN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE,comdat
	.weak	_ZTVN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE
	.p2align	3
_ZTVN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE:
	.quad	0
	.quad	_ZTIN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE
	.quad	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED2Ev
	.quad	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEED0Ev
	.quad	_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE5BeginEv
	.quad	_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE3EndEv
	.size	_ZTVN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE, 48

	.type	_ZTSN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE,@object # @_ZTSN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE
	.section	.rodata._ZTSN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE,"aG",@progbits,_ZTSN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE,comdat
	.weak	_ZTSN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE
_ZTSN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE:
	.asciz	"N7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE"
	.size	_ZTSN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE, 103

	.type	_ZTSN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE,@object # @_ZTSN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE
	.section	.rodata._ZTSN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE,"aG",@progbits,_ZTSN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE,comdat
	.weak	_ZTSN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE
_ZTSN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE:
	.asciz	"N7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE"
	.size	_ZTSN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE, 106

	.type	_ZTIN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE,@object # @_ZTIN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE
	.section	.rodata._ZTIN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE,"aG",@progbits,_ZTIN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE,comdat
	.weak	_ZTIN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE
	.p2align	3
_ZTIN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE
	.size	_ZTIN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE, 16

	.type	_ZTIN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE,@object # @_ZTIN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE
	.section	.rodata._ZTIN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE,"aG",@progbits,_ZTIN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE,comdat
	.weak	_ZTIN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE
	.p2align	3
_ZTIN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE
	.quad	_ZTIN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE
	.size	_ZTIN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE, 24

	.type	_ZTVN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE,@object # @_ZTVN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE
	.section	.rodata._ZTVN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE,"aG",@progbits,_ZTVN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE,comdat
	.weak	_ZTVN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE
	.p2align	3
_ZTVN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE:
	.quad	0
	.quad	_ZTIN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE
	.quad	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEED2Ev
	.quad	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEED0Ev
	.quad	_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE13BaseGeneratorEv
	.quad	_ZN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE7AdvanceEv
	.quad	_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE5CloneEv
	.quad	_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE7CurrentEv
	.quad	_ZNK7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEE6EqualsERKNS0_22ParamIteratorInterfaceIS7_IJS4_S6_S8_ddEEEE
	.size	_ZTVN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE, 72

	.type	_ZTSN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE,@object # @_ZTSN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE
	.section	.rodata._ZTSN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE,"aG",@progbits,_ZTSN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE,comdat
	.weak	_ZTSN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE
_ZTSN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE:
	.asciz	"N7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE"
	.size	_ZTSN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE, 163

	.type	_ZTSN7testing8internal22ParamIteratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE,@object # @_ZTSN7testing8internal22ParamIteratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE
	.section	.rodata._ZTSN7testing8internal22ParamIteratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE,"aG",@progbits,_ZTSN7testing8internal22ParamIteratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE,comdat
	.weak	_ZTSN7testing8internal22ParamIteratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE
_ZTSN7testing8internal22ParamIteratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE:
	.asciz	"N7testing8internal22ParamIteratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE"
	.size	_ZTSN7testing8internal22ParamIteratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE, 105

	.type	_ZTIN7testing8internal22ParamIteratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE,@object # @_ZTIN7testing8internal22ParamIteratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE
	.section	.rodata._ZTIN7testing8internal22ParamIteratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE,"aG",@progbits,_ZTIN7testing8internal22ParamIteratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE,comdat
	.weak	_ZTIN7testing8internal22ParamIteratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE
	.p2align	3
_ZTIN7testing8internal22ParamIteratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSN7testing8internal22ParamIteratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE
	.size	_ZTIN7testing8internal22ParamIteratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE, 16

	.type	_ZTIN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE,@object # @_ZTIN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE
	.section	.rodata._ZTIN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE,"aG",@progbits,_ZTIN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE,comdat
	.weak	_ZTIN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE
	.p2align	3
_ZTIN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE
	.quad	_ZTIN7testing8internal22ParamIteratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE
	.size	_ZTIN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE, 24

	.type	_ZTVSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTVSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTVSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTVSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTVSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3
_ZTVSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE:
	.quad	0
	.quad	_ZTISt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.quad	_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.quad	_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.quad	_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.quad	_ZNSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.size	_ZTVSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE, 56

	.type	_ZTSSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTSSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTSSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTSSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTSSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE
_ZTSSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE:
	.asciz	"St23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE"
	.size	_ZTSSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE, 125

	.type	_ZTISt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTISt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTISt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTISt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTISt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3
_ZTISt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.size	_ZTISt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE, 24

	.type	_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3
_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE:
	.quad	0
	.quad	_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.quad	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.quad	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.quad	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.quad	_ZNSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.size	_ZTVSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE, 56

	.type	_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE
_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE:
	.asciz	"St15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE"
	.size	_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE, 157

	.type	_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3
_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.size	_ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE, 24

	.type	.L.str.73,@object               # @.str.73
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.73:
	.asciz	"/WMMA/build/_deps/googletest-src/googletest/include/gtest/gtest.h"
	.size	.L.str.73, 66

	.type	.L.str.74,@object               # @.str.74
.L.str.74:
	.asciz	"Condition parameter_ != nullptr failed. "
	.size	.L.str.74, 41

	.type	.L.str.75,@object               # @.str.75
.L.str.75:
	.asciz	"GetParam() can only be called inside a value-parameterized test "
	.size	.L.str.75, 65

	.type	.L.str.76,@object               # @.str.76
.L.str.76:
	.asciz	"-- did you intend to write TEST_P instead of TEST_F?"
	.size	.L.str.76, 53

	.type	.L__unnamed_3,@object           # @3
.L__unnamed_3:
	.asciz	"_Z15mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_"
	.size	.L__unnamed_3, 117

	.type	__hip_fatbin_wrapper,@object    # @__hip_fatbin_wrapper
	.section	.hipFatBinSegment,"a",@progbits
	.p2align	3
__hip_fatbin_wrapper:
	.long	1212764230                      # 0x48495046
	.long	1                               # 0x1
	.quad	__hip_fatbin
	.quad	0
	.size	__hip_fatbin_wrapper, 24

	.hidden	__hip_gpubin_handle             # @__hip_gpubin_handle
	.type	__hip_gpubin_handle,@object
	.bss
	.weak	__hip_gpubin_handle
	.p2align	3
__hip_gpubin_handle:
	.quad	0
	.size	__hip_gpubin_handle, 8

	.section	.init_array,"aw",@init_array
	.p2align	3
	.quad	_GLOBAL__sub_I_MmaSyncMultiLdsTest_32x32_NT_2x2.cpp
	.quad	__hip_module_ctor
	.weak	__pthread_key_create
	.ident	"AMD clang version 13.0.0 (ssh://gerritgit/lightning/ec/llvm-project amd-mainline-open 21381 5b03822b900367b162c033f9aef4395a0fc6b535)"
	.section	".note.GNU-stack","",@progbits
	.addrsig
	.addrsig_sym __gxx_personality_v0
	.addrsig_sym __pthread_key_create
	.addrsig_sym _ZL65gtest_GemmKernelTestsMmaSyncMultiLdsTest32x32NT2x2_EvalGenerator_v
	.addrsig_sym _ZL68gtest_GemmKernelTestsMmaSyncMultiLdsTest32x32NT2x2_EvalGenerateName_B5cxx11RKN7testing13TestParamInfoISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE
	.addrsig_sym _ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E_8__invokeES7_
	.addrsig_sym _ZZN11HipResource11allocDeviceIDF16_EESt10unique_ptrIT_PFvPS2_EElENUlPDF16_E0_8__invokeES7_
	.addrsig_sym _ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE_8__invokeES7_
	.addrsig_sym _ZZN11HipResource11allocDeviceIfEESt10unique_ptrIT_PFvPS2_EElENUlPfE0_8__invokeES7_
	.addrsig_sym .omp_outlined.
	.addrsig_sym .omp_outlined..56
	.addrsig_sym _ZZN10MatrixUtilI9col_majorE4fillIDF16_EEvPT_jjENUljjjE0_8__invokeEjjj
	.addrsig_sym .omp_outlined..57
	.addrsig_sym .omp_outlined..58
	.addrsig_sym _ZZN10MatrixUtilI9row_majorE4fillIDF16_EEvPT_jjENUljjjE_8__invokeEjjj
	.addrsig_sym .omp_outlined..59
	.addrsig_sym .omp_outlined..60
	.addrsig_sym _ZZN10MatrixUtilI9col_majorE4fillIfEEvPT_jjENUljjjE0_8__invokeEjjj
	.addrsig_sym .omp_outlined..61
	.addrsig_sym _ZNSt17_Function_handlerIFvvEZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE0_E9_M_invokeERKSt9_Any_data
	.addrsig_sym _ZNSt14_Function_base13_Base_managerIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE0_E10_M_managerERSt9_Any_dataRKS7_St18_Manager_operation
	.addrsig_sym _ZNSt17_Function_handlerIFvvEZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE1_E9_M_invokeERKSt9_Any_data
	.addrsig_sym _ZNSt14_Function_base13_Base_managerIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS2_S2_E4execEvEUlvE1_E10_M_managerERSt9_Any_dataRKS7_St18_Manager_operation
	.addrsig_sym .omp_outlined..64
	.addrsig_sym _ZZ8gemm_CPUIDF16_ff9col_major9row_majorS0_S0_EvjjjPKT_S4_PKT0_PS5_T1_S9_ENUljjjE0_8__invokeEjjj
	.addrsig_sym _ZZ8gemm_CPUIDF16_ff9col_major9row_majorS0_S0_EvjjjPKT_S4_PKT0_PS5_T1_S9_ENUljjjE_8__invokeEjjj
	.addrsig_sym .omp_outlined..69
	.addrsig_sym .omp_outlined..70
	.addrsig_sym _Z30__device_stub__mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_
	.addrsig_sym _GLOBAL__sub_I_MmaSyncMultiLdsTest_32x32_NT_2x2.cpp
	.addrsig_sym __hip_module_ctor
	.addrsig_sym __hip_module_dtor
	.addrsig_sym _Unwind_Resume
	.addrsig_sym _ZTVN10__cxxabiv120__si_class_type_infoE
	.addrsig_sym _ZTS44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test
	.addrsig_sym _ZTS29MmaSyncMultiLdsTest32x32NT2x2
	.addrsig_sym _ZTS8GemmTest
	.addrsig_sym _ZTVN10__cxxabiv121__vmi_class_type_infoE
	.addrsig_sym _ZTSN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE
	.addrsig_sym _ZTIN7testing4TestE
	.addrsig_sym _ZTVN10__cxxabiv117__class_type_infoE
	.addrsig_sym _ZTSN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE
	.addrsig_sym _ZTIN7testing18WithParamInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE
	.addrsig_sym _ZTIN7testing13TestWithParamISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES1_IJlllEEddEEEE
	.addrsig_sym _ZTI8GemmTest
	.addrsig_sym _ZTI29MmaSyncMultiLdsTest32x32NT2x2
	.addrsig_sym _ZTI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_Test
	.addrsig_sym _ZStL8__ioinit
	.addrsig_sym __dso_handle
	.addrsig_sym _ZN7testing8internal12TypeIdHelperI29MmaSyncMultiLdsTest32x32NT2x2E6dummy_E
	.addrsig_sym _ZTSN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE
	.addrsig_sym _ZTSN7testing8internal30ParameterizedTestSuiteInfoBaseE
	.addrsig_sym _ZTIN7testing8internal30ParameterizedTestSuiteInfoBaseE
	.addrsig_sym _ZTIN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2EE
	.addrsig_sym _ZSt4cerr
	.addrsig_sym _ZTSSt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTISt15_Sp_counted_ptrIPN7testing8internal26ParameterizedTestSuiteInfoI29MmaSyncMultiLdsTest32x32NT2x2E8TestInfoELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTSN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE
	.addrsig_sym _ZTSN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE
	.addrsig_sym _ZTIN7testing8internal19TestMetaFactoryBaseISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE
	.addrsig_sym _ZTIN7testing8internal15TestMetaFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE
	.addrsig_sym _ZTSN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE
	.addrsig_sym _ZTSN7testing8internal15TestFactoryBaseE
	.addrsig_sym _ZTIN7testing8internal15TestFactoryBaseE
	.addrsig_sym _ZTIN7testing8internal24ParameterizedTestFactoryI44MmaSyncMultiLdsTest32x32NT2x2_RunKernel_TestEE
	.addrsig_sym _ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE
	.addrsig_sym _ZTSN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEE
	.addrsig_sym _ZTIN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEE
	.addrsig_sym _ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEEE
	.addrsig_sym _ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE
	.addrsig_sym _ZTSN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEE
	.addrsig_sym _ZTIN7testing8internal22ParamIteratorInterfaceISt10shared_ptrI7KernelIEEE
	.addrsig_sym _ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt10shared_ptrI7KernelIEE8IteratorE
	.addrsig_sym _ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt10shared_ptrI7KernelIEEELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTSSt19_Sp_make_shared_tag
	.addrsig_sym _ZTISt19_Sp_make_shared_tag
	.addrsig_sym _ZTSSt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTISt23_Sp_counted_ptr_inplaceI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS1_S1_S1_5LdsRFLj2ELj1EESaIS4_ELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTS21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE
	.addrsig_sym _ZTS14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E
	.addrsig_sym _ZTS7KernelI
	.addrsig_sym _ZTI7KernelI
	.addrsig_sym _ZTI14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E
	.addrsig_sym _ZTI21MmaSyncMultiLdsKernelILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EE
	.addrsig_sym _ZZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance
	.addrsig_sym _ZGVZN13LazySingletonI12GemmResourceIDF16_fEE8instanceEvE9sInstance
	.addrsig_sym _ZZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance
	.addrsig_sym _ZGVZN13LazySingletonI9HipDeviceE8instanceEvE9sInstance
	.addrsig_sym _ZTSZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE0_
	.addrsig_sym _ZTIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE0_
	.addrsig_sym _ZTSZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE1_
	.addrsig_sym _ZTIZN14GemmKernelBaseILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_E4execEvEUlvE1_
	.addrsig_sym _ZSt4cout
	.addrsig_sym _Z15mmaSyncMultiLdsILj32ELj32ELj8EDF16_ff9col_major9row_majorS0_S0_S0_5LdsRFLj2ELj1EEvjjjPKT2_S5_PKT3_PS6_jjjjT4_SA_
	.addrsig_sym _ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE
	.addrsig_sym _ZTSN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEE
	.addrsig_sym _ZTIN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEE
	.addrsig_sym _ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEEE
	.addrsig_sym _ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE
	.addrsig_sym _ZTSN7testing8internal22ParamIteratorInterfaceISt4pairIllEEE
	.addrsig_sym _ZTIN7testing8internal22ParamIteratorInterfaceISt4pairIllEEE
	.addrsig_sym _ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt4pairIllEE8IteratorE
	.addrsig_sym _ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt4pairIllEEELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE
	.addrsig_sym _ZTSN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEE
	.addrsig_sym _ZTIN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEE
	.addrsig_sym _ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEEE
	.addrsig_sym _ZTSN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE
	.addrsig_sym _ZTSN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEE
	.addrsig_sym _ZTIN7testing8internal22ParamIteratorInterfaceISt5tupleIJlllEEEE
	.addrsig_sym _ZTIN7testing8internal30ValuesInIteratorRangeGeneratorISt5tupleIJlllEEE8IteratorE
	.addrsig_sym _ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJlllEEEELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTSN7testing8internal30ValuesInIteratorRangeGeneratorIdEE
	.addrsig_sym _ZTSN7testing8internal23ParamGeneratorInterfaceIdEE
	.addrsig_sym _ZTIN7testing8internal23ParamGeneratorInterfaceIdEE
	.addrsig_sym _ZTIN7testing8internal30ValuesInIteratorRangeGeneratorIdEE
	.addrsig_sym _ZTSN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE
	.addrsig_sym _ZTSN7testing8internal22ParamIteratorInterfaceIdEE
	.addrsig_sym _ZTIN7testing8internal22ParamIteratorInterfaceIdEE
	.addrsig_sym _ZTIN7testing8internal30ValuesInIteratorRangeGeneratorIdE8IteratorE
	.addrsig_sym _ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceIdEELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTSN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE
	.addrsig_sym _ZTSN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE
	.addrsig_sym _ZTIN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE
	.addrsig_sym _ZTIN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEEE
	.addrsig_sym _ZTSN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE
	.addrsig_sym _ZTSN7testing8internal22ParamIteratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE
	.addrsig_sym _ZTIN7testing8internal22ParamIteratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES2_IJlllEEddEEEE
	.addrsig_sym _ZTIN7testing8internal25CartesianProductGeneratorIJSt10shared_ptrI7KernelIESt4pairIllESt5tupleIJlllEEddEE12IteratorImplINS0_13IndexSequenceIJLm0ELm1ELm2ELm3ELm4EEEEEE
	.addrsig_sym _ZTSSt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTISt23_Sp_counted_ptr_inplaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES0_IJlllEEddEESaIS7_ELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTSSt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTISt15_Sp_counted_ptrIPN7testing8internal23ParamGeneratorInterfaceISt5tupleIJSt10shared_ptrI7KernelIESt4pairIllES3_IJlllEEddEEEELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym __hip_fatbin
	.addrsig_sym __hip_fatbin_wrapper

# __CLANG_OFFLOAD_BUNDLE____END__ host-x86_64-unknown-linux-gnu
